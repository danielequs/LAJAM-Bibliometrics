%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: byAffiliation.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Daniel Palacios
%%CreationDate: 1/8/14
%%BoundingBox: 0 0 662 468
%%HiResBoundingBox: 0 0 662 468
%%CropBox: 0 0 662 468
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 25332 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8FFA8CFA8FFA8CFA7CFA8%CFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CECEFFCECEA9CF%CDCFA9CFCECFCECFCDFFA8CFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFCDCEA8CECEFFA7CEA7FFC8FFA8AFA7CECECFA7FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FD04CECFA8CECECEA8CEA8FFA9CFA7CFCECFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA7CFCDCFA7CFA7CFA6CFA7CEA8CF%A7CEA8CDA7A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8CFCFCFA8CFCE%CFA9FFCFFFCECECECFCAFFCFCFA8CFA8CFA8FFA8AEA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCECEA6CFA7CEA8CFCDCEC8CF%A8CFA6CECECEA8CECECEA8FFCEFFA8CFA7CFA6CECDCE7D8283A87CA8837C%7D83A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CECFFFA8%CECEFFCDCFA9CFCDFFCECFA8FFA8CFCDFFCECEA8CEA8FFCECFA9FFA8CECF%A7A7A78383A7A77CA87CCFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8CFA6CEA7FFA7CEA7CEA8FFA8CEA7CEA8FFA8FFA8CEA7CEA7FFA6CF%A8CEA7FFA8CEA7FFA8FFA7FD04A8AEA7A8A8FFA8FFA8FFA8A8A8FFA8A8A8%FFA8FFA8FFFD07A8FFA7A883AEA8A8A7CF83A7A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8CECECFA8CFCECFCEFFA8FFCECFCEFFA8FFA9CFCDCECEFF%A8CEA8FFCECFA9CFCDFFA9FFA8FFA8FFA8FFA8AEA8CFA8AEA8AEA7A783A7%83A7A7FFCBFFA8FFFFA87DFF83A858A7FF83A88283FF7C83A7827CA7FFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFCDCFA9FFA7CEA8CEA8FFA8CEA8CEA7%FFA8FFA8CEA8CEA7FFCDCFA9CEA7CFCDCFA8FFA8FFA8A783A758A858837D%A87CA77DA758A758837CA7A7FF7D837CA88383CB83838257A87CA85782A8%587CA87DA758FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA9AE8383A7A8A8FFA8CEA8FFA9CECEFF%CECEC9CECEFFA7CECECEC9CFCEFFA8CECACFCDCFCEFFFD04CEC9FFCBFF83%A783837C8383A7A8A783A883FD04A8A7A7FD07A883FF7DA883A75883A883%7C837CA7A7827CAEA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8A77DA783CFA8CFA7CFA8FFA8%CFA8FFA8CFA8FFA8FFA8CFA7CFA8CFA8FFA8AE83A7A6CFA8CFA7AEA7FD05%A883A8A8A883AEA7A77DFD08A8FFA8A8A8AEA8FF837CA87C8382A8832CA8%7C8357A77CA77CFF83837C83A7FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFA8FFA8FFA8FFA8FFAFFFA8FFCFCECECFCECECAFFCFCFCECFCECFA8FFA8%FFCACFCFCFA8CFCECFA8FFA9FFA8FFA9FFA8AE83A8838483FFA9AE83A883%8383A883FFA883A8FFCBFF83AECBFF838383A883AEFFA883AE8383A8FF83%8283FF83FFA8A7A8A8A8AEA8A8A8AEFFA883A7A7FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8CAA7A8A8CAA7CFA8CFA7A8A8CF%A8A8A7AEA7A8A8FFA8CEA7FFCECEA7CEA7CEA6CFA8FFA8FFA8A883AEA8FF%A88383FFA8FFA8A883FFA8FFA8AE83A8A8FFA8A883FFA88383FFA8FFA8FF%8383A8FF8383A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8CAA7CAA7CAA1%CAA9FFA8AEA8AEA8AE84A883AEA8FFA8FFCFCFA8CFCECFC9CFCECEA8FFA8%FFA8FF83A8A9FFA9FFA883A8FFA8FFA883A8FFA8FFA883A8FFA8FF8383A8%FF83A8A8FFCBFFA8A883FFCBAE83FF7CA8FFA87CFF57A8CBA882FF57827C%A883827CA8A882587CA7FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8A1%A7FFA8A8A0A7A0A8A8A8A1FFA8A7A8FFA7A7A8FFA8A7A0A7A8A7A8A8A0A1%A7FFA8FFA8FFA8FFA8FFA883A8CAA7CAA8A859A8A8FFA8A883A8A8FFA8A8%58A883A8838383FFA88383FD04A8FF8383A8A883A8A87C7DFF8382A85757%FF7D83A857A8FFA85883FFA8A757FF5882A8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFA8FFAFCA9FC9AFFFA0CAAFCAA0FFA7C9AFFFA0FFA9C9A0CAAFCAA1FF%A8FFA1CFA1CAA9FFA8CAA1CAA7CAA7CAA9AE83AEA7CAA7CAA78A83FFA8FF%A883A8FFFFFFA88383A883AE83A8A8FF838383AE83FFA8AE83A883AEA8FF%58A8FFA87CFF7C8283AE82FF57A783FF837CA7FFA782A77C83FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A8FFA8FFA1A7A0FFA8A0A8FFA8A7A1A7A1FFA8A7A8%A8A0A7A1FFA7A0A7FFA8A7A8A7A0CAA9A8A7CAA7A7A7CAA7FFA883A8A87D%A7A7AE83A8A8FFA8AE83A883A8A8A883AEA8FFA8A883FFA8A883FFA8FFA8%FF8383A88383FFA87C83FF8382A883A8587C83A8587DA8A8FF835783A857%8283FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8A7A8A1A7FFA0FFA8FF%A1A7A1C9AFFFA0FFA7A7A8A1A8FFA8A1A1FFA1CFAFCAA0CAA8A8A1CAA7A8%A7FFA9FF83AEA8837CAEA883A8FFA8FFA884A8837CA8A883A8FFFFFF83A8%A8FF83AEA8A8A8AEA8A883FFA883A8FF7CA7FFA77CFF7CFF83577CFF57FF%A9FFA8FF8382A782A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A7A0%A7A0A1A8A0A8FFA8A1A7A7A0FFA8A1A8A1A1A7A0A7A8FFA8A0A8A7A7FFA9%A8A0CFA7C9A7CAA7CAA8CFA8A858AEA8FFA88383FFA8FFA8A87DAEFD04A8%83A883A8A8A883FFA88383A77C837DA88383A8FF8383A8A8577C57A8A882%A8FF5882A858587C7C827C587DA858FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFA9FFA0FFFFFFA0CFA7A7A7C9A1FFA8FD04A7CFA1FFAFCFA0CAA7CA%A1FFA1CFA7CAA1C9CFCECECFCECECECFCEFFA8AE83AE83A883FFA7C9A1CA%A8AEA7837CAEA8A8A8A783FF83A8A8FF838383A883AEA8A883FFFFFF83AE%FFCF83FFFFFFA8FFFFFFA8FFA8FFA8FFA8A8A8FFA9FFA8FFCBFFA8FFA8FF%A8FFCBFFA8FFA8FFA8A8FFA8A8A8FFA8A8A8FFA8A7A0A7A1FFA7A7A1A8A7%CAA8CFA8CAA8A7A1CAFD04A8A1A8A8FFA8CFA8FFA8CFA8FFA8FFA8A883A8%83FFA9CAA7CAA8AFA8AE83837CA883A8A8FFA8A8A8FFA8A8A8AEA8A8A8FF%A8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAA8CAA7CAA7CF%A8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFFFA8FFAFCAA1CAA7CAA7CAA8FFA8%CAAFCAA7CAA1A7A7C9A7CFFFA75758FD0557FFA95857FFA8FFA8FFA8577D%FFFFA8577C57575783A8FFA7CAA8FFA883FD06577CFFCBFFA8827CFFA8FF%FF8358FF837C5782577C7CFFCBFFA883577C577C57A8A9837CCAA0C9A1CF%A8C9CAAE5783A8FFA8FFA8825782577C83FFA8A8FFA8FFA8A8A1CAA7A8A0%A8A8A8A7CAA7A8A7A87DA77D837DA87C5758837C837C83A8CF5757A7A7A1%A7A1A72C83A8FF835757837C572C58A7A8A1CAA8572C7C83A883835758A8%FFA8AE577CA8FFA8FF5857A87C57837DA7585757A8A8FF57577D837D83A8%FF5758A8A7A1A8A1A8A1CA7C572CA8A8FFA8FF57577DA757577DFFFFA8FF%A8FFA8FFAFFFA7FFA8C9A7CFA8C9A1C9A8AE83AE83A7A8A732A7FFFFAFFF%A8FFA85857FFA8CAA8FFA75783FFFFA832A7FFFFA88257A7FFFFA88232A7%FFFFA8FFFFFFA8FFA8FFA8827CFFA8FFFF8357FF7C82A8A8A8FF83577CFF%A88258CF83A883A8CB8257FF7C8382A7A8FFA87C575783FFA8FFA87C58FF%FFFF5783FFA8FFA8FFA8FFA8FFA8A8A7CAA7A8A7CAA7A7A1CFCECFA7CFCE%CF7D577CFD06A8FF5757A7CAA7A8A8A83283A8FF83577CFFA8FF7D577CFF%A8A83258A8CAA7A7A1A7A1CAA8FFA8FF5782A8FFA8FF7C57A88257A87CA7%A7FF5757A8FF577CA8A8A7A8A7FF577CA8A883A8A7FFA8A733A85758A8FF%A8FF577CA8FFA8577CFFFFA8CAA8FFA8A77CA8A8A87CA7A7A77DAEA8A7A8%A7A7CF82A7CFA72CA7A8FFA8FFA8AEA85857CAA7CAA8CAA75783FFA9A856%A7CBFFFF822CA8FFFF7C5783FFA7CAA8CAA7CAA8FFA8FFA87C58FFA8FFA8%8357FF5882A7A78383CB8332A8FF8257A7A7A7A8FFA88257FFFFFFA8FFA8%FF5882FFA72CA8FFFFA8827CFFA88257A8A8A1A7A1A8A8A77CA8A7837C83%A8A87D7C7CA757A85783A8837CFF7D5758A783A783A8A8A85757A7A8A7CA%A8A82C83A8FF7D577CFFA8832C58A8FFA87C2CA77C837D8358A8A8FFA8FF%A8FF577CA8FFA8FF5858A87C57FFA8FFA8FF7C5783FF585757585783A8FF%5857A8CAA8FFA8FFA7577DFFA85757FFA8AEFD0557A8A8FFFFA8A8A8AF82%A7FFFF8382A8FFA8A783827CA783837CA85883FFA757585757577CA8FFA8%7C57A7A1CAA7FFA75783FFCBA85758577C5782A8FFA8FF7C57A7FFA8AEA8%A8A8FFFFFFA8FFA87C58FFA8FFA98357FF5882A8A883AEFF8357CFFF8257%FFA8A883A8A88257FFA7C9A7FFFF8357A783A75757A8FFA88257A8577CA8%FFA8A8AE84A884A8588383A7837C7DA77DA77C837D83A7A77CA77DA88357%7CA8A7A883FFA8AE5758A7CEA7CECEA72C83A9FF7D5757835757A7FFA8FF%A87C2CA8CFCFA7CFCFAE7C83A8FFA8FF577CA8FFA8FF7C58A87C57A87C83%7DFF5757A8FF5858A8A87D827CA85858A8CAA1A1A7FF5757575857582C83%A9FF5782CBA82C7CA8FFFFA8CFCECFA8CFA7CFA8FFA8A8A8CFA7CFA8FFA8%FFA8CFA8CFA8A732A7FFFFA8CAA7FFA85857CFA7C9A7FFA7577CFFFFA72C%A7FFA8337CA8FFA8FF7C5783CFA7CEA7CFA75757FFA8FFA88257FFCBFFFF%7C58FF7C7CA8FFFFFF7C5783FFA88257FFA8A77CA7A88257FFA8FFA8FF83%57A7FFA8FFA85857FFA87C58FFFFA72CA7FFA8CFA6CFA7CFC8CFA8CEA6FF%A7CFA7CECDCFA8CDA8FFA7CEC9CF7C577CFFA1A8A0A7A1A75757A8A8A1A8%A8A82C83A8FF83577CFFA8832C82A8FFA8A72C7CA783587C7CA85758A8FF%A8FF835757A883832CA7A87C57837C83575758FFA8FF57577C8358827DFF%57577C837C83837C57FFA8FFA8FF7C567DFF577CA8FFA87C2CA8FFCDFFA9%FFA8CECFFFCECECFCFA8CFCFCEA8CFCECEA9FFCECFCBA732A7FFCAA8A7A1%CAA88332A7FFFFA9FF8257A7FFFFA832A7FFFFA88257A7CBFFA87C57A7A8%CFA8FFA85757FFFFFFA9FFA77C575857A7CBFF838258825883A7FFFFFFA8%A77C82588257A7FFA77C82588258837CAEFFFFA8FFFFCF58A7FF837CFFA8%FFA8827CA8CEA8FFA8CFC8CFA8CFA7CEC9CFA7CEA7FFC8CFCDCFA8CFA7FF%7C577DFFA1CAA1A7A1CAA75757A7A8A87D5757FFA8FF83577CFFA8FF8357%57A8A8FF83572C82A7A8A8A75758A8A8838383FFA8A8A8FFFFA87CFFA8A8%7CFFA7837C8283A87C837CA8A8FFA883588258A8A8A7587C83FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFFFCECEA8FFCFCEA8FFCECFA7CECFCEA8FFCF%CEA8CECEFFCECFFFA72CA7FFFFA8CFA8A7A7FF835733FD0457AEFFFFA9A8%57A7CBFFA8FF7C5758FFA8FFA77C33FD05577CAE83A783A7A8FFFD04A87C%7CA8FFA87CA98357A883CFA757838357FFA88257A8A8A7A8A857A8A7A8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8CFA7CEA7CFA7CEA7CFA8A9A7CF%A7CFA8CFA8AFA8CFA8CFA7FFA8A8A8CFA8FFA8FFA8FFA8FFA77C7B8383A8%A8CAFD05A8FFA8FFA8A8A7A8A8CAA8FFA8A87C827CA7A8FFA8A8A1CAA883%83837D83A88357FFA8A857FF7C82CBFFA8A757FFA857A8A851AEA8FFA8FF%8357A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA9FFA8CAA0A7A0%C9AFCAA0C9A0CAA8C9A1A7A7FFA1A7A0C9A8FFA7C9A1A1A1FFA8FFA8FFA7%A7A1CAA1FFA8A1A1A7A1FFA0C9A8FFA9A7A1FFFFFFA0C9A9FFA9C9A1C9A0%FFFFCAA0C9A1FF83A7A7FF83AE8382A8FFA882CBA757837CFFA77C83837C%FF8382FFFFA8FFFFFF7C5783FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%A8FFA8A8A0CAA8A8A1FFA0A7A8FFA8A7A0FFA1A0A8A0A8CFA8FFA1A0A8FF%A8A8A8FFA8FFA7A0A8FFA8CFA8A8A0FFA8FFA8A0A0A8A8CAA0A1A8FFA8A0%A0CAA8FFA0A8A9A1A0FFA0A8A8FFA8FFA7A8A8A8838358FFA8A857FF7C58%7D83A8A8577C57CFCB8357FFA8FF7CA8A8FF7D577CFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFFA8FFA0A7AFCAA7A7A1C9A7FFA8FFA7A7AFCFA0CAA0%CFA8FFA8A1A8FFA8FFA9FFA8FFA9A7A1FFA8FFA8FFA8A1A8FFA8FFA0A7A7%FFA1A7A1FFA8C9A7A7A1FFA8A7A7FFA0A7A9C9A0CFA9FFA9A87CA77C837C%82A9FFA882FF837CFFFFFF8382CB8258FFA757A8FFFF7C7DFFFFFF8357A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A0A7FFA8CAA8CAA0A0A0A7%A8A8A0A7A0A7A8A0A0A1A1A8A0CAA8FFA8FFA8FFA8FFA0A7A8FFA8CAA8A8%A0A1A0CAA8A1A1A1A8A1A1A7A8CAA0CAA7A0A8FFA0A0A0A7A8FFA8A7A0A7%A8837C837CFFA8A85783A87C58FF7C7CA8FFA8A757FFA8577CFF575783A8%5783A7A7A87C57FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA0CAA9%FFA9FFA9C9A1FFA8FFA7A1A1CAA9FFA0CFA8FFA8A1A8FFA8FFA8FFA8FFAF%A7A1FFAFFFA0FFA8A7A8FFA9FFA0FFA0C9A1CFA1FFA7A0A1A7A0CAFFA7A7%C9A1FFA8FFAFCAA0CFA7A8A7AEA8FFA8A857827CAEFFA883FFA8FFA783A8%FF8383A8FF7C827C83A8AE58827CCFCBFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8A8FFA8A7A0FFA8FFA8FFA0A7AFFFA8A8A0CAA7CAA8A0A8FFA9FFA0A7%A8FFA8FFA8FFA8FFA7A0A8FFA8A0A8CAA0FFA8FFA8A0A8A799A8A7A7A8A1%A1CAA8A7A0FFA0A8A8A0A1FFA8FFA8A0A1FFA8FFA883A8837D83A7837CA8%83A7A7A87CA77DA87DAE7D83A8FF8383A9A7577C58FF837C577C83FFA8FF%A8FFA8FFA8FFA8FFA8FFFFA8FFA8A1A0CAA1A7A8A7A0CAA1CAA7A7A8CAA8%FFA0A7A1C9A8CAA0A7A7A7A1FFA8FFA8FFA1A0A1C9A0FFA8A1A1A7A1FFA0%FFA8CAA8CAA1FFA0FFA8FFA8A1A8C9A7FFA8A0A8A7A1C9A0CF7C837C837C%FF83A77CFF8383A8A883A783A7A8A77CAEFF8358FFFFA858FF57A8A8AEFF%A757FF8357A8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8A7A1A7A7FFA8A7%A1A7A7A8A7FFA8FFA8A8A1A7A1CAA8A8A1A7A1A8A8FFA8FFA8FFA8A8A7CF%A8FFA7C9A8C9A7CAA8FFA7FFA8CEA7CFA8FFA8FFA7CAA8CFA8FFA8CAA8A8%A1FFA88383A8838283837D83A88358A87DA883A7A8FF83A87DAE7C7CA8FF%837CA8587CFFA8FF7D7CCBA857A8A8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8%FFAFFFA9FFA8FFA9FFAFFFA8FFA8FFA8FFAFFFA9FFA9FFA8FFFFFFA8CAA8%CAA8FFA8FFA8FFA8FFA8CFCEFFCECECFFFA8CEA9CFCDCFCDCEA8FFCFCDCE%FFA9FFA7AEA883A8AEA8A7A7A783FFA8A7A8A883A8A7FF7C83A8FFCBFFFF%FFCBFFFF837CFFFFA858FFA85857AEFFA757A75783A8FFA8FFA8FFA8FFA8%FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A7A1CAA1A8A1A7A8A0A1A7A8A1A7CEA8CECDCEA8CFC8FFA7CE%A9CFCDCFA8CECDCEA8FFA8A77D8358837DA77CFF7C82FD04A883A7A7A883%A883FFA8A783A883A883A87C82A8FF837CA8FFA88257FF83577CA7A8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA1CAA8C9A8CAA0CAA1CAA0CAA1CECEFFCECE%CDCFA8CEA8CFCEFFA7CEA8CFCDCFCDCFA8FFA8A7A7CFA7A7A7AE83A8A7A8%83A87CA882837CA7FFFFA8FF82A783A77CA7838358FFFFA77CFFA8FFFF57%83A87CFFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A7A8A8A0CAA1A1A1A7A1%A8A0A8A7CEA8CEA7CFC8CFC8FFA7CDCDCEA7FFA7CEA8CEC9A9A8FFA8FFA8%FFA8FFA8FFA8FFA8A77DA77CA87D83A7FFA8FFA8FFA8FFA8FFA8FFA7577C%8357A8A87C7C8257A87D7CA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8CAA8CAA8CFC9CFA7CFA8CFCEFFCECFA9CECECEA8CFCDFFA8FFA8CECDCE%CECEA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8837CAEFFFF838383CFCBCFA7FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8CFA7CFCECEA7FFA7CEA8CEA7A9A8CDCDFFA7%CEA8FFA8CFCDCFA8FFCDCEA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFCEFF%CECFA9FFA7CEA9CFCEFFA8FFCECFA9FFA8CFCEFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDFCFFFD04FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2014-01-05T08:43:29-08:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-01-05T08:43:30-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-01-05T08:43:30-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9D4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXUyImCLB2V1DjxirvZXYZSAFnYK6h8MrjmhIWJA/FNF2WWLpDsKuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqzULcv5ev8M5LT&#xA;SlHGcQ/yu4+0T+wOQed9zQ2dm2G9BXMiZ8TDiw0SODilXPlt9v3I5ElqlOfH2I+Rycc3i+CMnIGQ&#xA;lf8AOA2tFVdNRs1a9aA0zK7R0+MwEQAOKcAa582MCXMBwqOhIp+OR0mWRziE/rhCQPnvGj8UyG1h&#xA;Zm6anYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVyAEMSK07ZrNfnnGe&#xA;OMZcPETZ2/SzgBRbAUlvhpRSchmzZMcYevj4skRdDkeiQAb26OoqqKipO+EZMufJIQlwQga5Aknr&#xA;zWgA70wxUjYN+FMqPaE8UckclSnjqv6XFy/angBquri61Pw196nLcWizCIuYHlwxrzHegyHcuABC&#xA;1BPLqa5gzyThPKYSjAY6oUN9uTIC681o2Dmu60Cn6cypyEp4omIrKCZCuoiD9jEcj5OqSnIkk1p9&#xA;GSGGMc5xQAjHgEuQ+qzR+C3tbfw+mSRQdhXvlEvGGpjGMxKVeo8I2j3fFO3CxVovMkPqSepLKs63&#xA;CRQrQmNztCxJ7fgM2VZBv33+xxfUs1CPzHJaOlqbhNR9Z+TEgQ+n+8Mfp02psv8AxtkcgyEbXxX8&#xA;Ov4+9B4q25pno737XV2bgSmFuDQPMOBFa1T0+g47fEOvzy/EZWbumcbtNsvZuxV2KuxVZ60XF25r&#xA;xjqJDUUWgqa+G2CwtuWWNmKq6swAJAIJAPQ/TjYVoXFueFJUPqEhPiHxEdQPGmPEEW200SvwZ1D0&#xA;5cSRXiO9PDGwm2obi3mqYZUkA68GDU+7ESB5IBVMKXYq7FXYq7FXYq7FXYq7FUPe3TW0PqLE0xLB&#xA;eKg9+5oD+rIzlQQTSEsdZa6eJDaTQtIzA81YBQq8gTUDZugygakWAdveiMr6JshordiaUzE1uDxc&#xA;uPYSiCb5dzbE0C0jfa5HqpGHWaXbGMcdo5Ik1tt1Kxlzvub2ZRvQjbfIRjk0+WZETOEzxbVYPVOx&#xA;DYcKVA3A6n55RLQ5M8ckpDhlOuEd3Dyv3p4wKWlV6hhT8cy8erzUBLFLj68uH33bExHeuEgAUdRv&#xA;yGYeTs05J5ZEVKwYH3BkJ0AovdWcLNHJOkZahHJgD+OTzHKfCymPrhfFGx1FWGPHEWCV6vE8a8HD&#xA;qTXmpqMsgcsskswhXo4Yg8zva2KAtqS4tiaesgA2ArlWgM8Q9UJGcjcpen9fILOUT1CB1OZ2027W&#xA;0mUXbQyC3IYAiQoeG5/ys3GQ+k1zpplLbYpQ93r7X0csKP8AVBN6zRPRXeFwsYVVO/w0d6fLMcyy&#xA;cVjlf2fiyw4jaH0ptfW3g/Shu/TAYyMnEP6hWKgb9rgDz9q1rtxyGLxKHFf4r9qxut1wtdaurGT4&#xA;nYlbm3E8r+mSJ40CzcT9ngwNVHfddsPDOUfmPn1XchdFocrXFu8l4Iws080zI4DbyholBB7qKew2&#xA;wjCbG/U/fsteaI0a21CxjiWVAA0KxtI0kdPUG5fY7g/fksMZR59yY7K8A8wNcIz3UDRepWSGMBj6&#xA;exADbb9icnHxL5hIJ70qeeFNH83ozhWEtySp6/vLZFT7ztlBkODJ7z9zG9pINhfWes3GrW3Jjp9p&#xA;ZC7tR/uyCRH9Xb+ZOAYfLK/VGZmP4RGx5dWO4N91IKQSz6Jot3Zkma2e/vYP8r0rgyUp/lLXKzZh&#xA;EjpxH5Fj0BHmjIbk6hr02rgn0Luxu47RTt+5g4KD/snLnJiXHMz6GMq9wZA3K/JV8tWy2cmn6rdJ&#xA;b6bbtYRwLwYF7gsEPqSUVQO3v75LTx4eGZqI4fmsBVE7bMss9V0+9NLWYS/Dz5KG48elQ1KZnQyx&#xA;lyLeJA8kXliXYq7FXYq7FVFLq2e4e3WRTPGAXjHUA9MiJgmurIwIF9EtvNWu7Qp6/ox8iKK3Ujfl&#xA;QKzGg23p9GY880o86b4YhLlaI07V5J4pJ3MYtI1JaRTWhXc8hU0236Ziy00MxM5cv1LOPDsOapd6&#xA;jKkC3EZQ2jKreq3T4jQdx1qMlHR44SGQdP0tEjkJ4QFO81C8tIkkf0Y0J4l5GoAx+z/bucu1GKB3&#xA;mPLmWEfEO0Q641DULeJprkRRQKRyYnoCfnv/AFyqOlx4jx1VeZ/WsTlkapWg1bTpYZLhJgYYv7xq&#xA;EcajvUZdnmJw9J5Sj9kgT9jd4UgaI5rrvV9NtGUXMyoZByRaEnj40AOa6ePJERo8MxzN3e1X+lnC&#xA;BldC0Sk8MsSSIeSOOSMO4bcH8ccWlzg2D0j17hH9R/BYyI5Fzca/D0zZaMZRD979Xw/RXW/g1yro&#xA;gtWu2tbGSVNpDRUPgT3y/JKg0Zp8MbQljYabHArXRSS5kAeQyMCQWHLoT4ZXGMQN+aMWn2si7Uh6&#xA;en6nD9WatpdniUBqA3Tb7xg2jIVyLWY+HMdxRV3pOnCCaQQjmFZuVT1oT45OWONHZsnhjRNIfSNL&#xA;sJ9OillhDSNyq1T2YjscjjxxMbLXhxRMQSHXvpxa3ZAkJGkdASaAAcgNzgntMLOhkii9SurVrC4V&#xA;ZkLFGAAYEnb55ZOQ4S2ZZjhO6FT/AJRk/wDGM/8AEjkB/dsB/dOsbDSHs4XlVDIyAuSxBrT54whG&#xA;guPHAxFta9DGkVnEq0jEgUL7dMGYbAIzgUAo6zZWtp6D2Y9O6LgKqk1I8aH3wZYiNVzY5oCNcPNz&#xA;waNf+Z7i1uNNie5tYopvrbUJbkaAFafs07k4CISykGIsDm5FAy5Kd35igs7bWtRWxDTWM0dtKA9G&#xA;mFVCkniacfVNBvkZZxESlX0mvf8Ai0GdWaXfpPRrfRtO1CwtI3tpZUht0Wien9ZfjJ0DbhvtDD4k&#xA;BCMojb9a8QABCm+oTPrF5p2n6LBP+jESIytMsPwXKB+Kr6bUBpvvgMzxmMYg8PnXP4Le9Acmru7e&#xA;a7TSbTR7e5ksLeN5YppFVIvUWgijqh5bDrSmCUrPAIg8I/AUnegOS+fUptNvbPT9P0iN7q5tzKYh&#xA;MsQQJ1jB4MpoT7YZZDAiMY7kd6mVGgEx0DWhq9pLMYGtpreZ7e4gchiskdKjkOvXLsGbxBdVRplC&#xA;XEEzy5m7FXYqpzzJDDJNIaJGpdj7AVOCUqFlMRZpiNrdrb3drqbiRZriRxelkcII5T8FGIpRds1c&#xA;J8MhPeyd/i7KcLBh0A2+CdacFfX9TeTeaMRLFXqIytfh+ZzLxb5ZXz2cXJ/dxrluhL8KmpaskIpG&#xA;+nu84HT1dwK+5XKsm051/M397Zj3jG/5ype/8ojAO5itQB/skyWT+4Huj+hjD++PvP6VPX5ILvUB&#xA;ZTeoYIImd/TRn/eyCkdeIP2R8WDUESlwnkB9rLTgxjxDmT9i+1WbV9CgVZPSvLSRalwSPUh6Bx7j&#xA;DAHLjH84feETIx5D/NP6Vt5qE1xpGpW91CIb23QCUKaqwbdWU4J5TKEhIVILDGBOJBuJRF3bX9vc&#xA;LqlkFmPorHPbNsSq71RvH2yc4yieOO+3JhCUSOCW2/NTuWbUbWO7t7aV42QcFjkCMONGpup/aNDv&#xA;2+WV5ckZAH9NM4DgJBP2LfqlwsjcIJ2FapIX3oQWqP3dRu269K4CQD+39nmvEK5j8fFF6vYldH9K&#xA;PkywUZeRqeI9/YHL58PDwg3Tr9UDKJKXzwXt4Ybiyghlj4JzZ2ZXWUfC24YcfhA/Z3yuUDLcAMse&#xA;efCOHkuaAPfWVsFAnRjNd8SWAdqFqkk7/DkhHcDr1aM0zOcQeie3n+8k/wDxjb/iJzJlyLfP6Skt&#xA;lc6tFZWi2dss0RWVpHJoQVZiFG4+1SgzHjKYAoW04SeAUuveMup2Ju0CBoeUyMRRTQkgn2wz3kL7&#xA;mOQXMWr3VnpDWVy9ssTPErAlCGKsBWhodjkpRjRplkxx4TQWp/yjJ/4xn/iRxH92gf3SCim0SNIo&#xA;57WR5eKepIqkoOacuTENsvavicqEoDYhEIQoWFbVrqK9t7WRFZUaXiQ1Aeg8CfHJ5JCQC6g2B725&#xA;baPStRjuOPO1k+Es3xFG8a4mPBK+jExGOV9EHLqNlpfnK4uL+UQW97aR/Vp2rwYo3xDl0rlRyCGY&#xA;mWwIbuICVnqEA8i3Gg63fRVNtd6nC9u5BHNFmhXkK9iRlRNwnIcjIfeGPME+aj5hsrnSNRgtoErp&#xA;GpX0E8ajpDcLIC6j2cbj+zI54HHIAfRKQPuKJjhPkSqXEujx+b9d/SOozafX6p6XozPDz/cfFXh1&#xA;pt9+SkYDNPikY8utdEmuI2aRHmO88r3Rkv7bUxZ6zaxBoJ4mKs4ZfURCpH7xWDDp/ZktRPFL1CVT&#xA;H4+KZmJ3vdSkXUtT1nQjLPJYXk2nu88kYUPWoLUDA8eX4ZE8U5ws8JMUbkjpsyvR9Hs9Jsxa2vIq&#xA;WMkkkh5O7t1ZjtvmdixDGKDdGIApHZaydirsVUby0iu7d7eavpPTkFNCQDWlchOAkKLKEzE2EBey&#xA;yXEU1i9hI8TH01IPFSAQQa0+H265TkJkDHh2boCiJcSFmNnLNbtLHc2dxQRJNyEblaD7RFagd8rl&#xA;wki7iWY4gDVEL7C0S0nfjeQXFpdk+o8p5TOaUC8waN1w44cJ5gxl80ZJ8Q5EEfJCCxSNx6Mck0UM&#xA;jmCB5iYuS1ZAF8TStMr8OuW4B5Xs2cd89r8t18GtQ2xnmSJOUzGSVjKD8RHwbkfZ8MlHNw2a5+bR&#xA;KUDVy5IXzPqdhpemnU7ZZJfrV0iusMxh4yCNyTUK/hRhkdROMI8Qvc99NU9UYgbA1slFv5i1B7SU&#xA;J5YvZ0vVVpLgySu0i0qpD+j0p0pmPHMeE/u5Hi67/qa/zsyQeHlyT7RpLrXBcPe2d7pAQJGImkdV&#xA;kUg12ZE6U3zKxA5b4hKHx/Y2YdRL+aPit8necLbUraeJbT6jDZ+mqKHM3LmHP8inYR1zGxjDnHqj&#xA;XD5nz7vixxZpZCT1TxtdsvTdoplkkVC6x9CaKzgbjwU5YdJpiOV/E/jp9jdITiLKD8reZD5g06S8&#xA;Nv8AVvTmaH0+fqVoqtWvFP5vDLdCYGJMRw799+f6XGhk4xbFL7zKU1q8sNP0e4mlt3dXFrM1WVG4&#xA;ligiegqcx56n1mMYk13H9jiSA4iAD8F9l530uB3sdR0yfTTcKUkmZi7gMKVPJUYD5DDHWRHplExt&#xA;sxZRA8qZFEtpDdssUFw6y8o1YEGIhz9oH5bA+GZI4RLYH9Ds5AzhuR+lj3mnV9Fs7tLCz+tXV9Ev&#xA;o+hbuFRSWL0Y8HLNyPQDMbU5YRPCLMvJ1kjGOwU11TzTHFbtJ5dkkjtohCoJcsUC8fiAFSae2Dxc&#xA;oA9HJBuwa5J55S1Cy1a2vol046fInFLpCxZmLBqElgrV+eZOlyRmCOHh722BEgRVK3mHV7TRLeys&#xA;Wt2nhvXMIo/EruN+hr9rJZ8oxgRq7ROogR6JgNAsAKD1Kf65y7wYr+XikMfmCwuNO1JzaPw0KQgL&#xA;6m8h5MK1pt9nMUZ4mMtvoY+kj+qp/wCMr/UbLknly6ntZRVXRiQaHqCE8Rkfzcpj6CQkz4h9OyK8&#xA;v+a9Gv5V0ie3ktLtTRLa6HKpG/EEjqPAgZPBqoSPARR7inHOP0o7zP5lj8v29u/1Y3HruY1RWCUo&#xA;K+By3U6jwgNrtnknwoD/ABhrv/UtXf3n/mjKvzc/9TLHxT/NR3mDzQujW1lNLatI12wQx8uJQkA7&#xA;1B6Vy3PqfDAJHNlPJw0661K7F7JH9TSVoQ/pyFSd0BkAB94yPpyE8suIiuX9v3ObHDEgG/x/aiYt&#xA;RkNzbx/WIZ45SykxD4uQFaceZNB47++WDKbAsG/x3sTjFHYhLLTz3YXPmRtFWIgB3iS65DizoDtS&#xA;ncggb5VHWxOTgr4uGMoMqZPma2sMtvzBvbsy/U9CuLlYWKu0T8gD9CZro64y5QJaBmJ5BNfLfm+y&#xA;1uWa2ET2t7AKyW0vWgNCQduh2NRl+n1QyEiqIZwyCSY/pa19UxCpbkV7dQSO5/yT/nTLfGjdOT4R&#xA;q1O91f0L1LGC2ku7t4zM0cZRQsYPHkzSMg3bYYzy1LhAstBlRpLL7Vwt1MqwyfWZRDaG0Kozl5Ea&#xA;UBWDhRxDHlU02zHyZNztuaFfazGYAURuCoS6jLpqM1zA6SLaM8kT0kb04JFX4GEjbt63SvbImZhz&#xA;H8P3H3+bKeoHUHv6N2MtidX01IpmdrmL68qBRxClacm32Zl2+jK+GyBE7kWPkz/Ng7VzCtBqvlye&#xA;we6trEyBbiO1WIBUdmdlWFhVgOB5KVNemY4jMxsS61y89v2OMJwq6SPz9JZSeT7RrO2NpEL7gYCA&#xA;OLxrKjD4Sy9V/ZNMjmjIYfUf4/lz2as5BiKFJxomoRjQ7ZPrao8dpB6SclG4gSo3FPtV71zYYcg4&#xA;Bv0H3IiTXP8AFJ5ZytJLIVkM0H+65f2dtiAQKH5g5lQN+5tiTZec/lxIyQanx9Gpe3FJyoH2Zqce&#xA;RArWn0ZptCaEuXTn8UaEWTz+DN2VntbskW7IsEpJjC8wxrxrxJ6rvmyqweXIuXl2j1Sb8qf+UeuP&#xA;+Yt/+TUeUdmf3Z9/6A4Wn+lB+VP/ACY2t/6k/wDyfjyvTf4xP4/eGOP+8LvzTu7CWCzsY+MupCXk&#xA;FT4nVCpBU0/mYrQe2PaUokCI+q11BHLqyWae40fyeJH/AN6rOyVTXf8AepGF3/2WZhJx4fMRbSeG&#xA;PwYb5EW1trOfVJpFGp3Lulo8qu4Cx8DK1VDU5eoBXNdo6ETL+I8v0tem4Qbkyr9PSyTLbRXkX1uZ&#xA;OUUXpy9CeXOnp148WXfvuczfGJNAiz7/ANTmDJiut08tRdBGN1w9QnYx1px7VqB75lQ4urGXDezD&#xA;vzJ/3o0P/mIb9aZgdoc4e/8AU4ufozjNk5DzKx/44/nP/jMf+Jvmmh9GX3uIOUky0HTtTudA017V&#xA;aqttIAWfgpk5TBQafF+18t965dgxyljjXd+tnCJMRSh+YcE40zTtZljFtqcU/pkp1C/E8dSC268A&#xA;evfI66J4YzO0rRmGwPVU/Mq49TS9HuGFOcgkIHugOHtCVxiVznYLv0/5cv7xULakJLiQKo4qqAu4&#xA;K/QpJpXsT7Y+Pjkf4t08cSerX5jwLb6do0CszLFMEVmNWoqgCpx18ajEea5xQDJL3yxpt7fSXMk0&#xA;4lYqZI0kovELx4lafZalTmZPTxlKyS2nGDu1rV5HoHlu5mR2Z41YQs5BZpZWNCaAD7TV2HTBml4W&#xA;Mn8WiR4YsCvvLc+meVdM1yIFdQilFzO+9QspBjJ/1Sq/STmsnpzDFGY+rm45hUQer03TL+LUNPt7&#xA;2L7FxGrgeBI3H0HbNzjmJREh1cuJsW8+8j+ZdG0eDUV1Cf0nkn5RoEdiwAP8oP45qtHqIYxLiPVx&#xA;cUxG7TPyjb3WpeaL/wAyeg1vYToY7YOOJf7I5AfJKk+Jy7SxM8pyVUSzxi5GXRl0mnNJJ6gmZfi5&#xA;UrtXbYfcMtz6iEJcO5lzoC9m7wid7QUug30d+l9YXarMsRt5hcKZUdC5kU/C0ZBUse+UT1MYyjIc&#xA;XFIHbhJOx7huowkcio3Hlq8kuGv0u0W+WWKWOb0yU5JD6Lhk5V4uCejbZLjjLIBxVkIEhYry/A5o&#xA;OI81195dv7+r3N1F6ptpICY4yqgSSRyA0LsdvSp175DNmidybJ4o7RPMHfbypJxE/JDf4KaKST6p&#xA;dGN5PrCqzLUpHOAAiEHpGOXH55AzxDF4ol6d+nftVeSPAN0F0nkuEyGOCYizk+r+vbTEycvq0gZQ&#xA;Cx2BjqlPlk8/h4xe/AQDyMhQ+7ZfAtIfzA02TTvKdvaGUSwRXyi1/mSL05OKMamvHoD4ZRnyCWGh&#xA;dCW1gjaj382rPDhjXmqab5F8sS6XpdxcRzGa+jiqVeg5vF6hPsNjmRDR4uGJN3Kvutlj04lG/K2Q&#xA;aHc6ZZaZDaWkU0dvGYxEsnFmpcyEqahiPtN88ysGSEYgAGtvtcv8sY7e/wCxh35apZxrrH1yEz+h&#xA;6DCNRyNVMgNBtXrmnwwmYy4TRBHS+9xdCSJEd7OXlsX02/eCOSP9y3NpeQBHAkEcifcHM3FHNuTI&#xA;cPu8u/8AYOTl59hukH5VAjy7cVHW7cj/AJFx5b2b/dn3/qcLT/Sx600GHWvPWsWs00kCoZpQ8RAY&#xA;kSqtNwdvizEjhGTPIE1z+9qEOKZDejW9t5W84m01WFJIpKC0vXH2Ax+CQV2Ffst4Y4ojDmqQ9xWI&#xA;4JUWe+bIJJ/LeoxxirmB2A8eI5fwzaakXjl7nJyD0ljP5d6jpg8uTR3ihvq07BwVDUSQBwxr2qh+&#xA;7NVgyzGKoCJo9WvTmPDuyCDVvK1y7x2axPcKvqqPSA3J5Keg3qtcuxZpmQsQ+F/juP4DbxQPJA+Q&#xA;/M2o67FePeiMGBkCempX7Qatak+GZGi1EsoPF0a8OQy5oP8AM6GZbTTr9F5JaXFZB4cqEV+lKZDt&#xA;EGoy7ijONgWTQ+YNFlsherewi3K8i5dRQeBBNQfbMwZ4GPFYptExV2wPS1aXyp5o1EAiG8lYxVHU&#xA;Bi3/ABvmrx74skuhcaP0yKO8uz6e+haasmux2PpROstqJxG3IvJQmjqR9oHp2y3AY8EfXw+V+/zZ&#xA;QI4RuhNcuW8y3Om+XtNma8itiGvL4A8TxHDmSxNaLWpruTleaXjGOOJuuZRM8dRCP/M9Ujs9KUUV&#xA;EnoPAAKMt7R2Efeyz8gjPMOsWcs0b2Gp27FgiuFu4o0AVjWu56hqHbp8ssz5QT6ZD/TBlOQ6H7Ug&#xA;82rKugaLLNM0hlmDku6y8aIBtIuzDatcxdUD4cST1asn0hk2pXui3Nw00Wr2K1CgcrhQag7n4W8B&#xA;mVlMJGxKPzdhj1MIiifuSjzTJL5h1TSvL8E6MrJ9Zu7iH4491NGG/wDLWn+sMq1JOWUcYPmXDzES&#xA;lwjkjp/I2qz27W83mG5khccWiZaqR4Ec8slopEUZmlOI96j+W17LFDe6FdbXGnysVU/ylqOB8n3+&#xA;nB2fMgGB5xXAeY7kD5B0jTtSsNXhvIEl5zFA5UF1BB+yxFQcq0OKM4yBHVjhiCDaJ8palc6Hq8nl&#xA;bU2+DkTp8x2BDGoUez9v8qoyelyHHPwpfBOOXCeEs+pyQAdRWo+eRM/B1EpTB4ZiNGr5dNnMqw2o&#xA;orDYmo2JyjVTE8uOYM4xqW4ib+XCefuTEbENBuIoehJqPuyWbTnLPihfFGETGR23Blz5c+qg0GyV&#xA;HLuKD6cpxQyTGM7wkZ5Dy5Xxd6SQLcHFCx2J2FMsyaOXFHFAXGNylxciTt0+JQJdWjT1FYdCQcni&#xA;jMaWeKQ9UIyj7xW1fcg1xAsU/MTSdQ1TRoYLCEzzLcrIyAgfCEcV+Ijuwy/UYpSwxAG+33ONniSN&#xA;u9M9N0+ZdI0eKX93NZRwmVDueSwmMrt7tmXDGeCAP8Nfc3YpcMa8qQlvoV3amGKMq8fOBpCnwKPR&#xA;cMXYEsS7DbbKY6eUaA8vscuWcSs+/wC1jmoaJr/lvXp9Y0aNbmzuSxlgJG3M8ihWoPX7JH+3jZMO&#xA;TDMzhuC6vw5Rlcd19/rvnLXbJ7Gz0Z7OO4BjmnkJpxP2qM4QAEfPbDPPmyx4RGrWUpnaqZT5Z0qD&#xA;RtHgsfVV5Fq0zg7GRjVqew6DM3T4xjgI23QxmIpIvLujalbeedWvp4SlrOswikLKeXKVGGwNdwPD&#xA;MbBikM8pEbG/vaoQImT0TLzr5cj1rSiE4i+t6vasaCp7x1P81Pvy7WYBkj/SHJnlx8Q82/Jz64ul&#xA;/U9atmiktgFjmcqwkjpsDQndem+OkM+GpjkuLiqixy88pa9oWqPqPlsLcWsn2rVqNRSalCpI5L4E&#xA;Gv68xJ6XJjlxY9x3NRxSibirjzT5lkRoY/LLLckH94AwWrA1P2R/Mf2sl+ZyHYY908c/5q/yTonm&#xA;DRtOvXlgSKaZ42RJHXdVVga0O27Drh0mHJjibC4YSATn61qpheTVorebTePCaOGknImi/tGnEk/P&#xA;MjilXrox8mw8Q+oJTPofkSK9lV9OflErMw9UhSVZl+FDKGapSmy06VplEsOAH6fx82swhfJMDdh9&#xA;ZtfLzWK2+lz2ju9o6pX4WNKek7LTbLeL1jHVRI5f2M734a2Q17oOgQ+YtN09NNt/q93HO0pKnlWN&#xA;QVoa5CeDGMkY8Io2xMI8QFLNDOuSzanBpAsLG1s7uW2VPQarCM0BYqwqaYMPGTIQ4YgGuSwveqb8&#xA;xpqN7qelaNKlpNNLC8skk0bsgkQblQGBANMOoEpSjA0TSzskBD6FpWiy3WpWGraXaJc6ZwaSeDn6&#xA;bI6lq0YkggDIYccCZRnEXHuRCI3BHJ1vZaj5nsI5IILSz0aAsunRTRtK5Vfh5H4gFG1MYwlmjsAI&#xA;DkoBmPJT1XRbLRfL0lzfaZZTX3qiKJ4g6xcXpR5KmopvXBlwjHjuUYmSJREY7gWnHlzy9faff/Wp&#xA;DZSRSQ8DLBGySCnHiqkkgpRcyNPglCVnh5dGyECDezJszG1BxaRpsV++oR26JeSikk42Zgadfuys&#xA;YoiXFW7HhF23YaVp+nrItlAsAlblIF7nxOGGKMPpFJEQOS2/0XSr+WOW8tkmlh/unavJd67EU74J&#xA;4YyNkIMQea7VrtrPTri5X7caEpX+Y7D8TgzT4YEt2KHFIBJ4dDgk0+G5uIWvrycB5Xd2BHJS1BQj&#xA;5fjmNHTgxBI4pFyTnIkQDwxCG1RfQs7K3uY2htI7pQWZyS0bVL1oeQpv75XlFRiCKjxfYzxbyJG5&#xA;4UfbR6H9SvpdMNWWF1kblIaVUkfbPtl0Rj4ZGHd5tUjk4gJ9/kkrJaRaTZz2UzLq7lQEjkZmYk7g&#xA;rU0+7MQiIgDE+tyQZGZEh6EZctpH+IL8aq9FAi9IcpAK+mOVOBGWzMPFlx+Xf3NcRPw48Hmir9ox&#xA;Fp2m6bIYre+YsZFZi3pijNQsS29csyEVGENhL7mvGDcpS5xRi+WdHQqyQlJEIIkDvyqPHfLhpcY6&#xA;Nf5mfemuZDjse0u1h1e6u76+X1ljmaG3ib7KKtD06b1zBxQGUmUt96DmZZHGBGO21lMf0XY2cF1J&#xA;bRCJpYyHCk0NAabdO+X+FGIJArZp8WUiLKR6CvluS0tYp41a9Y0NUkNWLGnxAcfxzE0/hGIBHq+L&#xA;lZ/FBJH0rbuV7XzTcX1aQxSQRT/6s0VKn5ccEzw5jLoCPtCYDixCPXf7Cq+ZpXnv4okP7qyaMy/8&#xA;ZJWHEf8AAiuS1ZJkB0jX2sdMKiT1lf2Jl5ikeSGHTojSW+kEZI6iMbu33Zkak2BAc5NGnFEyP8K3&#xA;yzNItvNp8xrNYyGP5oTVT+vBpZGjE84p1I3Ehykx9F0drC7WReWqGaQWypy9TkSOHT3zBAhwm/rv&#xA;ZzDx8Qr6K3TbWLe9/RunPcxvcR2/E38KmrN8I3NOtN65lZ4y4I3vXNx8Mo8Uq2vkibQeW30+5mgV&#xA;FtZ1CXSjkKdQAVG6n4uoyzH4RiSOR5tGo4+U0ohvJJWntrGzhnS6RkRZHl5SqA7ks7Fh9uXl15cT&#xA;40ykTJsRAN+/8dXCB7lBWuLDzdpU2pKLZJoZ4I2eZ5RWpYVkkZjvyA65EXHLEy2sEc0cpC0yvZ4r&#xA;jzxpSQOJGtre4efiQeIcBVrTxOXTIOeNdAWZNzCWeXtEW/vtdkN7eWvDUrheFrO0Sn4q1IHU5Tgw&#xA;8Upm5D1HkWEIWTv1RHmKylufOGkW0VzJaubaalxGRzFAfHx75LPAnNEA1sUzFyCj5bhAsdb0GdSm&#xA;vFJRPOzEtcB1IjlDNU7cv498jpx6Z4z9e/x80QGxj1THyNqtk+gQWbyLDd2QaG5gc8XUqx3INMu0&#xA;eWPhgdQzxSHDTek6ra61otz+mjB9Xe6ktVDHgjBaFBUn7XcUOOLKMkDx1V0sZCQ3S/SA+i+aoNFs&#xA;rxrvS7qJ5Pq7EObcqCR8Q6Akfj9OVYv3eUQibifsYx9MqB2Zrmxb3Yq7FXYqhtRtBeWM1sTT1VKg&#xA;+B6g/fleWHFEjvZ458MgUrsdUvrO2S1vNPuHmhUIskKeojBdgag7Zj48sojhlE2O5yMmKMjcZCj3&#xA;u1c3lxb6dc/VJA8VysskC0dwiE+G1SMc3FIRNHaXJcPCDIX0RL6hJeW1zAtlcxM0MnFpUCgnjQAU&#xA;Y7muWHIZAjhkNmsY+Eg2OaG0vTLiGxtnihiguBHSRmULJyqa1PFj09/vyvDiIiKABpnlygyNkkLI&#xA;5bmy1u+me0uJ0nWEK8KBgSiANueHfACYZJEgm65MiBLHEWBVqmox3l7HbahaW8kdzZSEi3mARnUg&#xA;cqbnrTDlEpgSiN4nkWOMxjcZHaXcrprc8nFE026ErGhDpwQePxnJjOT/AAyticAH8UU1zJcdIYYt&#xA;Q0m8uRDbNdWNy5lX0yOSMeo4mmYcYyxyNC4ly5GOSIs1IN2UF7LeapdyWzwJdRqsKOV5EqnHoDjj&#xA;jIylIirCzlERiAbprSptVstPhtW0yV2jBHIOgBqSfH3yvDnMIVX089xsnLCMpE8XP3r5tJmubnWk&#xA;kTjHdrCIHPQtGh38dmplnhcZn3Sqj8GIyiIh5XagdE1BNKEbj176S4SWcqa7KQBuadFGUEAYrJG8&#xA;ud7fNs8UGe2wpES6TJf6vNPeo6W8KrHagMVJruzfCa5bERzTJuwOVH9TWMnBAAczzWw6RLp+sxT2&#xA;cbvazIY7qrcipG6sSxrjwDHlFfxeaTl48ZB5jko22gzS6VPFKvo3YuHmtpNqg7FTUdjjHTkwIO0r&#xA;sMpZwJgjcVRRkWo6rHawNPp8kkp5LcBGWoK04sBXcN+GWjLMRFx36tRxwJNS2QEVtOs1/qEmm1t5&#xA;hGq2BAZnPNauVAYbfa6ZVGBuUjHY9F1ExwCN8RChe31za2ktxBoy6fIkZMd4FjPD4UNCOG1Q3Hfw&#xA;wTmYixHh83BJocqWeZpJru6msJEM9uLi1jSJEgZx6kcjPwMw4hjxG5OOoJkTHmLHd5965N9kNYIN&#xA;J1yOysw1skjWyP6kVuFPqKzuk0ka19Q8aIEbjXIQHhz4Rty7vt8+5iPSaCPsLq5ga49CE1uby5Ut&#xA;FCCC63YT4yq0B9Ku7eFcthIi6HOR6f0v1Mon7/0qch1hWsb6SI3GoGCVokCKWVniqoZvRXinLYry&#xA;DCvVsiePaXOVfo9348132PVZrNz9WTTNRgZpr6S/itXuri3WOURSKxeNQUTb+0VwZZVwyH1cQFkI&#xA;kao+ar5303TVtI702kLXT3EMTysgLFXYKa+O2S1mONcVC7CcsRVoG8shfa3c+WbaS20vT7ZEljh+&#xA;rxytPI6glwH7rWlRv/CqcOKZxCoxHlzYkWeHkFbUrOXyzoVsdP8ARi1Ga4jt57xIVHNXLfsmvttk&#xA;skDhgOGuImrpMhwDbmirfUfMGn+ZrPSb+5iv7e+jkdJljELoY1LfZUkU+HLI5MkcghI8Ql8EiUhK&#xA;jvbKczW52KuxV2KuxV2KuxV2KuxV2KoPWJZYtNuJImKyKvwsOoNRlWckQJDZhAMgCgJTdrd28BaV&#xA;Q8cjupmUEEOgB5U32PTKTxcQG/Xr7m4VRO3yQFzq2opDfwLIfVMsslvL/LFE7hh9Hpgf7LKZ5pAS&#xA;HWzXuH9n2tscMSYnyF+/8fcrXepX8Ul9Ash5SsxtH/kEW8o+haEZKeWQMh38vhzYwxxIB7ufx5Mn&#xA;jJKQE9Sqk5qof3ep95aTzDcgDVYdRs2W9l5ZYSMM+UhxQPv5hGQXuFw/vm+WYmQj8hjvlxD7ykfW&#xA;WjyEZD9T0HfL8Ixz1cZYB6QDxECh+Px0QbEd3JRQFP7fX+GVa4TyznmjywkV8N5fJMaAA70FqVtJ&#xA;cWF1aoQsk0UkSs3QFlKgmnbfOhjMZcVx/ij97ROPMJK+i6zLfQ3plhhaCUzrAC7gmQhJFL0T/dS0&#xA;B4ncnbvlZwzMhLbY3+Pg1cJu1kegajxtzcQ2tysCJC1pI7ek4jj4CQkxt8Vf2eJ271wDBLawDXT8&#xA;BeAtJpl5pltqU0yQ3EVzIzkEM/CCS4Zni4kAFBHIW/1ieopiMZgJE0b+6+XyXhItL5mhZHtLaC2W&#xA;Nv31rGwp6knrywo9Qwdh6SKar2yk1yAHl8yPuYnuRGnQnUZprJrT6rayxf6QKfvVaOSRUHNmPxIy&#xA;1UgHxyeMcZMaof2pjvsnos5tO0xodNX1pwxces1S7SScpGY1Xc1JzK4DCNR5tlUNkOZ/NIVmFvbs&#xA;agCOpU0oeR5c26GlNtx4dMhxZe4IuSS+b5NV/RttdX0KpDZX9tOxjG4ReYYkBpP5l/t6nG1Rlwgy&#xA;GwkC15Lqz3q3mrU9P1G306xsbmK5nuryAqkTByEU8mchTsB75PU5IzEYxNkyCckgaA71bzHD5R1J&#xA;pY768itdQsxtOHEc0ZpyFK05Dfp/HDqBintI1IfNMxE8+bH7y8v9Q8i6a967mVr6ONLg7O6AsFep&#xA;7+/tmLOcp4I8X85qJJgL72X6X5YsLC8a+Ms95fMvD61dSeo6r/Kuygfdmfj08Yni3Mu8t8cYBtOM&#xA;yGbsVdirsVdirsVdirsVdirsVWuiOpV1DKeqkVGAi1BpZNbW0xBmiSQr05qGp9+CUAeYZCRHIrxF&#xA;AEKekhVq8l4ihqamo98xc2kMzYkYjuCRMhspEVZfTWjV5bDevWvzyOPRmMuIzkeex5bqZqnJax06&#xA;KBXMMaPJwZhX1k8LLiFhyvRyf2T1y7UaE5MEY8skAKPmGIlR8m+a+ozdiNsxpaHKdLjx16oyBPzL&#xA;LiHESpilRXp3zcZeIQPAPVWzWOa9pWqaGg7ZrNP2PhGMeJG59TZ5szkN7NSMGII6kb/PL+zcGTDA&#xA;45chI8PuRMg7rc2LB2KuxV2KuxV2KuxVayK6lXAZWFGUioIPjiQqHtdK0u0kMtrZwQSNszxRojH5&#xA;lQMhHFGO4ACBEDktuNI0m5l9W5soJpf9+SRI7feQTgligTZAKDEHoryW1tLGsckSPGhBRGUEAr0I&#xA;B6UyZiDzCaVcKXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqjf0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pi&#xA;rv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/&#xA;pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ9&#xA;5/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0Tcfz&#xA;J95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0Tc&#xA;fzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pirv0TcfzJ95/pir//&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe Mac PDF Plug-in</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Daniel Palacios</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Java Printing</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0180117407206811822A9BA6F9DFF55D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0180117407206811822A9BA6F9DFF55D</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:620a918e-2b7c-8e4b-8fbb-06b6a6c059db</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c615d955-409e-994d-8806-bf3468de12f9</stRef:instanceID>
            <stRef:documentID>uuid:620a918e-2b7c-8e4b-8fbb-06b6a6c059db</stRef:documentID>
            <stRef:originalDocumentID>uuid:620a918e-2b7c-8e4b-8fbb-06b6a6c059db</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811822A9BA6F9DFF55D</stEvt:instanceID>
                  <stEvt:when>2014-01-05T08:43:30-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>792.000000</stDim:w>
            <stDim:h>612.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -468 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 468 li
662 468 li
662 0 li
cp
clp
0 468 mo
662 468 li
662 0 li
0 0 li
0 468 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .102 cmyk
f
gsave
0 468 mo
662 468 li
662 0 li
0 0 li
0 468 li
cp
clp
383.737 217.896 mo
391.526 217.896 li
391.526 252.537 li
391.526 258.052 392.547 262.063 394.586 264.572 cv
396.626 267.082 399.871 268.338 404.321 268.338 cv
408.674 268.338 411.759 267.156 413.575 264.795 cv
415.394 262.435 416.303 258.435 416.303 252.798 cv
416.303 217.896 li
423.125 217.896 li
423.125 252.686 li
423.125 260.179 421.586 265.631 418.509 269.042 cv
415.431 272.455 410.527 274.161 403.803 274.161 cv
396.953 274.161 391.896 272.394 388.634 268.857 cv
385.369 265.321 383.737 259.856 383.737 252.464 cv
383.737 217.896 li
cp
430.821 272.788 mo
430.821 217.896 li
449.069 217.896 li
454.51 217.896 458.904 218.501 462.256 219.713 cv
465.605 220.925 468.504 222.978 470.952 225.87 cv
474.834 230.469 476.775 236.527 476.775 244.044 cv
476.775 253.168 474.364 260.24 469.543 265.26 cv
464.722 270.278 457.935 272.788 449.182 272.788 cv
430.821 272.788 li
cp
438.611 266.966 mo
448.588 266.966 li
455.709 266.966 460.753 265.05 463.72 261.216 cv
466.909 257.137 468.504 251.66 468.504 244.785 cv
468.504 238.331 466.936 233.263 463.795 229.58 cv
461.891 227.329 459.615 225.79 456.971 224.961 cv
454.324 224.133 450.344 223.719 445.027 223.719 cv
438.611 223.719 li
438.611 266.966 li
cp
487.728 272.788 mo
487.728 217.896 li
518.401 217.896 li
518.401 223.719 li
495.518 223.719 li
495.518 241.336 li
514.691 241.336 li
514.691 247.085 li
495.518 247.085 li
495.518 266.966 li
519.996 266.966 li
519.996 272.788 li
487.728 272.788 li
cp
528.904 272.788 mo
528.904 217.896 li
536.694 217.896 li
536.694 266.966 li
561.396 266.966 li
561.396 272.788 li
528.904 272.788 li
cp
597.23 251.797 mo
587.886 228.133 li
578.501 251.797 li
597.23 251.797 li
cp
605.466 272.788 mo
599.494 257.581 li
576.238 257.581 li
570.192 272.788 li
562.961 272.788 li
584.732 217.896 li
592.447 217.896 li
613.885 272.788 li
605.466 272.788 li
cp
621.831 272.788 mo
621.831 217.896 li
638.447 217.896 li
643.715 217.896 647.75 219.058 650.558 221.382 cv
653.363 223.707 654.768 227.082 654.768 231.508 cv
654.768 238.826 651.07 244.02 643.678 247.085 cv
662 272.788 li
652.432 272.788 li
636.816 249.57 li
629.545 249.57 li
629.545 272.788 li
621.831 272.788 li
cp
629.545 243.748 mo
632.068 243.748 li
641.859 243.748 646.756 239.903 646.756 232.213 cv
646.756 226.55 642.65 223.719 634.442 223.719 cv
629.545 223.719 li
629.545 243.748 li
cp
.656916 .200534 1 .0402838 cmyk
f
137.569 284.791 mo
137.569 217.685 li
175.067 217.685 li
175.067 224.804 li
147.09 224.804 li
147.09 247.293 li
170.578 247.293 li
170.578 254.322 li
147.09 254.322 li
147.09 284.791 li
137.569 284.791 li
cp
186.81 217.685 mo
196.331 217.685 li
196.331 260.034 li
196.331 266.775 197.578 271.679 200.072 274.748 cv
202.566 277.816 206.534 279.35 211.975 279.35 cv
217.295 279.35 221.066 277.907 223.287 275.02 cv
225.508 272.133 226.619 267.243 226.619 260.352 cv
226.619 217.685 li
234.962 217.685 li
234.962 260.215 li
234.962 269.374 233.08 276.04 229.317 280.211 cv
225.554 284.383 219.561 286.468 211.339 286.468 cv
202.966 286.468 196.785 284.307 192.795 279.985 cv
188.805 275.663 186.81 268.982 186.81 259.944 cv
186.81 217.685 li
cp
251.694 284.791 mo
251.694 217.685 li
272.007 217.685 li
278.445 217.685 283.38 219.106 286.81 221.948 cv
290.241 224.789 291.957 228.915 291.957 234.326 cv
291.957 243.274 287.438 249.621 278.4 253.37 cv
300.799 284.791 li
289.1 284.791 li
270.012 256.406 li
261.125 256.406 li
261.125 284.791 li
251.694 284.791 li
cp
261.125 249.288 mo
264.208 249.288 li
276.178 249.288 282.163 244.588 282.163 235.188 cv
282.163 228.265 277.145 224.804 267.11 224.804 cv
261.125 224.804 li
261.125 249.288 li
cp
360.831 282.977 mo
352.7 285.305 345.612 286.468 339.566 286.468 cv
328.895 286.468 320.71 283.431 315.013 277.355 cv
309.315 271.279 306.466 262.574 306.466 251.238 cv
306.466 240.114 309.353 231.462 315.126 225.28 cv
320.9 219.099 329.001 216.008 339.43 216.008 cv
346.26 216.008 353.364 217.021 360.739 219.045 cv
360.739 227.842 li
351.49 224.698 344.402 223.126 339.475 223.126 cv
332.22 223.126 326.59 225.59 322.585 230.517 cv
318.58 235.444 316.577 242.381 316.577 251.328 cv
316.577 260.186 318.724 267.07 323.016 271.982 cv
327.308 276.894 333.324 279.35 341.062 279.35 cv
344.236 279.35 347.667 278.791 351.355 277.673 cv
351.355 255.817 li
360.831 255.817 li
360.831 282.977 li
cp
f
264.093 214.274 mo
257.324 214.274 251.878 211.929 247.759 207.237 cv
243.639 202.545 241.579 196.343 241.579 188.627 cv
241.579 180.872 243.649 174.669 247.792 170.021 cv
251.935 165.374 257.467 163.05 264.389 163.05 cv
271.29 163.05 276.816 165.368 280.97 170.004 cv
285.124 174.642 287.201 180.828 287.201 188.563 cv
287.201 196.452 285.124 202.709 280.97 207.335 cv
276.816 211.961 271.19 214.274 264.093 214.274 cv
264.191 209.1 mo
269.18 209.1 273.037 207.303 275.761 203.709 cv
278.485 200.117 279.849 195.045 279.849 188.498 cv
279.849 182.146 278.48 177.18 275.745 173.598 cv
273.009 170.015 269.224 168.224 264.389 168.224 cv
259.532 168.224 255.741 170.021 253.017 173.614 cv
250.292 177.208 248.929 182.202 248.929 188.597 cv
248.929 194.969 250.281 199.979 252.983 203.626 cv
255.687 207.274 259.422 209.1 264.191 209.1 cv
308.512 213.055 mo
308.512 169.443 li
291.206 169.443 li
291.206 164.269 li
332.74 164.269 li
332.74 169.443 li
315.434 169.443 li
315.434 213.055 li
308.512 213.055 li
cp
339.61 213.055 mo
339.61 164.269 li
346.532 164.269 li
346.532 184.839 li
369.738 184.839 li
369.738 164.269 li
376.661 164.269 li
376.661 213.055 li
369.738 213.055 li
369.738 190.014 li
346.532 190.014 li
346.532 213.055 li
339.61 213.055 li
cp
389.237 213.055 mo
389.237 164.269 li
416.499 164.269 li
416.499 169.443 li
396.159 169.443 li
396.159 185.101 li
413.202 185.101 li
413.202 190.21 li
396.159 190.21 li
396.159 207.878 li
417.917 207.878 li
417.917 213.055 li
389.237 213.055 li
cp
425.84 213.055 mo
425.84 164.269 li
440.606 164.269 li
445.287 164.269 448.875 165.302 451.369 167.367 cv
453.864 169.433 455.111 172.433 455.111 176.367 cv
455.111 182.872 451.826 187.487 445.256 190.21 cv
461.539 213.055 li
453.033 213.055 li
439.157 192.419 li
432.696 192.419 li
432.696 213.055 li
425.84 213.055 li
cp
432.696 187.244 mo
434.938 187.244 li
443.64 187.244 447.99 183.827 447.99 176.993 cv
447.99 171.96 444.343 169.443 437.048 169.443 cv
432.696 169.443 li
432.696 187.244 li
cp
.420417 .0190738 .507683 0 cmyk
f
217.451 325.176 mo
213.019 326.443 209.155 327.077 205.861 327.077 cv
200.046 327.077 195.585 325.423 192.48 322.111 cv
189.374 318.801 187.821 314.056 187.821 307.878 cv
187.821 301.814 189.395 297.099 192.541 293.73 cv
195.688 290.361 200.103 288.678 205.787 288.678 cv
209.51 288.678 213.382 289.229 217.402 290.333 cv
217.402 295.127 li
212.36 293.412 208.497 292.556 205.812 292.556 cv
201.858 292.556 198.79 293.898 196.607 296.585 cv
194.424 299.27 193.332 303.051 193.332 307.927 cv
193.332 312.754 194.502 316.506 196.841 319.183 cv
199.181 321.859 202.459 323.197 206.676 323.197 cv
208.406 323.197 210.276 322.894 212.286 322.283 cv
212.286 310.374 li
217.451 310.374 li
217.451 325.176 li
cp
226.574 326.164 mo
226.574 289.592 li
247.01 289.592 li
247.01 293.472 li
231.764 293.472 li
231.764 305.208 li
244.539 305.208 li
244.539 309.039 li
231.764 309.039 li
231.764 322.283 li
248.072 322.283 li
248.072 326.164 li
226.574 326.164 li
cp
254.025 326.164 mo
254.025 289.592 li
261.216 289.592 li
271.348 317.886 li
281.775 289.592 li
288.2 289.592 li
288.2 326.164 li
283.357 326.164 li
283.357 296.41 li
273.274 323.718 li
268.259 323.718 li
258.474 296.337 li
258.474 326.164 li
254.025 326.164 li
cp
316.183 312.177 mo
309.957 296.41 li
303.705 312.177 li
316.183 312.177 li
cp
321.669 326.164 mo
317.691 316.031 li
302.198 316.031 li
298.17 326.164 li
293.351 326.164 li
307.856 289.592 li
312.995 289.592 li
327.278 326.164 li
321.669 326.164 li
cp
332.595 326.164 mo
332.595 289.592 li
343.666 289.592 li
347.175 289.592 349.865 290.365 351.735 291.915 cv
353.604 293.464 354.539 295.712 354.539 298.659 cv
354.539 303.535 352.076 306.996 347.15 309.039 cv
359.358 326.164 li
352.982 326.164 li
342.579 310.693 li
337.735 310.693 li
337.735 326.164 li
332.595 326.164 li
cp
337.735 306.815 mo
339.416 306.815 li
345.94 306.815 349.201 304.254 349.201 299.13 cv
349.201 295.357 346.467 293.472 340.998 293.472 cv
337.735 293.472 li
337.735 306.815 li
cp
371.788 327.077 mo
369.333 327.077 366.195 326.543 362.373 325.472 cv
362.373 320.333 li
366.492 322.242 369.877 323.197 372.53 323.197 cv
374.572 323.197 376.216 322.663 377.46 321.592 cv
378.704 320.521 379.326 319.112 379.326 317.366 cv
379.326 315.934 378.918 314.714 378.103 313.709 cv
377.286 312.703 375.783 311.584 373.592 310.349 cv
371.071 308.891 li
367.958 307.111 365.762 305.436 364.486 303.862 cv
363.209 302.289 362.57 300.457 362.57 298.363 cv
362.57 295.547 363.592 293.228 365.635 291.407 cv
367.678 289.588 370.281 288.678 373.444 288.678 cv
376.26 288.678 379.234 289.146 382.364 290.085 cv
382.364 294.83 li
378.509 293.313 375.635 292.556 373.741 292.556 cv
371.945 292.556 370.462 293.033 369.292 293.989 cv
368.123 294.944 367.538 296.147 367.538 297.598 cv
367.538 298.816 367.967 299.896 368.823 300.835 cv
369.68 301.773 371.244 302.895 373.519 304.195 cv
376.138 305.678 li
379.301 307.474 381.508 309.171 382.76 310.769 cv
384.012 312.366 384.638 314.286 384.638 316.526 cv
384.638 319.707 383.464 322.26 381.116 324.187 cv
378.77 326.114 375.659 327.077 371.788 327.077 cv
.19791 .410834 .670069 .0102846 cmyk
f
34.1797 201.461 mo
28.9805 188.301 li
23.7607 201.461 li
34.1797 201.461 li
cp
38.7588 213.139 mo
35.4375 204.68 li
22.5029 204.68 li
19.1396 213.139 li
15.1177 213.139 li
27.2266 182.605 li
31.5186 182.605 li
43.4429 213.139 li
38.7588 213.139 li
cp
74.9355 219.246 mo
70.1357 217.691 66.1128 215.842 62.8667 213.696 cv
61.5747 213.833 60.5776 213.901 59.8765 213.901 cv
55.7769 213.901 52.4448 212.417 49.8799 209.446 cv
47.3159 206.476 46.0327 202.618 46.0327 197.872 cv
46.0327 193.003 47.3286 189.115 49.9219 186.206 cv
52.5137 183.297 55.9756 181.843 60.3086 181.843 cv
64.6548 181.843 68.1206 183.301 70.7065 186.216 cv
73.2925 189.132 74.5859 193.038 74.5859 197.935 cv
74.5859 204.949 71.9795 209.803 66.7666 212.499 cv
70.2725 214.04 73.9106 215.14 77.6787 215.8 cv
74.9355 219.246 li
cp
60.1855 210.664 mo
63.3066 210.664 65.7207 209.542 67.4258 207.301 cv
69.1318 205.058 69.9849 201.888 69.9849 197.79 cv
69.9849 193.814 69.1318 190.703 67.4258 188.454 cv
65.7207 186.205 63.3477 185.081 60.3086 185.081 cv
57.2695 185.081 54.8965 186.205 53.1919 188.454 cv
51.4868 190.703 50.6338 193.829 50.6338 197.832 cv
50.6338 201.82 51.4795 204.956 53.1709 207.239 cv
54.8618 209.521 57.1997 210.664 60.1855 210.664 cv
80.3687 182.605 mo
84.7007 182.605 li
84.7007 201.875 li
84.7007 204.941 85.2686 207.173 86.4028 208.569 cv
87.5376 209.966 89.3428 210.664 91.8198 210.664 cv
94.2397 210.664 95.9546 210.007 96.9658 208.694 cv
97.9766 207.38 98.4819 205.155 98.4819 202.019 cv
98.4819 182.605 li
102.278 182.605 li
102.278 201.957 li
102.278 206.125 101.422 209.158 99.7095 211.056 cv
97.9976 212.953 95.2715 213.901 91.5308 213.901 cv
87.7207 213.901 84.9077 212.918 83.0918 210.953 cv
81.2769 208.986 80.3687 205.946 80.3687 201.833 cv
80.3687 182.605 li
cp
125.333 201.461 mo
120.136 188.301 li
114.915 201.461 li
125.333 201.461 li
cp
129.913 213.139 mo
126.592 204.68 li
113.657 204.68 li
110.294 213.139 li
106.271 213.139 li
118.381 182.605 li
122.673 182.605 li
134.597 213.139 li
129.913 213.139 li
cp
144.965 213.901 mo
142.916 213.901 140.296 213.455 137.104 212.562 cv
137.104 208.27 li
140.542 209.866 143.37 210.664 145.583 210.664 cv
147.289 210.664 148.661 210.217 149.7 209.322 cv
150.738 208.428 151.257 207.251 151.257 205.793 cv
151.257 204.598 150.917 203.58 150.236 202.741 cv
149.555 201.901 148.3 200.967 146.47 199.936 cv
144.367 198.718 li
141.768 197.232 139.935 195.833 138.869 194.52 cv
137.803 193.207 137.27 191.677 137.27 189.93 cv
137.27 187.578 138.123 185.642 139.828 184.122 cv
141.534 182.602 143.707 181.843 146.347 181.843 cv
148.699 181.843 151.181 182.234 153.795 183.019 cv
153.795 186.979 li
150.577 185.714 148.177 185.081 146.595 185.081 cv
145.096 185.081 143.858 185.479 142.882 186.278 cv
141.905 187.076 141.417 188.08 141.417 189.29 cv
141.417 190.308 141.774 191.208 142.489 191.992 cv
143.204 192.775 144.511 193.711 146.41 194.799 cv
148.596 196.037 li
151.237 197.535 153.08 198.952 154.125 200.286 cv
155.17 201.62 155.693 203.223 155.693 205.094 cv
155.693 207.748 154.713 209.88 152.753 211.489 cv
150.792 213.098 148.197 213.901 144.965 213.901 cv
161.694 182.605 mo
166.026 182.605 li
166.026 213.139 li
161.694 213.139 li
161.694 182.605 li
cp
179.855 213.901 mo
177.807 213.901 175.187 213.455 171.996 212.562 cv
171.996 208.27 li
175.435 209.866 178.261 210.664 180.475 210.664 cv
182.181 210.664 183.552 210.217 184.591 209.322 cv
185.629 208.428 186.147 207.251 186.147 205.793 cv
186.147 204.598 185.808 203.58 185.127 202.741 cv
184.446 201.901 183.191 200.967 181.362 199.936 cv
179.258 198.718 li
176.659 197.232 174.826 195.833 173.76 194.52 cv
172.694 193.207 172.161 191.677 172.161 189.93 cv
172.161 187.578 173.014 185.642 174.719 184.122 cv
176.425 182.602 178.598 181.843 181.239 181.843 cv
183.59 181.843 186.073 182.234 188.686 183.019 cv
188.686 186.979 li
185.468 185.714 183.068 185.081 181.487 185.081 cv
179.987 185.081 178.749 185.479 177.772 186.278 cv
176.797 187.076 176.308 188.08 176.308 189.29 cv
176.308 190.308 176.666 191.208 177.381 191.992 cv
178.095 192.775 179.402 193.711 181.301 194.799 cv
183.487 196.037 li
186.128 197.535 187.971 198.952 189.016 200.286 cv
190.061 201.62 190.583 203.223 190.583 205.094 cv
190.583 207.748 189.604 209.88 187.644 211.489 cv
185.685 213.098 183.088 213.901 179.855 213.901 cv
f
422.757 276.564 mo
427.945 276.564 li
427.945 299.645 li
427.945 303.319 428.624 305.991 429.983 307.663 cv
431.343 309.335 433.505 310.171 436.471 310.171 cv
439.369 310.171 441.425 309.385 442.636 307.811 cv
443.847 306.238 444.452 303.573 444.452 299.818 cv
444.452 276.564 li
448.999 276.564 li
448.999 299.744 li
448.999 304.736 447.974 308.368 445.923 310.641 cv
443.871 312.915 440.605 314.051 436.125 314.051 cv
431.562 314.051 428.192 312.873 426.019 310.517 cv
423.844 308.162 422.757 304.521 422.757 299.596 cv
422.757 276.564 li
cp
458.146 313.137 mo
458.146 276.564 li
478.582 276.564 li
478.582 280.445 li
463.336 280.445 li
463.336 292.701 li
476.136 292.701 li
476.136 296.531 li
463.336 296.531 li
463.336 313.137 li
458.146 313.137 li
cp
485.301 313.137 mo
485.301 276.564 li
496.37 276.564 li
499.881 276.564 502.569 277.339 504.439 278.888 cv
506.31 280.436 507.244 282.685 507.244 285.633 cv
507.244 290.509 504.781 293.969 499.854 296.012 cv
512.063 313.137 li
505.688 313.137 li
495.284 297.667 li
490.439 297.667 li
490.439 313.137 li
485.301 313.137 li
cp
490.439 293.789 mo
492.121 293.789 li
498.645 293.789 501.906 291.227 501.906 286.103 cv
501.906 282.331 499.172 280.445 493.702 280.445 cv
490.439 280.445 li
490.439 293.789 li
cp
544.807 312.148 mo
540.374 313.417 536.511 314.051 533.217 314.051 cv
527.4 314.051 522.94 312.396 519.834 309.085 cv
516.729 305.773 515.177 301.029 515.177 294.851 cv
515.177 288.788 516.749 284.072 519.896 280.704 cv
523.043 277.335 527.459 275.651 533.143 275.651 cv
536.865 275.651 540.736 276.203 544.757 277.306 cv
544.757 282.1 li
539.716 280.386 535.852 279.529 533.166 279.529 cv
529.214 279.529 526.146 280.872 523.962 283.558 cv
521.778 286.243 520.688 290.023 520.688 294.9 cv
520.688 299.727 521.856 303.479 524.196 306.156 cv
526.535 308.833 529.814 310.171 534.031 310.171 cv
535.761 310.171 537.631 309.867 539.641 309.257 cv
539.641 297.347 li
544.807 297.347 li
544.807 312.148 li
cp
561.095 314.051 mo
558.641 314.051 555.502 313.516 551.68 312.445 cv
551.68 307.306 li
555.799 309.216 559.185 310.171 561.837 310.171 cv
563.88 310.171 565.522 309.636 566.767 308.564 cv
568.011 307.494 568.633 306.086 568.633 304.34 cv
568.633 302.907 568.225 301.687 567.408 300.682 cv
566.593 299.677 565.09 298.557 562.898 297.322 cv
560.379 295.864 li
557.265 294.085 555.069 292.409 553.793 290.836 cv
552.516 289.262 551.878 287.429 551.878 285.337 cv
551.878 282.52 552.898 280.201 554.941 278.381 cv
556.984 276.561 559.588 275.651 562.75 275.651 cv
565.567 275.651 568.54 276.12 571.671 277.058 cv
571.671 281.803 li
567.816 280.287 564.941 279.529 563.048 279.529 cv
561.252 279.529 559.769 280.007 558.6 280.963 cv
557.43 281.918 556.846 283.121 556.846 284.571 cv
556.846 285.79 557.273 286.869 558.131 287.808 cv
558.986 288.747 560.552 289.868 562.824 291.169 cv
565.444 292.651 li
568.607 294.447 570.815 296.144 572.066 297.742 cv
573.318 299.34 573.944 301.26 573.944 303.5 cv
573.944 306.679 572.771 309.232 570.423 311.16 cv
568.075 313.087 564.967 314.051 561.095 314.051 cv
.656916 .200534 1 .0402838 cmyk
f
34.3193 328.161 mo
28.6353 328.161 24.2451 326.493 21.147 323.157 cv
18.0503 319.821 16.502 315.098 16.502 308.985 cv
16.502 302.891 18.0791 298.162 21.2344 294.802 cv
24.3892 291.441 28.833 289.762 34.5664 289.762 cv
37.8442 289.762 41.6821 290.297 46.082 291.367 cv
46.082 296.235 li
41.0732 294.505 37.21 293.64 34.4922 293.64 cv
30.521 293.64 27.4482 294.982 25.2744 297.668 cv
23.0991 300.354 22.0122 304.143 22.0122 309.035 cv
22.0122 313.697 23.1743 317.375 25.4971 320.068 cv
27.8203 322.763 30.9912 324.109 35.0112 324.109 cv
38.4702 324.109 42.1772 323.047 46.1313 320.922 cv
46.1313 325.369 li
42.5234 327.23 38.5864 328.161 34.3193 328.161 cv
53.6963 327.247 mo
53.6963 290.676 li
74.1323 290.676 li
74.1323 294.556 li
58.8862 294.556 li
58.8862 306.291 li
71.6611 306.291 li
71.6611 310.122 li
58.8862 310.122 li
58.8862 323.367 li
75.1943 323.367 li
75.1943 327.247 li
53.6963 327.247 li
cp
81.147 327.247 mo
81.147 290.676 li
91.106 290.676 li
95.521 290.676 98.6924 291.42 100.619 292.911 cv
102.547 294.401 103.51 296.853 103.51 300.264 cv
103.51 304.15 102.192 307.198 99.5562 309.406 cv
96.9214 311.613 93.2632 312.718 88.585 312.718 cv
86.2861 312.718 li
86.2861 327.247 li
81.147 327.247 li
cp
86.2861 308.788 mo
88.3872 308.788 li
91.4683 308.788 93.8481 308.08 95.5293 306.663 cv
97.209 305.245 98.0493 303.244 98.0493 300.657 cv
98.0493 298.467 97.3901 296.901 96.0723 295.964 cv
94.7544 295.024 92.5552 294.556 89.4751 294.556 cv
86.2861 294.556 li
86.2861 308.788 li
cp
109.143 327.247 mo
109.143 290.676 li
129.579 290.676 li
129.579 294.556 li
114.333 294.556 li
114.333 306.291 li
127.108 306.291 li
127.108 310.122 li
114.333 310.122 li
114.333 323.367 li
130.641 323.367 li
130.641 327.247 li
109.143 327.247 li
cp
152.261 328.161 mo
146.577 328.161 142.187 326.493 139.09 323.157 cv
135.992 319.821 134.444 315.098 134.444 308.985 cv
134.444 302.891 136.021 298.162 139.176 294.802 cv
142.331 291.441 146.775 289.762 152.508 289.762 cv
155.786 289.762 159.624 290.297 164.024 291.367 cv
164.024 296.235 li
159.015 294.505 155.152 293.64 152.434 293.64 cv
148.463 293.64 145.39 294.982 143.216 297.668 cv
141.042 300.354 139.954 304.143 139.954 309.035 cv
139.954 313.697 141.116 317.375 143.439 320.068 cv
145.762 322.763 148.933 324.109 152.953 324.109 cv
156.412 324.109 160.119 323.047 164.073 320.922 cv
164.073 325.369 li
160.465 327.23 156.528 328.161 152.261 328.161 cv
.19791 .410834 .670069 .0102846 cmyk
f
135.73 160.664 mo
135.73 130.131 li
152.792 130.131 li
152.792 133.371 li
140.063 133.371 li
140.063 143.603 li
150.75 143.603 li
150.75 146.8 li
140.063 146.8 li
140.063 160.664 li
135.73 160.664 li
cp
158.34 130.131 mo
162.672 130.131 li
162.672 160.664 li
158.34 160.664 li
158.34 130.131 li
cp
182.813 161.427 mo
178.579 161.427 175.171 159.959 172.593 157.023 cv
170.014 154.087 168.724 150.205 168.724 145.377 cv
168.724 140.522 170.021 136.64 172.613 133.731 cv
175.205 130.822 178.667 129.367 183 129.367 cv
187.319 129.367 190.778 130.818 193.378 133.72 cv
195.978 136.622 197.277 140.494 197.277 145.335 cv
197.277 150.273 195.978 154.19 193.378 157.085 cv
190.778 159.98 187.257 161.427 182.813 161.427 cv
182.876 158.189 mo
185.998 158.189 188.412 157.064 190.118 154.815 cv
191.824 152.566 192.676 149.393 192.676 145.294 cv
192.676 141.32 191.82 138.211 190.108 135.969 cv
188.395 133.727 186.026 132.606 183 132.606 cv
179.961 132.606 177.589 133.73 175.883 135.979 cv
174.178 138.228 173.325 141.354 173.325 145.357 cv
173.325 149.345 174.171 152.481 175.862 154.764 cv
177.554 157.047 179.892 158.189 182.876 158.189 cv
216.387 161.427 mo
211.643 161.427 207.978 160.035 205.392 157.249 cv
202.806 154.464 201.514 150.52 201.514 145.418 cv
201.514 140.329 202.831 136.381 205.465 133.576 cv
208.098 130.77 211.808 129.367 216.595 129.367 cv
219.331 129.367 222.536 129.814 226.208 130.708 cv
226.208 134.772 li
222.027 133.328 218.802 132.606 216.532 132.606 cv
213.217 132.606 210.652 133.727 208.837 135.969 cv
207.021 138.211 206.114 141.375 206.114 145.46 cv
206.114 149.352 207.083 152.422 209.022 154.671 cv
210.962 156.919 213.609 158.044 216.966 158.044 cv
219.854 158.044 222.949 157.157 226.249 155.383 cv
226.249 159.096 li
223.237 160.65 219.95 161.427 216.387 161.427 cv
232.512 160.664 mo
232.512 130.131 li
241.754 130.131 li
244.683 130.131 246.928 130.777 248.489 132.07 cv
250.05 133.363 250.831 135.24 250.831 137.703 cv
250.831 141.773 248.775 144.661 244.663 146.367 cv
254.854 160.664 li
249.531 160.664 li
240.846 147.749 li
236.802 147.749 li
236.802 160.664 li
232.512 160.664 li
cp
236.802 144.511 mo
238.205 144.511 li
243.652 144.511 246.375 142.372 246.375 138.095 cv
246.375 134.945 244.092 133.371 239.525 133.371 cv
236.802 133.371 li
236.802 144.511 li
cp
258.952 130.131 mo
263.285 130.131 li
263.285 149.401 li
263.285 152.467 263.852 154.698 264.987 156.094 cv
266.121 157.491 267.927 158.189 270.403 158.189 cv
272.823 158.189 274.539 157.532 275.549 156.218 cv
276.56 154.905 277.066 152.68 277.066 149.544 cv
277.066 130.131 li
280.861 130.131 li
280.861 149.482 li
280.861 153.65 280.005 156.683 278.292 158.581 cv
276.581 160.478 273.854 161.427 270.114 161.427 cv
266.304 161.427 263.491 160.444 261.676 158.478 cv
259.86 156.511 258.952 153.471 258.952 149.358 cv
258.952 130.131 li
cp
286.464 160.664 mo
286.464 157.198 li
302.866 133.371 li
287.476 133.371 li
287.476 130.131 li
308.063 130.131 li
308.063 133.371 li
291.663 157.198 li
308.063 157.198 li
308.063 160.664 li
286.464 160.664 li
cp
.0433051 0 .713497 0 cmyk
f
230.89 329.671 mo
236.08 329.671 li
236.08 366.243 li
230.89 366.243 li
230.89 329.671 li
cp
245.506 366.243 mo
245.506 329.671 li
250.596 329.671 li
269.006 357.915 li
269.006 329.671 li
273.453 329.671 li
273.453 366.243 li
268.388 366.243 li
249.954 337.998 li
249.954 366.243 li
245.506 366.243 li
cp
282.924 366.243 mo
282.924 329.671 li
292.883 329.671 li
297.298 329.671 300.469 330.416 302.396 331.907 cv
304.323 333.398 305.287 335.848 305.287 339.259 cv
305.287 343.146 303.969 346.194 301.333 348.402 cv
298.697 350.61 295.04 351.714 290.361 351.714 cv
288.063 351.714 li
288.063 366.243 li
282.924 366.243 li
cp
288.063 347.784 mo
290.164 347.784 li
293.245 347.784 295.625 347.076 297.305 345.659 cv
298.986 344.242 299.826 342.24 299.826 339.653 cv
299.826 337.462 299.167 335.898 297.849 334.959 cv
296.531 334.02 294.332 333.551 291.252 333.551 cv
288.063 333.551 li
288.063 347.784 li
cp
329.452 352.256 mo
323.226 336.49 li
316.974 352.256 li
329.452 352.256 li
cp
334.938 366.243 mo
330.959 356.111 li
315.466 356.111 li
311.439 366.243 li
306.62 366.243 li
321.125 329.671 li
326.264 329.671 li
340.547 366.243 li
334.938 366.243 li
cp
f
461.899 176.264 mo
466.232 176.264 li
466.232 195.534 li
466.232 198.601 466.8 200.832 467.934 202.229 cv
469.068 203.625 470.874 204.322 473.351 204.322 cv
475.771 204.322 477.485 203.666 478.496 202.353 cv
479.508 201.038 480.013 198.813 480.013 195.677 cv
480.013 176.264 li
483.809 176.264 li
483.809 195.615 li
483.809 199.783 482.952 202.816 481.24 204.714 cv
479.528 206.612 476.803 207.562 473.062 207.562 cv
469.252 207.562 466.438 206.577 464.622 204.611 cv
462.808 202.645 461.899 199.605 461.899 195.492 cv
461.899 176.264 li
cp
491.393 206.797 mo
491.393 176.264 li
495.642 176.264 li
511.012 199.844 li
511.012 176.264 li
514.725 176.264 li
514.725 206.797 li
510.495 206.797 li
495.104 183.217 li
495.104 206.797 li
491.393 206.797 li
cp
522.573 206.797 mo
522.573 176.264 li
539.636 176.264 li
539.636 179.504 li
526.906 179.504 li
526.906 189.302 li
537.571 189.302 li
537.571 192.5 li
526.906 192.5 li
526.906 203.56 li
540.521 203.56 li
540.521 206.797 li
522.573 206.797 li
cp
551.433 207.562 mo
549.384 207.562 546.764 207.114 543.572 206.22 cv
543.572 201.928 li
547.012 203.524 549.838 204.322 552.052 204.322 cv
553.757 204.322 555.129 203.875 556.167 202.981 cv
557.205 202.086 557.725 200.91 557.725 199.453 cv
557.725 198.256 557.385 197.238 556.703 196.399 cv
556.022 195.561 554.768 194.625 552.938 193.594 cv
550.834 192.377 li
548.235 190.891 546.402 189.491 545.336 188.178 cv
544.271 186.865 543.737 185.335 543.737 183.588 cv
543.737 181.236 544.591 179.3 546.296 177.78 cv
548.002 176.261 550.175 175.501 552.814 175.501 cv
555.166 175.501 557.648 175.894 560.263 176.677 cv
560.263 180.639 li
557.045 179.372 554.645 178.739 553.063 178.739 cv
551.563 178.739 550.325 179.138 549.35 179.937 cv
548.372 180.734 547.885 181.738 547.885 182.948 cv
547.885 183.966 548.241 184.867 548.956 185.651 cv
549.672 186.436 550.979 187.37 552.877 188.458 cv
555.063 189.695 li
557.704 191.194 559.548 192.61 560.593 193.944 cv
561.638 195.279 562.16 196.881 562.16 198.752 cv
562.16 201.406 561.181 203.538 559.221 205.147 cv
557.261 206.756 554.664 207.562 551.433 207.562 cv
568.182 206.797 mo
568.182 176.264 li
576.495 176.264 li
580.182 176.264 582.829 176.886 584.438 178.131 cv
586.048 179.376 586.853 181.422 586.853 184.27 cv
586.853 187.515 585.752 190.06 583.552 191.902 cv
581.351 193.745 578.298 194.667 574.392 194.667 cv
572.473 194.667 li
572.473 206.797 li
568.182 206.797 li
cp
572.473 191.387 mo
574.227 191.387 li
576.799 191.387 578.785 190.796 580.188 189.613 cv
581.591 188.43 582.292 186.759 582.292 184.601 cv
582.292 182.771 581.741 181.464 580.642 180.68 cv
579.541 179.896 577.705 179.504 575.135 179.504 cv
572.473 179.504 li
572.473 191.387 li
cp
.656916 .200534 1 .0402838 cmyk
f
17.9673 288.161 mo
14.1709 288.161 11.2393 287.047 9.1709 284.819 cv
7.10205 282.592 6.06787 279.437 6.06787 275.354 cv
6.06787 271.282 7.12207 268.124 9.229 265.88 cv
11.3359 263.636 14.3042 262.514 18.1323 262.514 cv
20.3223 262.514 22.8862 262.87 25.8242 263.585 cv
25.8242 266.837 li
22.479 265.683 19.8989 265.104 18.083 265.104 cv
15.4321 265.104 13.3799 266.001 11.9282 267.794 cv
10.4751 269.588 9.74902 272.119 9.74902 275.388 cv
9.74902 278.501 10.5239 280.957 12.0762 282.755 cv
13.627 284.555 15.7451 285.453 18.4302 285.453 cv
20.7412 285.453 23.2163 284.744 25.8569 283.325 cv
25.8569 286.295 li
23.4482 287.539 20.8179 288.161 17.9673 288.161 cv
30.8672 287.551 mo
30.8672 263.124 li
44.5161 263.124 li
44.5161 265.715 li
34.332 265.715 li
34.332 273.555 li
42.8652 273.555 li
42.8652 276.112 li
34.332 276.112 li
34.332 284.959 li
45.2251 284.959 li
45.2251 287.551 li
30.8672 287.551 li
cp
49.168 287.551 mo
49.168 263.124 li
52.5669 263.124 li
64.8633 281.989 li
64.8633 263.124 li
67.834 263.124 li
67.834 287.551 li
64.4502 287.551 li
52.1382 268.686 li
52.1382 287.551 li
49.168 287.551 li
cp
74.1133 287.551 mo
74.1133 263.124 li
80.7642 263.124 li
83.7119 263.124 85.8301 263.622 87.1182 264.617 cv
88.4053 265.613 89.0493 267.25 89.0493 269.527 cv
89.0493 272.124 88.1689 274.159 86.4082 275.635 cv
84.6479 277.108 82.2051 277.846 79.0811 277.846 cv
77.5459 277.846 li
77.5459 287.551 li
74.1133 287.551 li
cp
77.5459 275.223 mo
78.9492 275.223 li
81.0059 275.223 82.5962 274.748 83.7183 273.803 cv
84.8403 272.855 85.4009 271.519 85.4009 269.791 cv
85.4009 268.328 84.9609 267.283 84.0811 266.656 cv
83.2012 266.029 81.7319 265.715 79.6753 265.715 cv
77.5459 265.715 li
77.5459 275.223 li
cp
105.155 278.209 mo
100.995 267.679 li
96.8213 278.209 li
105.155 278.209 li
cp
108.818 287.551 mo
106.162 280.783 li
95.814 280.783 li
93.124 287.551 li
89.9043 287.551 li
99.5933 263.124 li
103.026 263.124 li
112.565 287.551 li
108.818 287.551 li
cp
121.883 287.551 mo
121.883 265.715 li
113.218 265.715 li
113.218 263.124 li
134.013 263.124 li
134.013 265.715 li
125.348 265.715 li
125.348 287.551 li
121.883 287.551 li
cp
.0433051 0 .713497 0 cmyk
f
509.723 316.487 mo
514.91 316.487 li
514.91 339.567 li
514.91 343.242 515.591 345.915 516.949 347.586 cv
518.309 349.258 520.472 350.094 523.437 350.094 cv
526.336 350.094 528.391 349.308 529.602 347.734 cv
530.813 346.161 531.419 343.497 531.419 339.74 cv
531.419 316.487 li
535.966 316.487 li
535.966 339.667 li
535.966 344.659 534.939 348.291 532.889 350.563 cv
530.838 352.838 527.571 353.974 523.092 353.974 cv
518.527 353.974 515.158 352.796 512.984 350.439 cv
510.81 348.085 509.723 344.443 509.723 339.519 cv
509.723 316.487 li
cp
552.277 353.974 mo
549.822 353.974 546.685 353.438 542.862 352.368 cv
542.862 347.229 li
546.981 349.139 550.367 350.094 553.02 350.094 cv
555.063 350.094 556.705 349.559 557.949 348.487 cv
559.193 347.418 559.815 346.009 559.815 344.263 cv
559.815 342.83 559.407 341.609 558.592 340.604 cv
557.775 339.6 556.272 338.479 554.082 337.245 cv
551.562 335.787 li
548.447 334.008 546.253 332.332 544.976 330.759 cv
543.698 329.185 543.061 327.353 543.061 325.26 cv
543.061 322.442 544.082 320.124 546.125 318.304 cv
548.168 316.483 550.771 315.573 553.934 315.573 cv
556.751 315.573 559.724 316.043 562.854 316.98 cv
562.854 321.726 li
559 320.21 556.125 319.452 554.23 319.452 cv
552.435 319.452 550.951 319.93 549.782 320.886 cv
548.612 321.842 548.028 323.044 548.028 324.494 cv
548.028 325.713 548.457 326.792 549.313 327.73 cv
550.17 328.67 551.734 329.791 554.008 331.092 cv
556.628 332.574 li
559.791 334.37 561.999 336.066 563.25 337.665 cv
564.502 339.263 565.128 341.183 565.128 343.423 cv
565.128 346.603 563.953 349.155 561.605 351.083 cv
559.259 353.011 556.149 353.974 552.277 353.974 cv
572.39 353.06 mo
572.39 316.487 li
582.35 316.487 li
586.764 316.487 589.935 317.232 591.862 318.724 cv
593.789 320.215 594.754 322.665 594.754 326.076 cv
594.754 329.963 593.436 333.011 590.8 335.219 cv
588.164 337.427 584.507 338.529 579.827 338.529 cv
577.529 338.529 li
577.529 353.06 li
572.39 353.06 li
cp
577.529 334.601 mo
579.631 334.601 li
582.712 334.601 585.092 333.893 586.771 332.476 cv
588.451 331.059 589.292 329.057 589.292 326.47 cv
589.292 324.279 588.633 322.715 587.315 321.775 cv
585.998 320.837 583.799 320.368 580.719 320.368 cv
577.529 320.368 li
577.529 334.601 li
cp
.656916 .200534 1 .0402838 cmyk
f
207.938 126.794 mo
207.938 102.368 li
212.741 102.368 li
219.508 121.264 li
226.472 102.368 li
230.763 102.368 li
230.763 126.794 li
227.528 126.794 li
227.528 106.922 li
220.795 125.16 li
217.445 125.16 li
210.908 106.873 li
210.908 126.794 li
207.938 126.794 li
cp
249.399 117.453 mo
245.24 106.922 li
241.064 117.453 li
249.399 117.453 li
cp
253.063 126.794 mo
250.406 120.027 li
240.058 120.027 li
237.368 126.794 li
234.149 126.794 li
243.838 102.368 li
247.271 102.368 li
256.809 126.794 li
253.063 126.794 li
cp
270.781 127.405 mo
266.985 127.405 264.053 126.291 261.985 124.063 cv
259.916 121.834 258.882 118.679 258.882 114.597 cv
258.882 110.526 259.935 107.368 262.042 105.124 cv
264.15 102.879 267.118 101.757 270.946 101.757 cv
273.136 101.757 275.7 102.114 278.638 102.829 cv
278.638 106.08 li
275.292 104.926 272.712 104.348 270.896 104.348 cv
268.246 104.348 266.194 105.245 264.741 107.038 cv
263.289 108.832 262.563 111.362 262.563 114.631 cv
262.563 117.745 263.338 120.201 264.889 121.999 cv
266.439 123.798 268.558 124.697 271.244 124.697 cv
273.554 124.697 276.03 123.988 278.671 122.569 cv
278.671 125.539 li
276.261 126.783 273.631 127.405 270.781 127.405 cv
283.681 126.794 mo
283.681 102.368 li
287.08 102.368 li
299.375 121.233 li
299.375 102.368 li
302.347 102.368 li
302.347 126.794 li
298.963 126.794 li
286.651 107.929 li
286.651 126.794 li
283.681 126.794 li
cp
.0433051 0 .713497 0 cmyk
f
459.047 144.02 mo
462.514 144.02 li
462.514 159.435 li
462.514 161.889 462.967 163.674 463.875 164.791 cv
464.783 165.908 466.228 166.466 468.207 166.466 cv
470.144 166.466 471.517 165.94 472.324 164.889 cv
473.133 163.838 473.537 162.059 473.537 159.551 cv
473.537 144.02 li
476.574 144.02 li
476.574 159.501 li
476.574 162.835 475.89 165.261 474.521 166.779 cv
473.15 168.298 470.97 169.057 467.977 169.057 cv
464.929 169.057 462.679 168.271 461.227 166.697 cv
459.773 165.124 459.047 162.692 459.047 159.401 cv
459.047 144.02 li
cp
482.642 168.446 mo
482.642 144.02 li
486.041 144.02 li
498.336 162.885 li
498.336 144.02 li
501.308 144.02 li
501.308 168.446 li
497.924 168.446 li
485.611 149.581 li
485.611 168.446 li
482.642 168.446 li
cp
507.587 168.446 mo
507.587 144.02 li
512.39 144.02 li
519.156 162.917 li
526.121 144.02 li
530.411 144.02 li
530.411 168.446 li
527.178 168.446 li
527.178 148.574 li
520.443 166.813 li
517.094 166.813 li
510.558 148.525 li
510.558 168.446 li
507.587 168.446 li
cp
536.67 168.446 mo
536.67 144.02 li
543.321 144.02 li
546.271 144.02 548.388 144.518 549.676 145.514 cv
550.962 146.51 551.606 148.146 551.606 150.423 cv
551.606 153.02 550.727 155.056 548.965 156.53 cv
547.205 158.004 544.764 158.741 541.639 158.741 cv
540.104 158.741 li
540.104 168.446 li
536.67 168.446 li
cp
540.104 156.118 mo
541.506 156.118 li
543.564 156.118 545.153 155.645 546.275 154.698 cv
547.397 153.752 547.958 152.415 547.958 150.687 cv
547.958 149.224 547.519 148.18 546.639 147.552 cv
545.758 146.925 544.289 146.611 542.232 146.611 cv
540.104 146.611 li
540.104 156.118 li
cp
.656916 .200534 1 .0402838 cmyk
f
37.7236 259.118 mo
34.8765 259.118 32.6777 258.282 31.1265 256.611 cv
29.5747 254.939 28.7988 252.573 28.7988 249.511 cv
28.7988 246.459 29.5898 244.091 31.1694 242.407 cv
32.7505 240.723 34.9766 239.882 37.8486 239.882 cv
39.4897 239.882 41.4126 240.15 43.6157 240.688 cv
43.6157 243.124 li
41.1074 242.258 39.1724 241.824 37.8105 241.824 cv
35.8218 241.824 34.2827 242.497 33.1934 243.843 cv
32.1045 245.188 31.5596 247.086 31.5596 249.536 cv
31.5596 251.872 32.1416 253.715 33.3057 255.064 cv
34.4688 256.414 36.0576 257.088 38.0708 257.088 cv
39.8037 257.088 41.6606 256.556 43.6406 255.491 cv
43.6406 257.719 li
41.8335 258.652 39.8618 259.118 37.7236 259.118 cv
47.3857 240.34 mo
49.9854 240.34 li
49.9854 258.659 li
47.3857 258.659 li
47.3857 240.34 li
cp
62.5415 259.118 mo
59.6948 259.118 57.4956 258.282 55.9434 256.611 cv
54.3926 254.939 53.6167 252.573 53.6167 249.511 cv
53.6167 246.459 54.4067 244.091 55.9878 242.407 cv
57.5674 240.723 59.7935 239.882 62.6655 239.882 cv
64.3076 239.882 66.2295 240.15 68.4336 240.688 cv
68.4336 243.124 li
65.9258 242.258 63.9897 241.824 62.6284 241.824 cv
60.6396 241.824 59.1006 242.497 58.0117 243.843 cv
56.9224 245.188 56.3774 247.086 56.3774 249.536 cv
56.3774 251.872 56.9595 253.715 58.1226 255.064 cv
59.2866 256.414 60.8745 257.088 62.8877 257.088 cv
64.6216 257.088 66.4775 256.556 68.4575 255.491 cv
68.4575 257.719 li
66.6504 258.652 64.6787 259.118 62.5415 259.118 cv
72.2036 240.34 mo
74.8037 240.34 li
74.8037 258.659 li
72.2036 258.659 li
72.2036 240.34 li
cp
79.5107 258.66 mo
79.5107 240.34 li
83.1138 240.34 li
88.1885 254.513 li
93.4116 240.34 li
96.6294 240.34 li
96.6294 258.66 li
94.2036 258.66 li
94.2036 243.756 li
89.1538 257.434 li
86.6406 257.434 li
81.7397 243.719 li
81.7397 258.66 li
79.5107 258.66 li
cp
110.607 251.653 mo
107.489 243.756 li
104.357 251.653 li
110.607 251.653 li
cp
113.355 258.66 mo
111.363 253.584 li
103.602 253.584 li
101.584 258.66 li
99.1704 258.66 li
106.437 240.34 li
109.011 240.34 li
116.165 258.66 li
113.355 258.66 li
cp
118.795 258.66 mo
118.795 240.34 li
124.342 240.34 li
126.1 240.34 127.447 240.729 128.384 241.504 cv
129.32 242.279 129.788 243.406 129.788 244.883 cv
129.788 247.325 128.555 249.059 126.086 250.082 cv
132.203 258.66 li
129.009 258.66 li
123.797 250.91 li
121.371 250.91 li
121.371 258.66 li
118.795 258.66 li
cp
121.371 248.967 mo
122.212 248.967 li
125.48 248.967 127.114 247.685 127.114 245.118 cv
127.114 243.229 125.745 242.283 123.004 242.283 cv
121.371 242.283 li
121.371 248.967 li
cp
f
161.919 353.459 mo
161.919 335.141 li
172.158 335.141 li
172.158 337.082 li
164.52 337.082 li
164.52 343.224 li
170.932 343.224 li
170.932 345.142 li
164.52 345.142 li
164.52 353.459 li
161.919 353.459 li
cp
175.497 353.459 mo
175.497 335.141 li
185.734 335.141 li
185.734 337.082 li
178.097 337.082 li
178.097 342.962 li
184.498 342.962 li
184.498 344.881 li
178.097 344.881 li
178.097 351.517 li
186.268 351.517 li
186.268 353.459 li
175.497 353.459 li
cp
189.223 353.459 mo
189.223 335.141 li
192.826 335.141 li
197.9 349.313 li
203.124 335.141 li
206.342 335.141 li
206.342 353.459 li
203.917 353.459 li
203.917 338.556 li
198.865 352.233 li
196.353 352.233 li
191.452 338.52 li
191.452 353.459 li
189.223 353.459 li
cp
211.036 353.459 mo
211.036 335.141 li
214.638 335.141 li
219.713 349.313 li
224.937 335.141 li
228.154 335.141 li
228.154 353.459 li
225.729 353.459 li
225.729 338.556 li
220.679 352.233 li
218.166 352.233 li
213.264 338.52 li
213.264 353.459 li
211.036 353.459 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
409.929 315.935 mo
412.528 315.935 li
412.528 327.496 li
412.528 329.336 412.868 330.675 413.549 331.512 cv
414.229 332.35 415.313 332.769 416.798 332.769 cv
418.25 332.769 419.279 332.375 419.887 331.587 cv
420.493 330.799 420.797 329.464 420.797 327.583 cv
420.797 315.935 li
423.073 315.935 li
423.073 327.545 li
423.073 330.046 422.561 331.865 421.533 333.004 cv
420.505 334.143 418.87 334.713 416.625 334.713 cv
414.339 334.713 412.651 334.123 411.563 332.942 cv
410.474 331.763 409.929 329.938 409.929 327.471 cv
409.929 315.935 li
cp
427.623 334.254 mo
427.623 315.935 li
437.86 315.935 li
437.86 317.878 li
430.224 317.878 li
430.224 323.757 li
436.623 323.757 li
436.623 325.677 li
430.224 325.677 li
430.224 332.312 li
438.394 332.312 li
438.394 334.254 li
427.623 334.254 li
cp
441.349 334.254 mo
441.349 315.935 li
446.895 315.935 li
448.652 315.935 450 316.323 450.937 317.099 cv
451.872 317.874 452.342 319.001 452.342 320.478 cv
452.342 322.92 451.107 324.652 448.64 325.677 cv
454.755 334.254 li
451.562 334.254 li
446.351 326.505 li
443.924 326.505 li
443.924 334.254 li
441.349 334.254 li
cp
443.924 324.562 mo
444.766 324.562 li
448.033 324.562 449.666 323.279 449.666 320.713 cv
449.666 318.823 448.297 317.878 445.558 317.878 cv
443.924 317.878 li
443.924 324.562 li
cp
452.721 337.658 mo
452.721 335.355 li
453.711 335.678 454.586 335.839 455.346 335.839 cv
456.335 335.839 457.026 335.556 457.418 334.991 cv
457.811 334.425 458.006 333.437 458.006 332.025 cv
458.006 315.935 li
460.606 315.935 li
460.606 331.939 li
460.606 335.925 458.721 337.918 454.949 337.918 cv
454.371 337.918 453.628 337.831 452.721 337.658 cv
.656916 .200534 1 .0402838 cmyk
f
349.185 331.55 mo
350.917 331.55 li
350.917 339.259 li
350.917 340.484 351.145 341.378 351.599 341.936 cv
352.053 342.494 352.774 342.772 353.766 342.772 cv
354.733 342.772 355.42 342.51 355.823 341.984 cv
356.229 341.46 356.431 340.569 356.431 339.314 cv
356.431 331.55 li
357.948 331.55 li
357.948 339.291 li
357.948 340.958 357.605 342.172 356.921 342.93 cv
356.236 343.688 355.146 344.068 353.649 344.068 cv
352.126 344.068 351.001 343.675 350.274 342.889 cv
349.548 342.103 349.185 340.887 349.185 339.24 cv
349.185 331.55 li
cp
367.171 339.093 mo
365.092 333.828 li
363.004 339.093 li
367.171 339.093 li
cp
369.004 343.764 mo
367.675 340.38 li
362.501 340.38 li
361.155 343.764 li
359.547 343.764 li
364.39 331.55 li
366.105 331.55 li
370.877 343.764 li
369.004 343.764 li
cp
372.53 331.55 mo
374.264 331.55 li
374.264 339.259 li
374.264 340.484 374.49 341.378 374.944 341.936 cv
375.398 342.494 376.121 342.772 377.111 342.772 cv
378.08 342.772 378.766 342.51 379.171 341.984 cv
379.574 341.46 379.776 340.569 379.776 339.314 cv
379.776 331.55 li
381.295 331.55 li
381.295 339.291 li
381.295 340.958 380.952 342.172 380.267 342.93 cv
379.583 343.688 378.491 344.068 376.996 344.068 cv
375.472 344.068 374.347 343.675 373.621 342.889 cv
372.894 342.103 372.53 340.887 372.53 339.24 cv
372.53 331.55 li
cp
389.56 344.068 mo
387.662 344.068 386.195 343.512 385.162 342.397 cv
384.128 341.284 383.61 339.707 383.61 337.666 cv
383.61 335.631 384.137 334.052 385.19 332.929 cv
386.244 331.807 387.728 331.245 389.642 331.245 cv
390.736 331.245 392.019 331.424 393.486 331.781 cv
393.486 333.406 li
391.814 332.83 390.524 332.541 389.617 332.541 cv
388.291 332.541 387.265 332.988 386.539 333.886 cv
385.813 334.782 385.451 336.048 385.451 337.682 cv
385.451 339.238 385.838 340.467 386.613 341.367 cv
387.39 342.267 388.448 342.716 389.79 342.716 cv
390.945 342.716 392.184 342.36 393.505 341.65 cv
393.505 343.137 li
392.299 343.758 390.983 344.068 389.56 344.068 cv
396.009 343.764 mo
396.009 331.55 li
397.635 331.55 li
397.635 337.558 li
402.579 331.55 li
404.319 331.55 li
399.532 337.377 li
405.169 343.764 li
402.975 343.764 li
397.635 337.573 li
397.635 343.764 li
396.009 343.764 li
cp
f
160.721 167.425 mo
162.453 167.425 li
162.453 179.639 li
160.721 179.639 li
160.721 167.425 li
cp
170.825 179.944 mo
168.927 179.944 167.461 179.387 166.427 178.273 cv
165.393 177.159 164.876 175.582 164.876 173.541 cv
164.876 171.506 165.402 169.927 166.456 168.805 cv
167.509 167.682 168.993 167.121 170.907 167.121 cv
172.002 167.121 173.284 167.3 174.752 167.658 cv
174.752 169.283 li
173.08 168.705 171.79 168.416 170.883 168.416 cv
169.557 168.416 168.53 168.865 167.805 169.761 cv
167.079 170.658 166.715 171.923 166.715 173.557 cv
166.715 175.114 167.103 176.343 167.879 177.242 cv
168.655 178.142 169.714 178.592 171.055 178.592 cv
172.211 178.592 173.449 178.237 174.77 177.527 cv
174.77 179.013 li
173.564 179.634 172.249 179.944 170.825 179.944 cv
177.274 179.639 mo
177.274 167.425 li
179.675 167.425 li
183.059 176.875 li
186.541 167.425 li
188.687 167.425 li
188.687 179.639 li
187.069 179.639 li
187.069 169.703 li
183.703 178.823 li
182.027 178.823 li
178.76 169.679 li
178.76 179.639 li
177.274 179.639 li
cp
191.816 179.639 mo
191.816 167.425 li
194.984 167.425 li
196.206 167.425 197.143 167.657 197.795 168.119 cv
198.447 168.581 198.773 169.247 198.773 170.117 cv
198.773 171.597 197.937 172.65 196.264 173.277 cv
198.261 173.887 199.259 174.991 199.259 176.587 cv
199.259 177.576 198.929 178.332 198.269 178.855 cv
197.608 179.378 196.657 179.639 195.414 179.639 cv
191.816 179.639 li
cp
193.532 178.344 mo
193.888 178.344 li
195.159 178.344 195.981 178.264 196.354 178.104 cv
197.07 177.802 197.428 177.241 197.428 176.421 cv
197.428 175.695 197.103 175.091 196.454 174.61 cv
195.805 174.129 194.994 173.888 194.02 173.888 cv
193.532 173.888 li
193.532 178.344 li
cp
193.532 172.789 mo
194.085 172.789 li
195.01 172.789 195.726 172.591 196.235 172.195 cv
196.744 171.799 196.998 171.241 196.998 170.52 cv
196.998 169.321 196.069 168.721 194.21 168.721 cv
193.532 168.721 li
193.532 172.789 li
cp
201.576 170.677 mo
203.203 170.677 li
203.203 179.639 li
201.576 179.639 li
201.576 170.677 li
cp
201.576 167.425 mo
203.203 167.425 li
203.203 169.051 li
201.576 169.051 li
201.576 167.425 li
cp
209.965 179.845 mo
208.682 179.845 207.658 179.421 206.894 178.571 cv
206.129 177.721 205.747 176.584 205.747 175.159 cv
205.747 173.718 206.13 172.577 206.898 171.738 cv
207.666 170.899 208.707 170.48 210.021 170.48 cv
211.337 170.48 212.378 170.899 213.146 171.738 cv
213.913 172.577 214.297 173.712 214.297 175.142 cv
214.297 176.605 213.912 177.755 213.141 178.591 cv
212.371 179.427 211.312 179.845 209.965 179.845 cv
209.989 178.624 mo
211.711 178.624 212.572 177.463 212.572 175.142 cv
212.572 172.848 211.722 171.701 210.021 171.701 cv
208.327 171.701 207.481 172.854 207.481 175.159 cv
207.481 177.469 208.317 178.624 209.989 178.624 cv
.0433051 0 .713497 0 cmyk
f
328.795 149.162 mo
330.526 149.162 li
330.526 156.871 li
330.526 158.097 330.755 158.99 331.209 159.548 cv
331.662 160.106 332.385 160.385 333.376 160.385 cv
334.344 160.385 335.029 160.122 335.434 159.597 cv
335.839 159.072 336.041 158.182 336.041 156.927 cv
336.041 149.162 li
337.559 149.162 li
337.559 156.903 li
337.559 158.57 337.216 159.783 336.53 160.542 cv
335.847 161.301 334.756 161.681 333.26 161.681 cv
331.735 161.681 330.61 161.287 329.885 160.501 cv
329.157 159.715 328.795 158.499 328.795 156.853 cv
328.795 149.162 li
cp
346.78 156.705 mo
344.701 151.44 li
342.613 156.705 li
346.78 156.705 li
cp
348.613 161.376 mo
347.284 157.992 li
342.11 157.992 li
340.766 161.376 li
339.155 161.376 li
344 149.162 li
345.716 149.162 li
350.486 161.376 li
348.613 161.376 li
cp
352.239 161.376 mo
352.239 149.162 li
355.408 149.162 li
356.63 149.162 357.566 149.393 358.219 149.856 cv
358.87 150.318 359.196 150.984 359.196 151.853 cv
359.196 153.333 358.36 154.387 356.688 155.014 cv
358.685 155.624 359.683 156.727 359.683 158.323 cv
359.683 159.313 359.353 160.069 358.692 160.592 cv
358.032 161.114 357.08 161.376 355.838 161.376 cv
352.239 161.376 li
cp
353.955 160.08 mo
354.312 160.08 li
355.583 160.08 356.404 160.001 356.777 159.841 cv
357.493 159.538 357.852 158.977 357.852 158.158 cv
357.852 157.431 357.526 156.827 356.878 156.346 cv
356.229 155.865 355.418 155.624 354.443 155.624 cv
353.955 155.624 li
353.955 160.08 li
cp
353.955 154.526 mo
354.509 154.526 li
355.434 154.526 356.149 154.328 356.658 153.932 cv
357.168 153.536 357.422 152.977 357.422 152.257 cv
357.422 151.057 356.492 150.458 354.634 150.458 cv
353.955 150.458 li
353.955 154.526 li
cp
367.183 161.681 mo
365.284 161.681 363.818 161.124 362.784 160.01 cv
361.751 158.896 361.233 157.319 361.233 155.278 cv
361.233 153.243 361.761 151.664 362.813 150.541 cv
363.866 149.419 365.351 148.857 367.266 148.857 cv
368.359 148.857 369.642 149.036 371.109 149.394 cv
371.109 151.019 li
369.438 150.442 368.147 150.153 367.24 150.153 cv
365.915 150.153 364.889 150.601 364.162 151.498 cv
363.437 152.395 363.073 153.66 363.073 155.294 cv
363.073 156.851 363.462 158.079 364.236 158.979 cv
365.013 159.879 366.071 160.328 367.412 160.328 cv
368.568 160.328 369.808 159.973 371.128 159.263 cv
371.128 160.749 li
369.923 161.37 368.607 161.681 367.183 161.681 cv
376.025 161.681 mo
375.205 161.681 374.157 161.502 372.882 161.145 cv
372.882 159.429 li
374.257 160.066 375.388 160.385 376.272 160.385 cv
376.955 160.385 377.505 160.206 377.92 159.849 cv
378.335 159.491 378.542 159.021 378.542 158.438 cv
378.542 157.959 378.405 157.552 378.134 157.217 cv
377.86 156.882 377.358 156.508 376.628 156.095 cv
375.786 155.607 li
374.746 155.013 374.014 154.454 373.587 153.928 cv
373.159 153.403 372.946 152.791 372.946 152.093 cv
372.946 151.152 373.287 150.377 373.971 149.769 cv
374.652 149.161 375.522 148.857 376.578 148.857 cv
377.519 148.857 378.512 149.014 379.558 149.327 cv
379.558 150.912 li
378.27 150.406 377.31 150.153 376.678 150.153 cv
376.077 150.153 375.583 150.313 375.191 150.632 cv
374.801 150.951 374.605 151.352 374.605 151.836 cv
374.605 152.243 374.749 152.604 375.034 152.917 cv
375.32 153.23 375.844 153.605 376.604 154.04 cv
377.478 154.535 li
378.534 155.135 379.271 155.701 379.689 156.235 cv
380.107 156.768 380.315 157.409 380.315 158.158 cv
380.315 159.22 379.924 160.072 379.14 160.716 cv
378.356 161.359 377.317 161.681 376.025 161.681 cv
.656916 .200534 1 .0402838 cmyk
f
312.338 140.537 mo
312.338 128.323 li
315.664 128.323 li
317.139 128.323 318.198 128.572 318.842 129.07 cv
319.485 129.568 319.807 130.387 319.807 131.525 cv
319.807 132.823 319.367 133.841 318.487 134.579 cv
317.607 135.316 316.385 135.685 314.822 135.685 cv
314.054 135.685 li
314.054 140.537 li
312.338 140.537 li
cp
314.054 134.372 mo
314.757 134.372 li
315.785 134.372 316.58 134.135 317.141 133.662 cv
317.703 133.189 317.984 132.521 317.984 131.657 cv
317.984 130.926 317.764 130.403 317.323 130.09 cv
316.883 129.776 316.149 129.619 315.119 129.619 cv
314.054 129.619 li
314.054 134.372 li
cp
321.571 128.323 mo
323.304 128.323 li
323.304 136.032 li
323.304 137.258 323.531 138.151 323.985 138.709 cv
324.438 139.267 325.161 139.546 326.151 139.546 cv
327.12 139.546 327.806 139.283 328.211 138.758 cv
328.615 138.233 328.816 137.343 328.816 136.088 cv
328.816 128.323 li
330.335 128.323 li
330.335 136.064 li
330.335 137.731 329.992 138.945 329.308 139.703 cv
328.623 140.462 327.532 140.842 326.036 140.842 cv
324.512 140.842 323.387 140.448 322.661 139.662 cv
321.934 138.876 321.571 137.66 321.571 136.014 cv
321.571 128.323 li
cp
338.6 140.842 mo
336.702 140.842 335.235 140.285 334.202 139.171 cv
333.168 138.057 332.65 136.48 332.65 134.439 cv
332.65 132.404 333.178 130.825 334.23 129.702 cv
335.284 128.58 336.768 128.018 338.682 128.018 cv
339.776 128.018 341.059 128.197 342.526 128.555 cv
342.526 130.18 li
340.854 129.603 339.564 129.314 338.658 129.314 cv
337.331 129.314 336.305 129.762 335.58 130.659 cv
334.854 131.556 334.491 132.821 334.491 134.455 cv
334.491 136.012 334.878 137.24 335.653 138.14 cv
336.43 139.04 337.488 139.489 338.83 139.489 cv
339.985 139.489 341.224 139.134 342.545 138.424 cv
342.545 139.91 li
341.339 140.531 340.023 140.842 338.6 140.842 cv
345.049 140.537 mo
345.049 128.323 li
348.746 128.323 li
349.918 128.323 350.816 128.582 351.44 129.099 cv
352.064 129.617 352.377 130.368 352.377 131.353 cv
352.377 132.981 351.555 134.136 349.909 134.819 cv
353.986 140.537 li
351.857 140.537 li
348.383 135.372 li
346.765 135.372 li
346.765 140.537 li
345.049 140.537 li
cp
346.765 134.076 mo
347.327 134.076 li
349.505 134.076 350.594 133.22 350.594 131.509 cv
350.594 130.249 349.681 129.619 347.854 129.619 cv
346.765 129.619 li
346.765 134.076 li
cp
358.118 140.842 mo
357.298 140.842 356.25 140.663 354.974 140.306 cv
354.974 138.59 li
356.35 139.227 357.479 139.546 358.365 139.546 cv
359.048 139.546 359.597 139.367 360.012 139.01 cv
360.427 138.652 360.634 138.182 360.634 137.599 cv
360.634 137.12 360.498 136.713 360.226 136.378 cv
359.954 136.043 359.452 135.669 358.721 135.256 cv
357.879 134.768 li
356.839 134.174 356.105 133.615 355.679 133.089 cv
355.253 132.564 355.04 131.952 355.04 131.254 cv
355.04 130.313 355.381 129.538 356.063 128.93 cv
356.746 128.322 357.615 128.018 358.671 128.018 cv
359.61 128.018 360.604 128.175 361.649 128.488 cv
361.649 130.073 li
360.363 129.567 359.402 129.314 358.77 129.314 cv
358.17 129.314 357.675 129.474 357.284 129.793 cv
356.893 130.112 356.698 130.514 356.698 130.997 cv
356.698 131.404 356.841 131.765 357.127 132.078 cv
357.414 132.391 357.937 132.766 358.695 133.201 cv
359.57 133.696 li
360.627 134.296 361.364 134.862 361.782 135.396 cv
362.2 135.929 362.409 136.57 362.409 137.319 cv
362.409 138.381 362.017 139.234 361.232 139.877 cv
360.449 140.52 359.411 140.842 358.118 140.842 cv
f
54.854 238.581 mo
52.9561 238.581 51.4897 238.024 50.4561 236.91 cv
49.4219 235.796 48.9048 234.219 48.9048 232.178 cv
48.9048 230.143 49.4321 228.564 50.4849 227.442 cv
51.5391 226.319 53.022 225.758 54.937 225.758 cv
56.0317 225.758 57.313 225.937 58.7817 226.295 cv
58.7817 227.92 li
57.1089 227.342 55.8188 227.053 54.9121 227.053 cv
53.5859 227.053 52.5601 227.502 51.834 228.398 cv
51.1079 229.295 50.7451 230.56 50.7451 232.194 cv
50.7451 233.751 51.1328 234.98 51.9087 235.879 cv
52.6841 236.779 53.7427 237.229 55.085 237.229 cv
56.2407 237.229 57.479 236.874 58.7988 236.164 cv
58.7988 237.649 li
57.5938 238.271 56.2788 238.581 54.854 238.581 cv
61.3027 238.276 mo
61.3027 226.062 li
68.1279 226.062 li
68.1279 227.358 li
63.0371 227.358 li
63.0371 231.278 li
67.3027 231.278 li
67.3027 232.558 li
63.0371 232.558 li
63.0371 236.981 li
68.4819 236.981 li
68.4819 238.276 li
61.3027 238.276 li
cp
75.686 238.581 mo
73.7881 238.581 72.3218 238.024 71.2881 236.91 cv
70.2539 235.796 69.7368 234.219 69.7368 232.178 cv
69.7368 230.143 70.2637 228.564 71.3169 227.442 cv
72.3701 226.319 73.854 225.758 75.7681 225.758 cv
76.8628 225.758 78.145 225.937 79.6128 226.295 cv
79.6128 227.92 li
77.9409 227.342 76.6509 227.053 75.7441 227.053 cv
74.418 227.053 73.3921 227.502 72.666 228.398 cv
71.9399 229.295 71.5767 230.56 71.5767 232.194 cv
71.5767 233.751 71.9648 234.98 72.7397 235.879 cv
73.5161 236.779 74.5747 237.229 75.916 237.229 cv
77.0718 237.229 78.3101 236.874 79.6309 236.164 cv
79.6309 237.649 li
78.4258 238.271 77.1108 238.581 75.686 238.581 cv
82.1279 226.062 mo
83.8599 226.062 li
83.8599 238.276 li
82.1279 238.276 li
82.1279 226.062 li
cp
86.999 238.276 mo
86.999 226.062 li
89.3999 226.062 li
92.7837 235.513 li
96.2661 226.062 li
98.4121 226.062 li
98.4121 238.276 li
96.7939 238.276 li
96.7939 228.34 li
93.4277 237.459 li
91.752 237.459 li
88.4839 228.316 li
88.4839 238.276 li
86.999 238.276 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
383.669 146.506 mo
385.401 146.506 li
385.401 154.215 li
385.401 155.441 385.628 156.334 386.083 156.892 cv
386.537 157.45 387.26 157.729 388.25 157.729 cv
389.219 157.729 389.904 157.466 390.309 156.941 cv
390.713 156.416 390.915 155.526 390.915 154.271 cv
390.915 146.506 li
392.434 146.506 li
392.434 154.247 li
392.434 155.914 392.091 157.128 391.405 157.886 cv
390.721 158.645 389.631 159.025 388.135 159.025 cv
386.61 159.025 385.485 158.631 384.76 157.845 cv
384.032 157.059 383.669 155.843 383.669 154.197 cv
383.669 146.506 li
cp
395.466 158.72 mo
395.466 146.506 li
402.291 146.506 li
402.291 147.802 li
397.199 147.802 li
397.199 151.895 li
401.475 151.895 li
401.475 153.175 li
397.199 153.175 li
397.199 158.72 li
395.466 158.72 li
cp
404.518 158.72 mo
404.518 146.506 li
407.843 146.506 li
409.318 146.506 410.377 146.755 411.021 147.253 cv
411.664 147.751 411.986 148.57 411.986 149.708 cv
411.986 151.006 411.547 152.024 410.666 152.762 cv
409.786 153.499 408.564 153.868 407.001 153.868 cv
406.233 153.868 li
406.233 158.72 li
404.518 158.72 li
cp
406.233 152.555 mo
406.937 152.555 li
407.965 152.555 408.76 152.318 409.32 151.845 cv
409.883 151.372 410.162 150.704 410.162 149.84 cv
410.162 149.109 409.942 148.586 409.502 148.273 cv
409.063 147.959 408.328 147.802 407.299 147.802 cv
406.233 147.802 li
406.233 152.555 li
cp
413.85 158.72 mo
413.85 146.506 li
420.675 146.506 li
420.675 147.802 li
415.583 147.802 li
415.583 151.722 li
419.849 151.722 li
419.849 153.002 li
415.583 153.002 li
415.583 157.424 li
421.028 157.424 li
421.028 158.72 li
413.85 158.72 li
cp
422.999 158.72 mo
422.999 146.506 li
424.733 146.506 li
424.733 157.424 li
430.229 157.424 li
430.229 158.72 li
422.999 158.72 li
cp
.656916 .200534 1 .0402838 cmyk
f
158.348 261.585 mo
160.948 261.585 li
160.948 279.904 li
158.348 279.904 li
158.348 261.585 li
cp
165.655 279.905 mo
165.655 261.585 li
170.408 261.585 li
172.241 261.585 173.646 261.932 174.624 262.625 cv
175.601 263.318 176.09 264.316 176.09 265.62 cv
176.09 267.84 174.836 269.42 172.328 270.361 cv
175.324 271.277 176.822 272.931 176.822 275.324 cv
176.822 276.81 176.326 277.945 175.336 278.729 cv
174.345 279.513 172.918 279.905 171.053 279.905 cv
165.655 279.905 li
cp
168.231 277.962 mo
168.763 277.962 li
170.67 277.962 171.904 277.842 172.464 277.602 cv
173.537 277.149 174.074 276.307 174.074 275.078 cv
174.074 273.988 173.587 273.083 172.613 272.361 cv
171.638 271.639 170.421 271.278 168.96 271.278 cv
168.231 271.278 li
168.231 277.962 li
cp
168.231 269.631 mo
169.061 269.631 li
170.447 269.631 171.521 269.334 172.285 268.74 cv
173.048 268.146 173.429 267.308 173.429 266.227 cv
173.429 264.428 172.035 263.528 169.246 263.528 cv
168.231 263.528 li
168.231 269.631 li
cp
175.58 283.309 mo
175.58 281.006 li
176.571 281.328 177.446 281.489 178.205 281.489 cv
179.196 281.489 179.887 281.207 180.278 280.641 cv
180.67 280.076 180.866 279.087 180.866 277.676 cv
180.866 261.585 li
183.466 261.585 li
183.466 277.591 li
183.466 281.576 181.58 283.568 177.809 283.568 cv
177.232 283.568 176.489 283.482 175.58 283.309 cv
.19791 .410834 .670069 .0102846 cmyk
f
409.77 338.236 mo
411.503 338.236 li
411.503 345.945 li
411.503 347.172 411.729 348.064 412.184 348.623 cv
412.638 349.181 413.359 349.46 414.351 349.46 cv
415.318 349.46 416.005 349.196 416.408 348.672 cv
416.813 348.146 417.016 347.257 417.016 346.002 cv
417.016 338.236 li
418.533 338.236 li
418.533 345.978 li
418.533 347.645 418.19 348.858 417.506 349.617 cv
416.821 350.376 415.73 350.756 414.234 350.756 cv
412.711 350.756 411.586 350.361 410.859 349.576 cv
410.133 348.79 409.77 347.573 409.77 345.928 cv
409.77 338.236 li
cp
421.566 350.451 mo
421.566 338.236 li
428.392 338.236 li
428.392 339.532 li
423.3 339.532 li
423.3 343.453 li
427.565 343.453 li
427.565 344.732 li
423.3 344.732 li
423.3 349.154 li
428.745 349.154 li
428.745 350.451 li
421.566 350.451 li
cp
430.717 350.451 mo
430.717 338.236 li
432.417 338.236 li
438.564 347.67 li
438.564 338.236 li
440.051 338.236 li
440.051 350.451 li
438.358 350.451 li
432.202 341.018 li
432.202 350.451 li
430.717 350.451 li
cp
443.189 350.451 mo
443.189 338.236 li
450.015 338.236 li
450.015 339.532 li
444.923 339.532 li
444.923 343.626 li
449.197 343.626 li
449.197 344.904 li
444.923 344.904 li
444.923 350.451 li
443.189 350.451 li
cp
.656916 .200534 1 .0402838 cmyk
f
464.865 316.313 mo
466.597 316.313 li
466.597 324.022 li
466.597 325.248 466.825 326.141 467.279 326.699 cv
467.733 327.257 468.455 327.536 469.446 327.536 cv
470.414 327.536 471.1 327.273 471.505 326.748 cv
471.909 326.223 472.111 325.333 472.111 324.078 cv
472.111 316.313 li
473.629 316.313 li
473.629 324.054 li
473.629 325.721 473.286 326.936 472.601 327.693 cv
471.917 328.452 470.826 328.832 469.33 328.832 cv
467.806 328.832 466.681 328.438 465.955 327.652 cv
465.228 326.866 464.865 325.65 464.865 324.004 cv
464.865 316.313 li
cp
476.662 328.527 mo
476.662 316.313 li
483.487 316.313 li
483.487 317.609 li
478.395 317.609 li
478.395 321.702 li
482.67 321.702 li
482.67 322.982 li
478.395 322.982 li
478.395 328.527 li
476.662 328.527 li
cp
488.107 328.832 mo
487.287 328.832 486.239 328.653 484.963 328.296 cv
484.963 326.58 li
486.338 327.217 487.469 327.536 488.354 327.536 cv
489.037 327.536 489.586 327.357 490 327 cv
490.416 326.643 490.623 326.172 490.623 325.589 cv
490.623 325.11 490.487 324.703 490.214 324.368 cv
489.942 324.033 489.439 323.659 488.709 323.246 cv
487.868 322.758 li
486.828 322.164 486.095 321.605 485.668 321.079 cv
485.241 320.554 485.028 319.942 485.028 319.244 cv
485.028 318.303 485.369 317.528 486.052 316.92 cv
486.734 316.313 487.604 316.008 488.66 316.008 cv
489.6 316.008 490.593 316.165 491.639 316.479 cv
491.639 318.063 li
490.351 317.557 489.391 317.304 488.758 317.304 cv
488.159 317.304 487.664 317.464 487.273 317.783 cv
486.882 318.103 486.687 318.503 486.687 318.987 cv
486.687 319.395 486.83 319.755 487.116 320.068 cv
487.402 320.381 487.925 320.756 488.685 321.191 cv
489.559 321.687 li
490.616 322.286 491.353 322.853 491.771 323.386 cv
492.188 323.919 492.396 324.561 492.396 325.31 cv
492.396 326.371 492.005 327.224 491.222 327.867 cv
490.438 328.51 489.399 328.832 488.107 328.832 cv
500.038 328.832 mo
498.14 328.832 496.674 328.275 495.64 327.161 cv
494.605 326.047 494.089 324.47 494.089 322.429 cv
494.089 320.395 494.616 318.815 495.669 317.692 cv
496.722 316.57 498.206 316.008 500.12 316.008 cv
501.216 316.008 502.497 316.188 503.966 316.545 cv
503.966 318.17 li
502.293 317.593 501.003 317.304 500.096 317.304 cv
498.77 317.304 497.744 317.752 497.018 318.649 cv
496.292 319.546 495.929 320.812 495.929 322.445 cv
495.929 324.002 496.317 325.23 497.092 326.13 cv
497.868 327.03 498.927 327.479 500.269 327.479 cv
501.424 327.479 502.662 327.124 503.983 326.414 cv
503.983 327.9 li
502.778 328.521 501.463 328.832 500.038 328.832 cv
f
543.859 226.892 mo
540.715 214.678 li
542.382 214.678 li
544.883 224.325 li
547.185 214.678 li
548.852 214.678 li
551.031 224.192 li
553.721 214.678 li
555.131 214.678 li
551.707 226.892 li
549.981 226.892 li
547.829 217.477 li
545.575 226.892 li
543.859 226.892 li
cp
561.95 227.196 mo
560.052 227.196 558.586 226.64 557.552 225.525 cv
556.518 224.412 556.001 222.834 556.001 220.793 cv
556.001 218.758 556.527 217.18 557.581 216.057 cv
558.634 214.935 560.118 214.373 562.032 214.373 cv
563.127 214.373 564.409 214.552 565.877 214.91 cv
565.877 216.535 li
564.205 215.958 562.915 215.668 562.007 215.668 cv
560.681 215.668 559.655 216.117 558.929 217.014 cv
558.203 217.911 557.841 219.176 557.841 220.81 cv
557.841 222.367 558.228 223.595 559.004 224.495 cv
559.78 225.395 560.839 225.844 562.18 225.844 cv
563.336 225.844 564.574 225.488 565.895 224.778 cv
565.895 226.265 li
564.688 226.886 563.374 227.196 561.95 227.196 cv
570.793 227.196 mo
569.973 227.196 568.924 227.018 567.648 226.661 cv
567.648 224.944 li
569.023 225.582 570.154 225.9 571.039 225.9 cv
571.722 225.9 572.271 225.722 572.686 225.365 cv
573.101 225.006 573.309 224.537 573.309 223.954 cv
573.309 223.475 573.173 223.067 572.899 222.732 cv
572.628 222.397 572.126 222.023 571.395 221.61 cv
570.553 221.123 li
569.514 220.528 568.78 219.97 568.354 219.443 cv
567.927 218.918 567.714 218.307 567.714 217.608 cv
567.714 216.667 568.055 215.893 568.738 215.285 cv
569.42 214.677 570.289 214.373 571.346 214.373 cv
572.286 214.373 573.279 214.529 574.324 214.843 cv
574.324 216.428 li
573.037 215.921 572.077 215.668 571.443 215.668 cv
570.845 215.668 570.349 215.829 569.958 216.147 cv
569.568 216.466 569.372 216.869 569.372 217.352 cv
569.372 217.758 569.515 218.12 569.802 218.433 cv
570.088 218.746 570.611 219.121 571.37 219.556 cv
572.245 220.051 li
573.301 220.65 574.039 221.216 574.456 221.75 cv
574.874 222.284 575.083 222.924 575.083 223.673 cv
575.083 224.735 574.69 225.588 573.907 226.231 cv
573.123 226.875 572.085 227.196 570.793 227.196 cv
.19791 .410834 .670069 .0102846 cmyk
f
389.804 282.218 mo
391.536 282.218 li
391.536 289.927 li
391.536 291.152 391.764 292.046 392.218 292.604 cv
392.672 293.162 393.394 293.44 394.385 293.44 cv
395.353 293.44 396.039 293.178 396.443 292.652 cv
396.848 292.128 397.05 291.238 397.05 289.982 cv
397.05 282.218 li
398.568 282.218 li
398.568 289.959 li
398.568 291.626 398.225 292.84 397.54 293.598 cv
396.855 294.356 395.765 294.736 394.269 294.736 cv
392.745 294.736 391.62 294.344 390.894 293.557 cv
390.167 292.771 389.804 291.555 389.804 289.909 cv
389.804 282.218 li
cp
401.6 294.432 mo
401.6 282.218 li
408.426 282.218 li
408.426 283.514 li
403.334 283.514 li
403.334 287.606 li
407.609 287.606 li
407.609 288.887 li
403.334 288.887 li
403.334 294.432 li
401.6 294.432 li
cp
415.884 294.736 mo
413.986 294.736 412.52 294.18 411.486 293.065 cv
410.452 291.952 409.935 290.375 409.935 288.334 cv
409.935 286.298 410.462 284.72 411.515 283.597 cv
412.569 282.475 414.053 281.913 415.967 281.913 cv
417.062 281.913 418.343 282.092 419.812 282.45 cv
419.812 284.075 li
418.139 283.498 416.849 283.209 415.941 283.209 cv
414.616 283.209 413.59 283.657 412.864 284.554 cv
412.138 285.451 411.774 286.716 411.774 288.35 cv
411.774 289.907 412.163 291.135 412.938 292.035 cv
413.714 292.935 414.772 293.384 416.115 293.384 cv
417.271 293.384 418.509 293.029 419.829 292.318 cv
419.829 293.805 li
418.624 294.426 417.309 294.736 415.884 294.736 cv
.656916 .200534 1 .0402838 cmyk
f
95.8022 179.637 mo
95.062 179.849 94.417 179.955 93.8682 179.955 cv
92.897 179.955 92.1523 179.678 91.6333 179.126 cv
91.1152 178.573 90.856 177.781 90.856 176.75 cv
90.856 175.737 91.1182 174.949 91.644 174.387 cv
92.1689 173.824 92.9063 173.543 93.855 173.543 cv
94.4771 173.543 95.123 173.636 95.7954 173.82 cv
95.7954 174.62 li
94.9531 174.333 94.3081 174.19 93.8594 174.19 cv
93.2002 174.19 92.687 174.415 92.3232 174.864 cv
91.958 175.312 91.7764 175.943 91.7764 176.757 cv
91.7764 177.564 91.9712 178.19 92.3623 178.637 cv
92.7534 179.084 93.3003 179.308 94.0044 179.308 cv
94.292 179.308 94.605 179.257 94.9404 179.155 cv
94.9404 177.166 li
95.8022 177.166 li
95.8022 179.637 li
cp
97.314 179.802 mo
97.314 173.696 li
100.727 173.696 li
100.727 174.344 li
98.1812 174.344 li
98.1812 176.303 li
100.315 176.303 li
100.315 176.943 li
98.1812 176.943 li
98.1812 179.155 li
100.904 179.155 li
100.904 179.802 li
97.314 179.802 li
cp
104.349 179.955 mo
103.502 179.955 102.82 179.661 102.305 179.074 cv
101.789 178.487 101.531 177.711 101.531 176.745 cv
101.531 175.774 101.79 174.998 102.309 174.416 cv
102.827 173.834 103.52 173.543 104.387 173.543 cv
105.251 173.543 105.942 173.833 106.462 174.414 cv
106.982 174.994 107.242 175.768 107.242 176.737 cv
107.242 177.724 106.982 178.508 106.462 179.086 cv
105.942 179.665 105.238 179.955 104.349 179.955 cv
104.362 179.308 mo
104.986 179.308 105.468 179.083 105.809 178.633 cv
106.15 178.183 106.321 177.548 106.321 176.728 cv
106.321 175.934 106.15 175.312 105.807 174.864 cv
105.465 174.415 104.991 174.19 104.387 174.19 cv
103.778 174.19 103.304 174.415 102.963 174.865 cv
102.622 175.315 102.451 175.94 102.451 176.741 cv
102.451 177.539 102.62 178.166 102.958 178.623 cv
103.296 179.079 103.764 179.308 104.362 179.308 cv
108.271 177.054 mo
111.935 177.054 li
111.935 177.665 li
108.271 177.665 li
108.271 177.054 li
cp
113.332 179.802 mo
113.332 173.696 li
114.533 173.696 li
116.225 178.42 li
117.966 173.696 li
119.038 173.696 li
119.038 179.802 li
118.23 179.802 li
118.23 174.834 li
116.546 179.393 li
115.708 179.393 li
114.075 174.823 li
114.075 179.802 li
113.332 179.802 li
cp
123.698 177.466 mo
122.657 174.834 li
121.614 177.466 li
123.698 177.466 li
cp
124.613 179.802 mo
123.949 178.111 li
121.362 178.111 li
120.69 179.802 li
119.885 179.802 li
122.308 173.696 li
123.165 173.696 li
125.551 179.802 li
124.613 179.802 li
cp
126.427 179.802 mo
126.427 173.696 li
128.275 173.696 li
128.862 173.696 129.311 173.825 129.623 174.084 cv
129.935 174.342 130.09 174.718 130.09 175.21 cv
130.09 176.025 129.679 176.602 128.857 176.943 cv
130.896 179.802 li
129.831 179.802 li
128.094 177.22 li
127.286 177.22 li
127.286 179.802 li
126.427 179.802 li
cp
127.286 176.571 mo
127.566 176.571 li
128.655 176.571 129.2 176.144 129.2 175.289 cv
129.2 174.659 128.743 174.344 127.83 174.344 cv
127.286 174.344 li
127.286 176.571 li
cp
131.76 173.696 mo
132.628 173.696 li
132.628 179.803 li
131.76 179.803 li
131.76 173.696 li
cp
134.197 179.802 mo
134.197 173.696 li
135.047 173.696 li
138.121 178.412 li
138.121 173.696 li
138.863 173.696 li
138.863 179.802 li
138.017 179.802 li
134.939 175.087 li
134.939 179.802 li
134.197 179.802 li
cp
140.433 179.802 mo
140.433 173.696 li
143.846 173.696 li
143.846 174.344 li
141.299 174.344 li
141.299 176.303 li
143.433 176.303 li
143.433 176.943 li
141.299 176.943 li
141.299 179.155 li
144.023 179.155 li
144.023 179.802 li
140.433 179.802 li
cp
.420417 .0190738 .507683 0 cmyk
f
150.525 244.68 mo
150.525 232.466 li
157.35 232.466 li
157.35 233.762 li
152.259 233.762 li
152.259 237.682 li
156.525 237.682 li
156.525 238.962 li
152.259 238.962 li
152.259 243.384 li
157.704 243.384 li
157.704 244.68 li
150.525 244.68 li
cp
162.58 244.68 mo
162.58 233.762 li
158.248 233.762 li
158.248 232.466 li
168.647 232.466 li
168.647 233.762 li
164.314 233.762 li
164.314 244.68 li
162.58 244.68 li
cp
172.745 244.985 mo
171.925 244.985 170.877 244.806 169.601 244.449 cv
169.601 242.733 li
170.976 243.37 172.107 243.689 172.992 243.689 cv
173.675 243.689 174.224 243.51 174.638 243.153 cv
175.054 242.795 175.261 242.325 175.261 241.742 cv
175.261 241.263 175.125 240.856 174.852 240.521 cv
174.58 240.187 174.078 239.813 173.347 239.399 cv
172.506 238.911 li
171.466 238.317 170.733 237.758 170.306 237.232 cv
169.879 236.707 169.666 236.095 169.666 235.397 cv
169.666 234.456 170.007 233.681 170.69 233.073 cv
171.372 232.465 172.242 232.161 173.298 232.161 cv
174.238 232.161 175.231 232.318 176.277 232.631 cv
176.277 234.216 li
174.989 233.71 174.029 233.457 173.397 233.457 cv
172.797 233.457 172.302 233.617 171.911 233.936 cv
171.52 234.255 171.325 234.656 171.325 235.141 cv
171.325 235.547 171.468 235.908 171.754 236.221 cv
172.04 236.534 172.563 236.909 173.323 237.344 cv
174.197 237.839 li
175.254 238.439 175.991 239.005 176.409 239.539 cv
176.826 240.072 177.035 240.713 177.035 241.462 cv
177.035 242.524 176.643 243.377 175.86 244.021 cv
175.076 244.663 174.037 244.985 172.745 244.985 cv
f
196.315 212.069 mo
195.906 212.069 195.382 211.98 194.743 211.801 cv
194.743 210.943 li
195.431 211.262 195.996 211.422 196.438 211.422 cv
196.781 211.422 197.055 211.333 197.263 211.154 cv
197.47 210.976 197.574 210.74 197.574 210.448 cv
197.574 210.208 197.505 210.005 197.37 209.837 cv
197.233 209.669 196.982 209.482 196.616 209.276 cv
196.196 209.032 li
195.676 208.735 195.31 208.457 195.096 208.193 cv
194.883 207.931 194.776 207.625 194.776 207.275 cv
194.776 206.804 194.947 206.417 195.288 206.113 cv
195.628 205.81 196.063 205.657 196.592 205.657 cv
197.063 205.657 197.559 205.736 198.082 205.893 cv
198.082 206.686 li
197.438 206.432 196.958 206.306 196.642 206.306 cv
196.343 206.306 196.095 206.384 195.899 206.544 cv
195.704 206.704 195.605 206.905 195.605 207.147 cv
195.605 207.352 195.678 207.531 195.82 207.688 cv
195.962 207.844 196.225 208.031 196.604 208.25 cv
197.041 208.498 li
197.57 208.796 197.938 209.08 198.147 209.346 cv
198.356 209.613 198.461 209.934 198.461 210.309 cv
198.461 210.839 198.266 211.266 197.874 211.587 cv
197.48 211.908 196.961 212.069 196.315 212.069 cv
199.665 211.917 mo
199.665 205.811 li
203.078 205.811 li
203.078 206.458 li
200.532 206.458 li
200.532 208.417 li
202.666 208.417 li
202.666 209.058 li
200.532 209.058 li
200.532 211.271 li
203.254 211.271 li
203.254 211.917 li
199.665 211.917 li
cp
204.241 211.917 mo
204.241 205.811 li
205.441 205.811 li
207.134 210.534 li
208.875 205.811 li
209.947 205.811 li
209.947 211.917 li
209.139 211.917 li
209.139 206.949 li
207.454 211.508 li
206.617 211.508 li
204.982 206.938 li
204.982 211.917 li
204.241 211.917 li
cp
214.605 209.582 mo
213.565 206.949 li
212.522 209.582 li
214.605 209.582 li
cp
215.521 211.917 mo
214.856 210.226 li
212.27 210.226 li
211.599 211.917 li
210.792 211.917 li
213.216 205.811 li
214.074 205.811 li
216.458 211.917 li
215.521 211.917 li
cp
217.335 211.917 mo
217.335 205.811 li
219.184 205.811 li
219.77 205.811 220.219 205.939 220.531 206.198 cv
220.843 206.458 220.999 206.833 220.999 207.324 cv
220.999 208.14 220.587 208.716 219.766 209.058 cv
221.804 211.917 li
220.739 211.917 li
219.002 209.334 li
218.195 209.334 li
218.195 211.917 li
217.335 211.917 li
cp
218.195 208.687 mo
218.475 208.687 li
219.563 208.687 220.107 208.258 220.107 207.403 cv
220.107 206.773 219.651 206.458 218.739 206.458 cv
218.195 206.458 li
218.195 208.687 li
cp
222.673 211.917 mo
222.673 205.811 li
223.523 205.811 li
226.598 210.527 li
226.598 205.811 li
227.34 205.811 li
227.34 211.917 li
226.494 211.917 li
223.416 207.201 li
223.416 211.917 li
222.673 211.917 li
cp
232.004 209.582 mo
230.963 206.949 li
229.92 209.582 li
232.004 209.582 li
cp
232.919 211.917 mo
232.255 210.226 li
229.668 210.226 li
228.997 211.917 li
228.191 211.917 li
230.615 205.811 li
231.472 205.811 li
233.856 211.917 li
232.919 211.917 li
cp
236.186 211.917 mo
236.186 206.458 li
234.02 206.458 li
234.02 205.811 li
239.219 205.811 li
239.219 206.458 li
237.052 206.458 li
237.052 211.917 li
236.186 211.917 li
cp
.0433051 0 .713497 0 cmyk
f
85.6074 223.055 mo
85.6074 216.948 li
89.02 216.948 li
89.02 217.597 li
86.4731 217.597 li
86.4731 219.555 li
88.6084 219.555 li
88.6084 220.195 li
86.4731 220.195 li
86.4731 222.408 li
89.1973 222.408 li
89.1973 223.055 li
85.6074 223.055 li
cp
90.1333 216.948 mo
90.999 216.948 li
90.999 220.802 li
90.999 221.415 91.1133 221.861 91.3394 222.141 cv
91.5664 222.42 91.9272 222.56 92.4224 222.56 cv
92.9072 222.56 93.25 222.429 93.4531 222.166 cv
93.6553 221.904 93.7563 221.459 93.7563 220.831 cv
93.7563 216.948 li
94.5151 216.948 li
94.5151 220.819 li
94.5151 221.652 94.3442 222.258 94.001 222.638 cv
93.6592 223.017 93.1143 223.207 92.3662 223.207 cv
91.604 223.207 91.041 223.011 90.6782 222.618 cv
90.3154 222.224 90.1333 221.617 90.1333 220.794 cv
90.1333 216.948 li
cp
97.4834 223.055 mo
97.4834 217.597 li
95.3174 217.597 li
95.3174 216.948 li
100.516 216.948 li
100.516 217.597 li
98.3501 217.597 li
98.3501 223.055 li
97.4834 223.055 li
cp
101.369 223.055 mo
101.369 216.948 li
103.217 216.948 li
103.804 216.948 104.253 217.077 104.565 217.336 cv
104.877 217.595 105.032 217.97 105.032 218.463 cv
105.032 219.277 104.621 219.855 103.799 220.195 cv
105.838 223.055 li
104.773 223.055 li
103.036 220.472 li
102.228 220.472 li
102.228 223.055 li
101.369 223.055 li
cp
102.228 219.824 mo
102.508 219.824 li
103.597 219.824 104.142 219.396 104.142 218.541 cv
104.142 217.911 103.685 217.597 102.772 217.597 cv
102.228 217.597 li
102.228 219.824 li
cp
109.166 223.207 mo
108.319 223.207 107.637 222.914 107.122 222.327 cv
106.606 221.74 106.348 220.963 106.348 219.998 cv
106.348 219.027 106.608 218.25 107.126 217.668 cv
107.644 217.087 108.337 216.796 109.204 216.796 cv
110.067 216.796 110.759 217.086 111.279 217.666 cv
111.799 218.247 112.059 219.021 112.059 219.989 cv
112.059 220.977 111.799 221.76 111.279 222.339 cv
110.759 222.918 110.055 223.207 109.166 223.207 cv
109.179 222.56 mo
109.803 222.56 110.285 222.335 110.626 221.886 cv
110.967 221.436 111.138 220.801 111.138 219.98 cv
111.138 219.186 110.967 218.565 110.624 218.116 cv
110.282 217.667 109.808 217.443 109.204 217.443 cv
108.595 217.443 108.121 217.668 107.78 218.117 cv
107.439 218.567 107.268 219.193 107.268 219.994 cv
107.268 220.792 107.437 221.419 107.775 221.875 cv
108.113 222.332 108.581 222.56 109.179 222.56 cv
113.264 223.055 mo
113.264 216.948 li
114.927 216.948 li
115.664 216.948 116.194 217.073 116.516 217.322 cv
116.838 217.571 116.999 217.98 116.999 218.55 cv
116.999 219.199 116.779 219.708 116.339 220.076 cv
115.899 220.445 115.288 220.629 114.506 220.629 cv
114.123 220.629 li
114.123 223.055 li
113.264 223.055 li
cp
114.123 219.973 mo
114.473 219.973 li
114.988 219.973 115.385 219.855 115.666 219.618 cv
115.946 219.382 116.087 219.047 116.087 218.615 cv
116.087 218.25 115.977 217.988 115.756 217.832 cv
115.536 217.675 115.169 217.597 114.656 217.597 cv
114.123 217.597 li
114.123 219.973 li
cp
117.926 216.948 mo
118.794 216.948 li
118.794 223.055 li
117.926 223.055 li
117.926 216.948 li
cp
123.457 220.719 mo
122.417 218.087 li
121.374 220.719 li
123.457 220.719 li
cp
124.373 223.055 mo
123.708 221.363 li
121.121 221.363 li
120.449 223.055 li
119.644 223.055 li
122.067 216.948 li
122.925 216.948 li
125.31 223.055 li
124.373 223.055 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
192.888 196.645 mo
193.756 196.645 li
193.756 202.752 li
192.888 202.752 li
192.888 196.645 li
cp
196.776 202.752 mo
196.776 197.293 li
194.61 197.293 li
194.61 196.645 li
199.809 196.645 li
199.809 197.293 li
197.642 197.293 li
197.642 202.752 li
196.776 202.752 li
cp
200.662 202.752 mo
200.662 196.645 li
201.863 196.645 li
203.555 201.369 li
205.296 196.645 li
206.368 196.645 li
206.368 202.752 li
205.56 202.752 li
205.56 197.784 li
203.875 202.343 li
203.038 202.343 li
201.405 197.772 li
201.405 202.752 li
200.662 202.752 li
cp
207.941 203.974 mo
210.141 196.645 li
210.779 196.645 li
208.581 203.974 li
207.941 203.974 li
cp
213.556 202.904 mo
213.146 202.904 212.622 202.815 211.984 202.636 cv
211.984 201.778 li
212.671 202.098 213.237 202.257 213.68 202.257 cv
214.021 202.257 214.296 202.168 214.503 201.989 cv
214.711 201.81 214.814 201.575 214.814 201.284 cv
214.814 201.044 214.746 200.84 214.611 200.672 cv
214.475 200.504 214.223 200.317 213.857 200.111 cv
213.436 199.867 li
212.917 199.57 212.55 199.291 212.337 199.028 cv
212.124 198.766 212.017 198.46 212.017 198.11 cv
212.017 197.639 212.187 197.252 212.529 196.948 cv
212.869 196.645 213.304 196.493 213.832 196.493 cv
214.303 196.493 214.8 196.571 215.322 196.728 cv
215.322 197.52 li
214.679 197.266 214.199 197.14 213.883 197.14 cv
213.583 197.14 213.335 197.22 213.14 197.379 cv
212.945 197.539 212.847 197.74 212.847 197.983 cv
212.847 198.186 212.918 198.366 213.061 198.522 cv
213.204 198.679 213.465 198.866 213.845 199.084 cv
214.282 199.332 li
214.81 199.631 215.179 199.914 215.388 200.181 cv
215.598 200.448 215.702 200.768 215.702 201.143 cv
215.702 201.674 215.506 202.1 215.114 202.422 cv
214.722 202.743 214.203 202.904 213.556 202.904 cv
219.365 202.904 mo
218.518 202.904 217.836 202.611 217.321 202.024 cv
216.805 201.436 216.547 200.66 216.547 199.695 cv
216.547 198.724 216.807 197.947 217.325 197.365 cv
217.844 196.784 218.536 196.493 219.403 196.493 cv
220.267 196.493 220.958 196.783 221.478 197.363 cv
221.998 197.944 222.258 198.718 222.258 199.686 cv
222.258 200.674 221.998 201.457 221.478 202.036 cv
220.958 202.615 220.254 202.904 219.365 202.904 cv
219.378 202.257 mo
220.002 202.257 220.484 202.032 220.826 201.582 cv
221.167 201.133 221.337 200.498 221.337 199.677 cv
221.337 198.883 221.166 198.262 220.823 197.813 cv
220.481 197.364 220.007 197.14 219.403 197.14 cv
218.794 197.14 218.32 197.365 217.979 197.814 cv
217.638 198.264 217.467 198.889 217.467 199.69 cv
217.467 200.488 217.636 201.116 217.974 201.572 cv
218.312 202.029 218.78 202.257 219.378 202.257 cv
224.661 202.904 mo
224.25 202.904 223.726 202.815 223.088 202.636 cv
223.088 201.778 li
223.776 202.098 224.341 202.257 224.784 202.257 cv
225.125 202.257 225.4 202.168 225.607 201.989 cv
225.815 201.81 225.919 201.575 225.919 201.284 cv
225.919 201.044 225.851 200.84 225.715 200.672 cv
225.579 200.504 225.328 200.317 224.961 200.111 cv
224.54 199.867 li
224.021 199.57 223.654 199.291 223.441 199.028 cv
223.228 198.766 223.121 198.46 223.121 198.11 cv
223.121 197.639 223.292 197.252 223.633 196.948 cv
223.974 196.645 224.408 196.493 224.936 196.493 cv
225.407 196.493 225.904 196.571 226.427 196.728 cv
226.427 197.52 li
225.783 197.266 225.303 197.14 224.987 197.14 cv
224.687 197.14 224.44 197.22 224.244 197.379 cv
224.049 197.539 223.951 197.74 223.951 197.983 cv
223.951 198.186 224.022 198.366 224.165 198.522 cv
224.308 198.679 224.569 198.866 224.949 199.084 cv
225.386 199.332 li
225.914 199.631 226.283 199.914 226.492 200.181 cv
226.702 200.448 226.807 200.768 226.807 201.143 cv
226.807 201.674 226.611 202.1 226.218 202.422 cv
225.826 202.743 225.307 202.904 224.661 202.904 cv
f
197.694 193.637 mo
196.847 193.637 196.165 193.344 195.65 192.756 cv
195.134 192.169 194.876 191.393 194.876 190.428 cv
194.876 189.456 195.135 188.68 195.654 188.098 cv
196.173 187.516 196.865 187.225 197.732 187.225 cv
198.596 187.225 199.287 187.516 199.807 188.096 cv
200.327 188.676 200.587 189.451 200.587 190.419 cv
200.587 191.407 200.327 192.19 199.807 192.769 cv
199.287 193.348 198.583 193.637 197.694 193.637 cv
197.707 192.99 mo
198.331 192.99 198.813 192.765 199.154 192.315 cv
199.495 191.865 199.666 191.23 199.666 190.41 cv
199.666 189.616 199.495 188.994 199.152 188.546 cv
198.81 188.097 198.336 187.873 197.732 187.873 cv
197.123 187.873 196.649 188.097 196.308 188.547 cv
195.967 188.997 195.796 189.622 195.796 190.423 cv
195.796 191.221 195.965 191.848 196.303 192.305 cv
196.641 192.762 197.109 192.99 197.707 192.99 cv
201.793 193.485 mo
201.793 187.378 li
202.994 187.378 li
204.686 192.102 li
206.427 187.378 li
207.499 187.378 li
207.499 193.485 li
206.691 193.485 li
206.691 188.517 li
205.006 193.076 li
204.169 193.076 li
202.535 188.505 li
202.535 193.485 li
201.793 193.485 li
cp
212.158 191.149 mo
211.118 188.517 li
210.075 191.149 li
212.158 191.149 li
cp
213.074 193.485 mo
212.409 191.793 li
209.822 191.793 li
209.151 193.485 li
208.345 193.485 li
210.768 187.378 li
211.626 187.378 li
214.011 193.485 li
213.074 193.485 li
cp
217.504 193.637 mo
216.555 193.637 215.822 193.358 215.305 192.801 cv
214.788 192.244 214.529 191.455 214.529 190.435 cv
214.529 189.417 214.793 188.628 215.319 188.067 cv
215.846 187.506 216.588 187.225 217.546 187.225 cv
218.092 187.225 218.733 187.315 219.468 187.494 cv
219.468 188.306 li
218.631 188.017 217.986 187.873 217.533 187.873 cv
216.87 187.873 216.357 188.097 215.994 188.546 cv
215.631 188.994 215.449 189.627 215.449 190.443 cv
215.449 191.222 215.643 191.836 216.031 192.286 cv
216.419 192.736 216.948 192.961 217.62 192.961 cv
218.197 192.961 218.816 192.783 219.475 192.428 cv
219.475 193.171 li
218.874 193.482 218.217 193.637 217.504 193.637 cv
220.728 193.485 mo
220.728 187.378 li
221.594 187.378 li
221.594 189.953 li
224.499 189.953 li
224.499 187.378 li
225.367 187.378 li
225.367 193.485 li
224.499 193.485 li
224.499 190.6 li
221.594 190.6 li
221.594 193.485 li
220.728 193.485 li
cp
230.026 191.149 mo
228.986 188.517 li
227.943 191.149 li
230.026 191.149 li
cp
230.942 193.485 mo
230.277 191.793 li
227.69 191.793 li
227.019 193.485 li
226.213 193.485 li
228.636 187.378 li
229.494 187.378 li
231.879 193.485 li
230.942 193.485 li
cp
f
471.177 339.324 mo
472.043 339.324 li
472.043 343.178 li
472.043 343.791 472.157 344.237 472.383 344.518 cv
472.609 344.796 472.971 344.937 473.467 344.937 cv
473.951 344.937 474.295 344.806 474.497 344.542 cv
474.699 344.28 474.8 343.834 474.8 343.207 cv
474.8 339.324 li
475.559 339.324 li
475.559 343.195 li
475.559 344.028 475.388 344.634 475.045 345.015 cv
474.703 345.394 474.158 345.583 473.41 345.583 cv
472.647 345.583 472.085 345.387 471.722 344.993 cv
471.358 344.601 471.177 343.993 471.177 343.17 cv
471.177 339.324 li
cp
479.535 345.583 mo
478.687 345.583 478.006 345.29 477.49 344.703 cv
476.975 344.115 476.717 343.339 476.717 342.374 cv
476.717 341.403 476.976 340.626 477.495 340.044 cv
478.013 339.463 478.706 339.172 479.572 339.172 cv
480.436 339.172 481.128 339.462 481.647 340.042 cv
482.168 340.622 482.428 341.397 482.428 342.365 cv
482.428 343.354 482.168 344.136 481.647 344.715 cv
481.128 345.294 480.423 345.583 479.535 345.583 cv
479.548 344.937 mo
480.172 344.937 480.654 344.711 480.995 344.261 cv
481.336 343.813 481.506 343.177 481.506 342.356 cv
481.506 341.563 481.335 340.941 480.993 340.492 cv
480.649 340.043 480.177 339.819 479.572 339.819 cv
478.964 339.819 478.488 340.044 478.147 340.493 cv
477.807 340.943 477.637 341.568 477.637 342.37 cv
477.637 343.167 477.806 343.795 478.144 344.251 cv
478.481 344.708 478.95 344.937 479.548 344.937 cv
485.085 345.432 mo
485.085 339.973 li
482.919 339.973 li
482.919 339.324 li
488.118 339.324 li
488.118 339.973 li
485.952 339.973 li
485.952 345.432 li
485.085 345.432 li
cp
492.065 343.096 mo
491.024 340.463 li
489.981 343.096 li
492.065 343.096 li
cp
492.98 345.432 mo
492.316 343.739 li
489.729 343.739 li
489.058 345.432 li
488.253 345.432 li
490.676 339.324 li
491.533 339.324 li
493.918 345.432 li
492.98 345.432 li
cp
499.383 345.266 mo
498.643 345.478 497.998 345.583 497.449 345.583 cv
496.478 345.583 495.732 345.308 495.214 344.754 cv
494.695 344.201 494.437 343.409 494.437 342.378 cv
494.437 341.365 494.699 340.578 495.224 340.016 cv
495.75 339.453 496.486 339.172 497.436 339.172 cv
498.058 339.172 498.704 339.265 499.376 339.449 cv
499.376 340.248 li
498.534 339.962 497.889 339.819 497.439 339.819 cv
496.779 339.819 496.268 340.043 495.904 340.492 cv
495.539 340.941 495.356 341.572 495.356 342.385 cv
495.356 343.192 495.552 343.819 495.942 344.267 cv
496.333 344.713 496.881 344.937 497.585 344.937 cv
497.873 344.937 498.185 344.885 498.521 344.784 cv
498.521 342.795 li
499.383 342.795 li
499.383 345.266 li
cp
503.354 345.583 mo
502.507 345.583 501.826 345.29 501.31 344.703 cv
500.795 344.115 500.537 343.339 500.537 342.374 cv
500.537 341.403 500.796 340.626 501.314 340.044 cv
501.833 339.463 502.525 339.172 503.392 339.172 cv
504.256 339.172 504.948 339.462 505.468 340.042 cv
505.988 340.622 506.248 341.397 506.248 342.365 cv
506.248 343.354 505.988 344.136 505.468 344.715 cv
504.948 345.294 504.243 345.583 503.354 345.583 cv
503.368 344.937 mo
503.992 344.937 504.474 344.711 504.814 344.261 cv
505.156 343.813 505.326 343.177 505.326 342.356 cv
505.326 341.563 505.154 340.941 504.813 340.492 cv
504.47 340.043 503.997 339.819 503.392 339.819 cv
502.784 339.819 502.309 340.044 501.968 340.493 cv
501.627 340.943 501.457 341.568 501.457 342.37 cv
501.457 343.167 501.626 343.795 501.964 344.251 cv
502.302 344.708 502.77 344.937 503.368 344.937 cv
.656916 .200534 1 .0402838 cmyk
f
24.6685 223.95 mo
24.6685 217.843 li
26.2524 217.843 li
26.8633 217.843 27.3315 217.959 27.6577 218.19 cv
27.9834 218.421 28.1465 218.754 28.1465 219.188 cv
28.1465 219.928 27.7285 220.455 26.8926 220.768 cv
27.8916 221.074 28.3906 221.626 28.3906 222.424 cv
28.3906 222.919 28.2256 223.297 27.8955 223.558 cv
27.5654 223.819 27.0894 223.95 26.4673 223.95 cv
24.6685 223.95 li
cp
25.5273 223.303 mo
25.7046 223.303 li
26.3394 223.303 26.7515 223.263 26.9375 223.182 cv
27.2954 223.031 27.4746 222.751 27.4746 222.341 cv
27.4746 221.978 27.3125 221.676 26.9873 221.436 cv
26.6636 221.195 26.2573 221.074 25.7695 221.074 cv
25.5273 221.074 li
25.5273 223.303 li
cp
25.5273 220.526 mo
25.8037 220.526 li
26.2656 220.526 26.6235 220.427 26.8784 220.228 cv
27.1323 220.03 27.2593 219.751 27.2593 219.391 cv
27.2593 218.791 26.7954 218.492 25.8657 218.492 cv
25.5273 218.492 li
25.5273 220.526 li
cp
29.5483 219.47 mo
30.3604 219.47 li
30.3604 223.95 li
29.5483 223.95 li
29.5483 219.47 li
cp
29.5483 217.843 mo
30.3604 217.843 li
30.3604 218.655 li
29.5483 218.655 li
29.5483 217.843 li
cp
33.7437 224.053 mo
33.1016 224.053 32.5903 223.84 32.2075 223.415 cv
31.8257 222.99 31.6343 222.422 31.6343 221.71 cv
31.6343 220.989 31.8267 220.419 32.2104 219.999 cv
32.5933 219.579 33.1143 219.369 33.7725 219.369 cv
34.4287 219.369 34.9497 219.579 35.3335 219.999 cv
35.7173 220.419 35.9097 220.986 35.9097 221.701 cv
35.9097 222.433 35.7163 223.008 35.3315 223.426 cv
34.9463 223.844 34.4175 224.053 33.7437 224.053 cv
33.7544 223.442 mo
34.6157 223.442 35.0454 222.862 35.0454 221.701 cv
35.0454 220.554 34.6216 219.98 33.7725 219.98 cv
32.9243 219.98 32.5015 220.557 32.5015 221.71 cv
32.5015 222.865 32.9185 223.442 33.7544 223.442 cv
37.1494 223.95 mo
37.1494 217.843 li
38.8125 217.843 li
39.5493 217.843 40.0786 217.967 40.4004 218.217 cv
40.7236 218.466 40.8843 218.875 40.8843 219.445 cv
40.8843 220.094 40.6646 220.603 40.2236 220.971 cv
39.7837 221.34 39.1733 221.524 38.3916 221.524 cv
38.0083 221.524 li
38.0083 223.95 li
37.1494 223.95 li
cp
38.0083 220.868 mo
38.3584 220.868 li
38.8726 220.868 39.2705 220.75 39.5503 220.513 cv
39.8315 220.277 39.9717 219.942 39.9717 219.51 cv
39.9717 219.144 39.8613 218.883 39.6416 218.727 cv
39.4214 218.57 39.0547 218.492 38.5405 218.492 cv
38.0083 218.492 li
38.0083 220.868 li
cp
45.1245 223.805 mo
44.5806 223.97 44.1143 224.053 43.7266 224.053 cv
43.0654 224.053 42.5273 223.834 42.1104 223.395 cv
41.6943 222.956 41.4854 222.388 41.4854 221.689 cv
41.4854 221.009 41.6694 220.452 42.0366 220.018 cv
42.4033 219.584 42.8735 219.367 43.4443 219.367 cv
43.9873 219.367 44.4067 219.559 44.7017 219.944 cv
44.9976 220.329 45.1455 220.876 45.1455 221.586 cv
45.1406 221.837 li
42.3145 221.837 li
42.4336 222.902 42.9546 223.435 43.8784 223.435 cv
44.2173 223.435 44.6323 223.344 45.1245 223.162 cv
45.1245 223.805 li
cp
42.3525 221.227 mo
44.3286 221.227 li
44.3286 220.393 44.0176 219.976 43.3955 219.976 cv
42.7715 219.976 42.4233 220.393 42.3525 221.227 cv
47.7314 224.053 mo
47.3594 224.053 46.9087 223.966 46.3774 223.793 cv
46.3774 223.046 li
46.9087 223.31 47.3716 223.442 47.7646 223.442 cv
47.9985 223.442 48.1924 223.379 48.3467 223.253 cv
48.5005 223.127 48.5776 222.968 48.5776 222.778 cv
48.5776 222.5 48.3613 222.27 47.9307 222.088 cv
47.4556 221.887 li
46.7544 221.596 46.4033 221.176 46.4033 220.629 cv
46.4033 220.238 46.5415 219.93 46.8174 219.706 cv
47.0947 219.482 47.4736 219.369 47.9546 219.369 cv
48.2056 219.369 48.5146 219.404 48.8833 219.474 cv
49.0513 219.506 li
49.0513 220.183 li
48.5986 220.048 48.2373 219.98 47.9707 219.98 cv
47.4487 219.98 47.1875 220.17 47.1875 220.55 cv
47.1875 220.795 47.3857 221.001 47.7803 221.169 cv
48.1733 221.334 li
48.6157 221.521 48.9297 221.718 49.1133 221.926 cv
49.2974 222.134 49.3896 222.393 49.3896 222.704 cv
49.3896 223.097 49.2344 223.421 48.9243 223.674 cv
48.6133 223.927 48.2153 224.053 47.7314 224.053 cv
52.5967 224.053 mo
51.9907 224.053 51.4883 223.829 51.0894 223.381 cv
50.6914 222.932 50.4927 222.367 50.4927 221.685 cv
50.4927 220.956 50.6895 220.387 51.0845 219.98 cv
51.4785 219.573 52.0293 219.369 52.7363 219.369 cv
53.0854 219.369 53.4766 219.418 53.9077 219.514 cv
53.9077 220.195 li
53.4487 220.061 53.0747 219.993 52.7866 219.993 cv
52.3706 219.993 52.0366 220.149 51.7847 220.461 cv
51.5337 220.773 51.4077 221.189 51.4077 221.71 cv
51.4077 222.213 51.5376 222.62 51.7954 222.931 cv
52.0547 223.242 52.3926 223.397 52.8105 223.397 cv
53.1826 223.397 53.5645 223.302 53.9575 223.113 cv
53.9575 223.814 li
53.4316 223.973 52.9785 224.053 52.5967 224.053 cv
57.4814 223.381 mo
56.9937 223.829 56.5244 224.053 56.0737 224.053 cv
55.7026 224.053 55.3945 223.937 55.1494 223.704 cv
54.9043 223.471 54.7827 223.178 54.7827 222.824 cv
54.7827 222.334 54.9883 221.957 55.3994 221.695 cv
55.8105 221.432 56.3994 221.301 57.1675 221.301 cv
57.3604 221.301 li
57.3604 220.761 li
57.3604 220.24 57.0947 219.98 56.5615 219.98 cv
56.1313 219.98 55.6685 220.112 55.1704 220.376 cv
55.1704 219.705 li
55.7173 219.481 56.2305 219.369 56.7095 219.369 cv
57.2104 219.369 57.5796 219.482 57.8174 219.708 cv
58.0547 219.934 58.1733 220.285 58.1733 220.761 cv
58.1733 222.791 li
58.1733 223.255 58.3164 223.487 58.6025 223.487 cv
58.6387 223.487 58.6904 223.482 58.7593 223.471 cv
58.8174 223.921 li
58.6333 224.009 58.4307 224.053 58.2065 224.053 cv
57.8276 224.053 57.5854 223.829 57.4814 223.381 cv
57.3604 222.939 mo
57.3604 221.779 li
57.0894 221.771 li
56.6436 221.771 56.2837 221.855 56.0073 222.025 cv
55.7324 222.194 55.5957 222.416 55.5957 222.692 cv
55.5957 222.887 55.6646 223.052 55.8013 223.187 cv
55.9395 223.321 56.1074 223.389 56.3047 223.389 cv
56.6436 223.389 56.9956 223.238 57.3604 222.939 cv
.19791 .410834 .670069 .0102846 cmyk
f
325.843 240.407 mo
325.843 234.301 li
326.693 234.301 li
329.769 239.018 li
329.769 234.301 li
330.509 234.301 li
330.509 240.407 li
329.663 240.407 li
326.586 235.692 li
326.586 240.407 li
325.843 240.407 li
cp
335.174 238.071 mo
334.134 235.439 li
333.091 238.071 li
335.174 238.071 li
cp
336.09 240.407 mo
335.425 238.715 li
332.838 238.715 li
332.166 240.407 li
331.361 240.407 li
333.784 234.301 li
334.643 234.301 li
337.027 240.407 li
336.09 240.407 li
cp
339.356 240.407 mo
339.356 234.949 li
337.19 234.949 li
337.19 234.301 li
342.388 234.301 li
342.388 234.949 li
340.222 234.949 li
340.222 240.407 li
339.356 240.407 li
cp
343.192 234.301 mo
344.059 234.301 li
344.059 238.154 li
344.059 238.768 344.171 239.213 344.398 239.493 cv
344.625 239.773 344.986 239.912 345.481 239.912 cv
345.966 239.912 346.309 239.781 346.512 239.519 cv
346.714 239.256 346.815 238.812 346.815 238.184 cv
346.815 234.301 li
347.574 234.301 li
347.574 238.171 li
347.574 239.004 347.402 239.61 347.061 239.99 cv
346.718 240.37 346.173 240.56 345.425 240.56 cv
344.663 240.56 344.1 240.363 343.737 239.971 cv
343.373 239.576 343.192 238.97 343.192 238.147 cv
343.192 234.301 li
cp
349.09 240.407 mo
349.09 234.301 li
350.939 234.301 li
351.525 234.301 351.974 234.43 352.286 234.688 cv
352.598 234.947 352.754 235.323 352.754 235.815 cv
352.754 236.629 352.343 237.207 351.521 237.547 cv
353.559 240.407 li
352.494 240.407 li
350.757 237.824 li
349.949 237.824 li
349.949 240.407 li
349.09 240.407 li
cp
349.949 237.177 mo
350.229 237.177 li
351.318 237.177 351.863 236.748 351.863 235.894 cv
351.863 235.265 351.406 234.949 350.493 234.949 cv
349.949 234.949 li
349.949 237.177 li
cp
357.523 238.071 mo
356.482 235.439 li
355.439 238.071 li
357.523 238.071 li
cp
358.438 240.407 mo
357.774 238.715 li
355.188 238.715 li
354.515 240.407 li
353.71 240.407 li
356.133 234.301 li
356.99 234.301 li
359.376 240.407 li
358.438 240.407 li
cp
f
101.104 238.568 mo
101.104 232.461 li
104.518 232.461 li
104.518 233.111 li
101.97 233.111 li
101.97 235.068 li
104.105 235.068 li
104.105 235.709 li
101.97 235.709 li
101.97 237.922 li
104.694 237.922 li
104.694 238.568 li
101.104 238.568 li
cp
108.295 238.721 mo
107.346 238.721 106.613 238.442 106.096 237.886 cv
105.58 237.327 105.321 236.54 105.321 235.519 cv
105.321 234.502 105.584 233.711 106.111 233.15 cv
106.637 232.59 107.38 232.31 108.337 232.31 cv
108.884 232.31 109.525 232.398 110.26 232.578 cv
110.26 233.391 li
109.423 233.101 108.778 232.957 108.324 232.957 cv
107.663 232.957 107.149 233.181 106.787 233.629 cv
106.422 234.078 106.241 234.711 106.241 235.527 cv
106.241 236.306 106.436 236.921 106.823 237.369 cv
107.21 237.819 107.74 238.045 108.412 238.045 cv
108.989 238.045 109.607 237.867 110.268 237.513 cv
110.268 238.256 li
109.666 238.565 109.008 238.721 108.295 238.721 cv
113.979 238.721 mo
113.132 238.721 112.45 238.428 111.936 237.841 cv
111.419 237.254 111.162 236.477 111.162 235.512 cv
111.162 234.541 111.421 233.764 111.939 233.182 cv
112.458 232.601 113.15 232.31 114.018 232.31 cv
114.881 232.31 115.573 232.6 116.092 233.18 cv
116.612 233.761 116.873 234.534 116.873 235.503 cv
116.873 236.49 116.612 237.273 116.092 237.853 cv
115.573 238.432 114.868 238.721 113.979 238.721 cv
113.992 238.073 mo
114.616 238.073 115.1 237.849 115.439 237.399 cv
115.78 236.949 115.951 236.314 115.951 235.494 cv
115.951 234.699 115.78 234.078 115.438 233.629 cv
115.095 233.181 114.622 232.957 114.018 232.957 cv
113.408 232.957 112.935 233.182 112.593 233.632 cv
112.252 234.081 112.082 234.707 112.082 235.508 cv
112.082 236.306 112.25 236.933 112.588 237.389 cv
112.926 237.846 113.395 238.073 113.992 238.073 cv
119.275 238.721 mo
118.864 238.721 118.34 238.632 117.702 238.452 cv
117.702 237.595 li
118.391 237.915 118.956 238.073 119.398 238.073 cv
119.739 238.073 120.014 237.984 120.221 237.806 cv
120.429 237.627 120.533 237.392 120.533 237.101 cv
120.533 236.86 120.465 236.656 120.33 236.488 cv
120.193 236.32 119.942 236.134 119.575 235.928 cv
119.154 235.685 li
118.635 235.388 118.269 235.107 118.055 234.845 cv
117.842 234.583 117.735 234.276 117.735 233.927 cv
117.735 233.456 117.906 233.068 118.248 232.765 cv
118.588 232.461 119.022 232.31 119.55 232.31 cv
120.021 232.31 120.519 232.388 121.041 232.544 cv
121.041 233.336 li
120.397 233.083 119.917 232.957 119.602 232.957 cv
119.301 232.957 119.054 233.037 118.858 233.196 cv
118.664 233.355 118.565 233.557 118.565 233.8 cv
118.565 234.003 118.637 234.183 118.779 234.34 cv
118.922 234.496 119.184 234.683 119.563 234.9 cv
120 235.148 li
120.528 235.447 120.897 235.73 121.107 235.998 cv
121.316 236.265 121.421 236.586 121.421 236.96 cv
121.421 237.49 121.225 237.917 120.833 238.238 cv
120.44 238.56 119.921 238.721 119.275 238.721 cv
122.575 232.461 mo
123.441 232.461 li
123.441 236.315 li
123.441 236.929 123.554 237.375 123.781 237.654 cv
124.008 237.935 124.37 238.073 124.864 238.073 cv
125.35 238.073 125.692 237.942 125.895 237.68 cv
126.097 237.418 126.198 236.973 126.198 236.345 cv
126.198 232.461 li
126.957 232.461 li
126.957 236.333 li
126.957 237.166 126.785 237.771 126.443 238.151 cv
126.102 238.53 125.555 238.721 124.809 238.721 cv
124.045 238.721 123.483 238.524 123.121 238.132 cv
122.756 237.737 122.575 237.131 122.575 236.309 cv
122.575 232.461 li
cp
128.474 238.568 mo
128.474 232.461 li
130.321 232.461 li
130.908 232.461 131.357 232.591 131.669 232.85 cv
131.98 233.108 132.137 233.483 132.137 233.977 cv
132.137 234.791 131.726 235.368 130.903 235.709 cv
132.942 238.568 li
131.877 238.568 li
130.141 235.985 li
129.333 235.985 li
129.333 238.568 li
128.474 238.568 li
cp
129.333 235.338 mo
129.612 235.338 li
130.701 235.338 131.247 234.909 131.247 234.055 cv
131.247 233.426 130.79 233.111 129.876 233.111 cv
129.333 233.111 li
129.333 235.338 li
cp
.0433051 0 .713497 0 cmyk
f
45.4951 180.246 mo
44.5459 180.246 43.813 179.967 43.2959 179.41 cv
42.7788 178.854 42.521 178.064 42.521 177.044 cv
42.521 176.026 42.7842 175.237 43.311 174.676 cv
43.8369 174.115 44.5791 173.834 45.5371 173.834 cv
46.084 173.834 46.7241 173.924 47.459 174.104 cv
47.459 174.916 li
46.623 174.626 45.978 174.482 45.5239 174.482 cv
44.8608 174.482 44.3491 174.707 43.9849 175.155 cv
43.6221 175.604 43.4399 176.236 43.4399 177.052 cv
43.4399 177.832 43.6338 178.445 44.022 178.896 cv
44.4102 179.345 44.9399 179.57 45.6108 179.57 cv
46.188 179.57 46.8071 179.393 47.4668 179.037 cv
47.4668 179.78 li
46.8652 180.091 46.208 180.246 45.4951 180.246 cv
48.7202 180.094 mo
48.7202 173.987 li
52.1318 173.987 li
52.1318 174.635 li
49.5859 174.635 li
49.5859 176.594 li
51.7202 176.594 li
51.7202 177.234 li
49.5859 177.234 li
49.5859 179.447 li
52.3091 179.447 li
52.3091 180.094 li
48.7202 180.094 li
cp
54.7471 180.094 mo
54.7471 174.635 li
52.5811 174.635 li
52.5811 173.987 li
57.7798 173.987 li
57.7798 174.635 li
55.6128 174.635 li
55.6128 180.094 li
54.7471 180.094 li
cp
58.6328 180.094 mo
58.6328 173.987 li
59.499 173.987 li
59.499 176.563 li
62.4038 176.563 li
62.4038 173.987 li
63.271 173.987 li
63.271 180.094 li
62.4038 180.094 li
62.4038 177.209 li
59.499 177.209 li
59.499 180.094 li
58.6328 180.094 li
cp
64.7871 173.987 mo
65.6528 173.987 li
65.6528 177.84 li
65.6528 178.454 65.7661 178.9 65.9932 179.18 cv
66.2202 179.459 66.5811 179.599 67.0762 179.599 cv
67.561 179.599 67.9038 179.468 68.106 179.205 cv
68.3081 178.942 68.4102 178.497 68.4102 177.869 cv
68.4102 173.987 li
69.168 173.987 li
69.168 177.858 li
69.168 178.691 68.9971 179.297 68.6548 179.676 cv
68.312 180.056 67.7671 180.246 67.02 180.246 cv
66.2568 180.246 65.6948 180.049 65.3311 179.656 cv
64.9678 179.263 64.7871 178.655 64.7871 177.833 cv
64.7871 173.987 li
cp
71.8818 180.246 mo
71.4722 180.246 70.9468 180.157 70.3091 179.979 cv
70.3091 179.12 li
70.9971 179.439 71.562 179.599 72.0049 179.599 cv
72.3472 179.599 72.6211 179.509 72.8291 179.332 cv
73.0361 179.151 73.1401 178.917 73.1401 178.625 cv
73.1401 178.385 73.0718 178.182 72.936 178.014 cv
72.7998 177.846 72.5488 177.659 72.1821 177.453 cv
71.7612 177.209 li
71.2422 176.912 70.876 176.633 70.6621 176.37 cv
70.4492 176.107 70.3418 175.801 70.3418 175.452 cv
70.3418 174.981 70.5132 174.594 70.854 174.291 cv
71.1948 173.986 71.6289 173.834 72.1572 173.834 cv
72.6289 173.834 73.125 173.913 73.6479 174.069 cv
73.6479 174.862 li
73.0039 174.608 72.5249 174.482 72.208 174.482 cv
71.9082 174.482 71.6611 174.562 71.4648 174.721 cv
71.27 174.88 71.1719 175.083 71.1719 175.324 cv
71.1719 175.528 71.2441 175.708 71.3862 175.864 cv
71.5288 176.021 71.79 176.208 72.1709 176.426 cv
72.6069 176.674 li
73.1348 176.973 73.5039 177.256 73.7139 177.523 cv
73.9229 177.791 74.0278 178.11 74.0278 178.485 cv
74.0278 179.016 73.832 179.442 73.439 179.764 cv
73.0469 180.085 72.5278 180.246 71.8818 180.246 cv
.19791 .410834 .670069 .0102846 cmyk
f
71.0283 172.019 mo
70.0796 172.019 69.3467 171.74 68.8296 171.183 cv
68.3125 170.626 68.0547 169.837 68.0547 168.817 cv
68.0547 167.799 68.3174 167.01 68.8447 166.449 cv
69.3706 165.888 70.1123 165.607 71.0703 165.607 cv
71.6177 165.607 72.2573 165.697 72.9927 165.876 cv
72.9927 166.688 li
72.1563 166.399 71.5117 166.254 71.0576 166.254 cv
70.3945 166.254 69.8823 166.479 69.5186 166.928 cv
69.1553 167.377 68.9736 168.009 68.9736 168.826 cv
68.9736 169.604 69.1675 170.218 69.5557 170.668 cv
69.9434 171.118 70.4736 171.343 71.1445 171.343 cv
71.7217 171.343 72.3403 171.165 73.0005 170.81 cv
73.0005 171.553 li
72.3984 171.864 71.7417 172.019 71.0283 172.019 cv
74.2485 165.76 mo
75.1167 165.76 li
75.1167 171.867 li
74.2485 171.867 li
74.2485 165.76 li
cp
76.6846 171.867 mo
76.6846 165.76 li
78.2695 165.76 li
78.8794 165.76 79.3477 165.875 79.6733 166.106 cv
79.9995 166.338 80.1626 166.67 80.1626 167.105 cv
80.1626 167.845 79.7446 168.371 78.9097 168.685 cv
79.9077 168.99 80.4063 169.542 80.4063 170.34 cv
80.4063 170.835 80.2417 171.214 79.9116 171.475 cv
79.5815 171.736 79.1064 171.867 78.4844 171.867 cv
76.6846 171.867 li
cp
77.5435 171.22 mo
77.7207 171.22 li
78.3564 171.22 78.7676 171.179 78.9546 171.099 cv
79.3125 170.948 79.4917 170.668 79.4917 170.257 cv
79.4917 169.895 79.3286 169.593 79.0044 169.352 cv
78.6797 169.111 78.2734 168.991 77.7866 168.991 cv
77.5435 168.991 li
77.5435 171.22 li
cp
77.5435 168.442 mo
77.8193 168.442 li
78.2813 168.442 78.6406 168.343 78.8945 168.145 cv
79.1494 167.947 79.2764 167.668 79.2764 167.308 cv
79.2764 166.708 78.8115 166.408 77.8823 166.408 cv
77.5435 166.408 li
77.5435 168.442 li
cp
81.5405 171.867 mo
81.5405 165.76 li
82.3906 165.76 li
85.4653 170.477 li
85.4653 165.76 li
86.2065 165.76 li
86.2065 171.867 li
85.3604 171.867 li
82.2837 167.151 li
82.2837 171.867 li
81.5405 171.867 li
cp
90.2363 172.019 mo
89.3887 172.019 88.7075 171.725 88.1914 171.138 cv
87.6763 170.551 87.4185 169.775 87.4185 168.809 cv
87.4185 167.838 87.6777 167.062 88.1963 166.48 cv
88.7144 165.898 89.4077 165.607 90.2734 165.607 cv
91.1377 165.607 91.8296 165.898 92.3496 166.478 cv
92.8696 167.058 93.1294 167.833 93.1294 168.801 cv
93.1294 169.788 92.8696 170.572 92.3496 171.151 cv
91.8296 171.73 91.1255 172.019 90.2363 172.019 cv
90.2495 171.372 mo
90.8735 171.372 91.3555 171.147 91.6963 170.697 cv
92.0376 170.247 92.2075 169.612 92.2075 168.792 cv
92.2075 167.998 92.0366 167.377 91.6943 166.928 cv
91.3516 166.479 90.8784 166.254 90.2734 166.254 cv
89.6655 166.254 89.1904 166.479 88.8496 166.929 cv
88.5083 167.379 88.3384 168.004 88.3384 168.805 cv
88.3384 169.603 88.5073 170.231 88.8457 170.687 cv
89.1836 171.144 89.6514 171.372 90.2495 171.372 cv
94.3345 171.867 mo
94.3345 165.76 li
96.1836 165.76 li
96.7695 165.76 97.2183 165.889 97.5303 166.148 cv
97.8423 166.407 97.9985 166.782 97.9985 167.274 cv
97.9985 168.089 97.5874 168.666 96.7646 169.007 cv
98.8037 171.867 li
97.7383 171.867 li
96.0015 169.284 li
95.1934 169.284 li
95.1934 171.867 li
94.3345 171.867 li
cp
95.1934 168.635 mo
95.4736 168.635 li
96.5625 168.635 97.1074 168.208 97.1074 167.353 cv
97.1074 166.723 96.6504 166.408 95.7373 166.408 cv
95.1934 166.408 li
95.1934 168.635 li
cp
.0433051 0 .713497 0 cmyk
f
116.183 170.353 mo
115.443 170.565 114.798 170.671 114.249 170.671 cv
113.278 170.671 112.533 170.394 112.014 169.841 cv
111.496 169.289 111.237 168.497 111.237 167.466 cv
111.237 166.453 111.499 165.665 112.025 165.103 cv
112.55 164.54 113.287 164.259 114.236 164.259 cv
114.858 164.259 115.505 164.351 116.176 164.536 cv
116.176 165.336 li
115.334 165.049 114.689 164.906 114.24 164.906 cv
113.581 164.906 113.068 165.131 112.704 165.579 cv
112.339 166.028 112.157 166.659 112.157 167.473 cv
112.157 168.28 112.352 168.906 112.743 169.353 cv
113.134 169.8 113.681 170.024 114.385 170.024 cv
114.674 170.024 114.986 169.973 115.321 169.871 cv
115.321 167.882 li
116.183 167.882 li
116.183 170.353 li
cp
117.695 170.518 mo
117.695 164.411 li
121.108 164.411 li
121.108 165.06 li
118.562 165.06 li
118.562 167.019 li
120.696 167.019 li
120.696 167.659 li
118.562 167.659 li
118.562 169.871 li
121.285 169.871 li
121.285 170.518 li
117.695 170.518 li
cp
122.271 170.518 mo
122.271 164.411 li
123.472 164.411 li
125.164 169.136 li
126.905 164.411 li
127.977 164.411 li
127.977 170.518 li
127.169 170.518 li
127.169 165.55 li
125.484 170.109 li
124.647 170.109 li
123.014 165.539 li
123.014 170.518 li
122.271 170.518 li
cp
132.637 168.182 mo
131.596 165.55 li
130.553 168.182 li
132.637 168.182 li
cp
133.552 170.518 mo
132.887 168.827 li
130.301 168.827 li
129.629 170.518 li
128.823 170.518 li
131.247 164.411 li
132.104 164.411 li
134.489 170.518 li
133.552 170.518 li
cp
138.461 168.182 mo
137.42 165.55 li
136.377 168.182 li
138.461 168.182 li
cp
139.376 170.518 mo
138.712 168.827 li
136.125 168.827 li
135.453 170.518 li
134.648 170.518 li
137.071 164.411 li
137.928 164.411 li
140.314 170.518 li
139.376 170.518 li
cp
f
321.26 249.595 mo
321.26 243.487 li
322.923 243.487 li
323.66 243.487 324.188 243.612 324.512 243.861 cv
324.834 244.11 324.995 244.52 324.995 245.09 cv
324.995 245.738 324.774 246.247 324.334 246.615 cv
323.894 246.984 323.284 247.168 322.501 247.168 cv
322.119 247.168 li
322.119 249.595 li
321.26 249.595 li
cp
322.119 246.513 mo
322.469 246.513 li
322.983 246.513 323.381 246.395 323.661 246.158 cv
323.942 245.922 324.082 245.588 324.082 245.154 cv
324.082 244.789 323.972 244.527 323.751 244.371 cv
323.532 244.215 323.165 244.137 322.652 244.137 cv
322.119 244.137 li
322.119 246.513 li
cp
325.877 243.487 mo
326.742 243.487 li
326.742 247.342 li
326.742 247.954 326.855 248.4 327.083 248.681 cv
327.31 248.96 327.671 249.1 328.166 249.1 cv
328.65 249.1 328.994 248.969 329.195 248.705 cv
329.397 248.443 329.5 247.998 329.5 247.37 cv
329.5 243.487 li
330.258 243.487 li
330.258 247.358 li
330.258 248.191 330.087 248.798 329.745 249.178 cv
329.401 249.557 328.856 249.746 328.109 249.746 cv
327.347 249.746 326.785 249.551 326.421 249.157 cv
326.058 248.764 325.877 248.156 325.877 247.334 cv
325.877 243.487 li
cp
334.391 249.746 mo
333.441 249.746 332.709 249.469 332.191 248.911 cv
331.675 248.354 331.416 247.565 331.416 246.544 cv
331.416 245.527 331.68 244.737 332.207 244.177 cv
332.732 243.615 333.475 243.335 334.433 243.335 cv
334.979 243.335 335.62 243.425 336.354 243.604 cv
336.354 244.416 li
335.519 244.126 334.873 243.982 334.42 243.982 cv
333.757 243.982 333.244 244.206 332.881 244.655 cv
332.518 245.104 332.336 245.737 332.336 246.554 cv
332.336 247.332 332.529 247.946 332.918 248.396 cv
333.306 248.846 333.836 249.07 334.507 249.07 cv
335.084 249.07 335.703 248.894 336.362 248.538 cv
336.362 249.281 li
335.761 249.592 335.104 249.746 334.391 249.746 cv
337.614 249.595 mo
337.614 243.487 li
338.816 243.487 li
340.509 248.211 li
342.25 243.487 li
343.321 243.487 li
343.321 249.595 li
342.514 249.595 li
342.514 244.626 li
340.829 249.186 li
339.992 249.186 li
338.357 244.614 li
338.357 249.595 li
337.614 249.595 li
cp
349.474 249.43 mo
348.733 249.642 348.089 249.746 347.54 249.746 cv
346.568 249.746 345.823 249.471 345.306 248.917 cv
344.787 248.364 344.527 247.572 344.527 246.541 cv
344.527 245.529 344.791 244.741 345.315 244.179 cv
345.841 243.616 346.578 243.335 347.526 243.335 cv
348.148 243.335 348.796 243.428 349.467 243.612 cv
349.467 244.411 li
348.625 244.125 347.979 243.982 347.53 243.982 cv
346.872 243.982 346.358 244.206 345.995 244.655 cv
345.63 245.104 345.447 245.735 345.447 246.549 cv
345.447 247.355 345.643 247.982 346.033 248.43 cv
346.425 248.876 346.972 249.1 347.677 249.1 cv
347.965 249.1 348.276 249.049 348.611 248.947 cv
348.611 246.958 li
349.474 246.958 li
349.474 249.43 li
cp
.656916 .200534 1 .0402838 cmyk
f
193.513 354.594 mo
194.381 354.594 li
194.381 360.701 li
193.513 360.701 li
193.513 354.594 li
cp
195.949 360.702 mo
195.949 354.594 li
197.151 354.594 li
198.842 359.319 li
200.583 354.594 li
201.656 354.594 li
201.656 360.702 li
200.848 360.702 li
200.848 355.734 li
199.163 360.292 li
198.326 360.292 li
196.692 355.722 li
196.692 360.702 li
195.949 360.702 li
cp
206.315 358.365 mo
205.275 355.734 li
204.231 358.365 li
206.315 358.365 li
cp
207.23 360.702 mo
206.566 359.01 li
203.979 359.01 li
203.307 360.702 li
202.502 360.702 li
204.925 354.594 li
205.782 354.594 li
208.168 360.702 li
207.23 360.702 li
cp
209.044 360.702 mo
209.044 354.594 li
210.893 354.594 li
211.479 354.594 211.928 354.724 212.24 354.983 cv
212.552 355.241 212.708 355.617 212.708 356.109 cv
212.708 356.924 212.297 357.501 211.475 357.842 cv
213.513 360.702 li
212.448 360.702 li
210.711 358.119 li
209.903 358.119 li
209.903 360.702 li
209.044 360.702 li
cp
209.903 357.47 mo
210.183 357.47 li
211.272 357.47 211.817 357.043 211.817 356.188 cv
211.817 355.558 211.36 355.243 210.447 355.243 cv
209.903 355.243 li
209.903 357.47 li
cp
214.382 360.702 mo
214.382 354.594 li
216.045 354.594 li
216.782 354.594 217.311 354.719 217.634 354.968 cv
217.956 355.217 218.117 355.627 218.117 356.196 cv
218.117 356.845 217.897 357.354 217.457 357.723 cv
217.016 358.091 216.406 358.275 215.624 358.275 cv
215.241 358.275 li
215.241 360.702 li
214.382 360.702 li
cp
215.241 357.62 mo
215.591 357.62 li
216.105 357.62 216.503 357.501 216.783 357.265 cv
217.064 357.028 217.204 356.694 217.204 356.262 cv
217.204 355.896 217.094 355.635 216.874 355.478 cv
216.654 355.321 216.287 355.243 215.773 355.243 cv
215.241 355.243 li
215.241 357.62 li
cp
219.048 360.702 mo
219.048 354.594 li
222.461 354.594 li
222.461 355.243 li
219.914 355.243 li
219.914 357.202 li
222.048 357.202 li
222.048 357.842 li
219.914 357.842 li
219.914 360.054 li
222.638 360.054 li
222.638 360.702 li
219.048 360.702 li
cp
.0433051 0 .713497 0 cmyk
f
106.961 230.793 mo
106.012 230.793 105.279 230.514 104.762 229.957 cv
104.245 229.4 103.987 228.611 103.987 227.591 cv
103.987 226.573 104.25 225.784 104.777 225.223 cv
105.303 224.662 106.045 224.381 107.003 224.381 cv
107.55 224.381 108.19 224.471 108.926 224.65 cv
108.926 225.462 li
108.089 225.173 107.444 225.029 106.99 225.029 cv
106.327 225.029 105.815 225.253 105.451 225.702 cv
105.088 226.151 104.906 226.783 104.906 227.6 cv
104.906 228.378 105.1 228.992 105.488 229.442 cv
105.876 229.892 106.406 230.117 107.077 230.117 cv
107.654 230.117 108.273 229.939 108.933 229.584 cv
108.933 230.327 li
108.331 230.638 107.674 230.793 106.961 230.793 cv
110.181 224.534 mo
111.049 224.534 li
111.049 230.641 li
110.181 230.641 li
110.181 224.534 li
cp
115.234 230.793 mo
114.285 230.793 113.552 230.514 113.035 229.957 cv
112.518 229.4 112.259 228.611 112.259 227.591 cv
112.259 226.573 112.522 225.784 113.049 225.223 cv
113.576 224.662 114.318 224.381 115.276 224.381 cv
115.822 224.381 116.463 224.471 117.198 224.65 cv
117.198 225.462 li
116.361 225.173 115.716 225.029 115.262 225.029 cv
114.6 225.029 114.087 225.253 113.724 225.702 cv
113.361 226.151 113.179 226.783 113.179 227.6 cv
113.179 228.378 113.373 228.992 113.761 229.442 cv
114.149 229.892 114.678 230.117 115.35 230.117 cv
115.927 230.117 116.546 229.939 117.205 229.584 cv
117.205 230.327 li
116.604 230.638 115.946 230.793 115.234 230.793 cv
118.458 230.641 mo
118.458 224.534 li
121.871 224.534 li
121.871 225.182 li
119.324 225.182 li
119.324 227.141 li
121.459 227.141 li
121.459 227.781 li
119.324 227.781 li
119.324 229.994 li
122.048 229.994 li
122.048 230.641 li
118.458 230.641 li
cp
124.23 230.793 mo
123.82 230.793 123.296 230.704 122.658 230.525 cv
122.658 229.667 li
123.345 229.986 123.911 230.146 124.354 230.146 cv
124.695 230.146 124.97 230.056 125.177 229.878 cv
125.385 229.699 125.488 229.464 125.488 229.172 cv
125.488 228.932 125.42 228.729 125.284 228.561 cv
125.148 228.393 124.897 228.206 124.531 228 cv
124.11 227.756 li
123.591 227.459 123.224 227.18 123.011 226.917 cv
122.798 226.654 122.691 226.348 122.691 225.999 cv
122.691 225.528 122.861 225.141 123.202 224.837 cv
123.543 224.533 123.978 224.381 124.506 224.381 cv
124.977 224.381 125.474 224.46 125.996 224.616 cv
125.996 225.409 li
125.353 225.155 124.873 225.029 124.557 225.029 cv
124.257 225.029 124.009 225.108 123.814 225.268 cv
123.619 225.428 123.521 225.629 123.521 225.872 cv
123.521 226.075 123.592 226.255 123.735 226.411 cv
123.878 226.568 124.139 226.755 124.519 226.973 cv
124.956 227.221 li
125.484 227.52 125.853 227.803 126.062 228.07 cv
126.272 228.337 126.376 228.657 126.376 229.032 cv
126.376 229.563 126.18 229.989 125.788 230.311 cv
125.396 230.632 124.876 230.793 124.23 230.793 cv
127.58 230.641 mo
127.58 224.534 li
130.992 224.534 li
130.992 225.182 li
128.446 225.182 li
128.446 227.141 li
130.58 227.141 li
130.58 227.781 li
128.446 227.781 li
128.446 229.994 li
131.169 229.994 li
131.169 230.641 li
127.58 230.641 li
cp
.656916 .200534 1 .0402838 cmyk
f
7.46826 254.271 mo
6.42822 251.64 li
5.38428 254.271 li
7.46826 254.271 li
cp
8.38428 256.607 mo
7.71924 254.915 li
5.13232 254.915 li
4.46045 256.607 li
3.65527 256.607 li
6.07813 250.5 li
6.93652 250.5 li
9.32129 256.607 li
8.38428 256.607 li
cp
15.6191 257.829 mo
14.6592 257.518 13.8545 257.147 13.2051 256.719 cv
12.9473 256.746 12.7485 256.759 12.6074 256.759 cv
11.7871 256.759 11.1211 256.462 10.6084 255.869 cv
10.0952 255.275 9.83936 254.503 9.83936 253.555 cv
9.83936 252.58 10.0981 251.802 10.6172 251.221 cv
11.1353 250.64 11.8281 250.349 12.6943 250.349 cv
13.5635 250.349 14.2563 250.64 14.7744 251.224 cv
15.2915 251.807 15.5503 252.587 15.5503 253.566 cv
15.5503 254.968 15.0283 255.94 13.9863 256.479 cv
14.6875 256.787 15.4141 257.007 16.1685 257.14 cv
15.6191 257.829 li
cp
12.6704 256.112 mo
13.2944 256.112 13.7764 255.889 14.1172 255.44 cv
14.4585 254.991 14.6284 254.357 14.6284 253.537 cv
14.6284 252.742 14.4585 252.119 14.1172 251.669 cv
13.7764 251.221 13.3022 250.995 12.6943 250.995 cv
12.0864 250.995 11.6113 251.221 11.2705 251.669 cv
10.9292 252.119 10.7593 252.745 10.7593 253.546 cv
10.7593 254.344 10.9282 254.972 11.2661 255.427 cv
11.6045 255.884 12.0723 256.112 12.6704 256.112 cv
16.7061 250.5 mo
17.5723 250.5 li
17.5723 254.354 li
17.5723 254.967 17.6851 255.413 17.9121 255.693 cv
18.1392 255.973 18.5005 256.112 18.9951 256.112 cv
19.4805 256.112 19.8232 255.981 20.0264 255.718 cv
20.2285 255.456 20.3291 255.012 20.3291 254.383 cv
20.3291 250.5 li
21.0884 250.5 li
21.0884 254.371 li
21.0884 255.204 20.9165 255.811 20.5742 256.19 cv
20.2324 256.57 19.6875 256.759 18.9395 256.759 cv
18.1772 256.759 17.6143 256.563 17.2515 256.17 cv
16.8872 255.776 16.7061 255.169 16.7061 254.348 cv
16.7061 250.5 li
cp
22.6045 256.607 mo
22.6045 250.5 li
24.1885 250.5 li
24.7993 250.5 25.2671 250.616 25.5933 250.848 cv
25.9194 251.078 26.0825 251.411 26.0825 251.846 cv
26.0825 252.585 25.6641 253.112 24.8281 253.425 cv
25.8271 253.731 26.3262 254.283 26.3262 255.081 cv
26.3262 255.576 26.1611 255.954 25.8311 256.215 cv
25.5015 256.478 25.0254 256.607 24.4033 256.607 cv
22.6045 256.607 li
cp
23.4634 255.96 mo
23.6401 255.96 li
24.2754 255.96 24.6875 255.92 24.8735 255.839 cv
25.2314 255.689 25.4102 255.408 25.4102 254.998 cv
25.4102 254.635 25.2485 254.333 24.9233 254.093 cv
24.5991 253.853 24.1934 253.731 23.7051 253.731 cv
23.4634 253.731 li
23.4634 255.96 li
cp
23.4634 253.184 mo
23.7393 253.184 li
24.2012 253.184 24.5591 253.084 24.8145 252.885 cv
25.0684 252.688 25.1953 252.408 25.1953 252.048 cv
25.1953 251.448 24.7314 251.149 23.8013 251.149 cv
23.4634 251.149 li
23.4634 253.184 li
cp
.420417 .0190738 .507683 0 cmyk
f
323.375 262.466 mo
322.965 262.466 322.441 262.377 321.802 262.197 cv
321.802 261.34 li
322.49 261.658 323.055 261.818 323.498 261.818 cv
323.84 261.818 324.114 261.729 324.322 261.55 cv
324.529 261.371 324.633 261.136 324.633 260.845 cv
324.633 260.604 324.565 260.401 324.43 260.233 cv
324.293 260.065 324.042 259.879 323.675 259.673 cv
323.255 259.429 li
322.735 259.132 322.369 258.852 322.155 258.59 cv
321.942 258.326 321.836 258.021 321.836 257.672 cv
321.836 257.2 322.006 256.813 322.347 256.51 cv
322.688 256.205 323.123 256.054 323.651 256.054 cv
324.122 256.054 324.618 256.133 325.142 256.288 cv
325.142 257.082 li
324.498 256.827 324.019 256.7 323.701 256.7 cv
323.402 256.7 323.154 256.78 322.959 256.94 cv
322.763 257.1 322.665 257.302 322.665 257.544 cv
322.665 257.747 322.737 257.927 322.879 258.084 cv
323.022 258.24 323.284 258.428 323.664 258.646 cv
324.101 258.894 li
324.629 259.192 324.997 259.476 325.207 259.742 cv
325.416 260.01 325.521 260.329 325.521 260.704 cv
325.521 261.235 325.325 261.661 324.934 261.983 cv
324.54 262.305 324.021 262.466 323.375 262.466 cv
326.725 262.313 mo
326.725 256.207 li
328.573 256.207 li
329.159 256.207 329.608 256.336 329.92 256.595 cv
330.232 256.854 330.389 257.229 330.389 257.721 cv
330.389 258.535 329.978 259.112 329.155 259.453 cv
331.193 262.313 li
330.128 262.313 li
328.392 259.73 li
327.583 259.73 li
327.583 262.313 li
326.725 262.313 li
cp
327.583 259.082 mo
327.863 259.082 li
328.952 259.082 329.497 258.654 329.497 257.8 cv
329.497 257.17 329.041 256.854 328.127 256.854 cv
327.583 256.854 li
327.583 259.082 li
cp
332.063 262.313 mo
332.063 256.207 li
332.912 256.207 li
335.987 260.924 li
335.987 256.207 li
336.729 256.207 li
336.729 262.313 li
335.882 262.313 li
332.806 257.598 li
332.806 262.313 li
332.063 262.313 li
cp
338.298 262.313 mo
338.298 256.207 li
339.961 256.207 li
340.698 256.207 341.229 256.33 341.55 256.579 cv
341.872 256.828 342.033 257.238 342.033 257.809 cv
342.033 258.457 341.813 258.966 341.373 259.335 cv
340.934 259.702 340.322 259.888 339.54 259.888 cv
339.157 259.888 li
339.157 262.313 li
338.298 262.313 li
cp
339.157 259.231 mo
339.507 259.231 li
340.022 259.231 340.419 259.113 340.7 258.877 cv
340.98 258.641 341.12 258.306 341.12 257.873 cv
341.12 257.508 341.01 257.246 340.79 257.09 cv
340.57 256.934 340.204 256.854 339.69 256.854 cv
339.157 256.854 li
339.157 259.231 li
cp
346.06 259.978 mo
345.02 257.346 li
343.977 259.978 li
346.06 259.978 li
cp
346.976 262.313 mo
346.311 260.621 li
343.724 260.621 li
343.051 262.313 li
342.246 262.313 li
344.669 256.207 li
345.527 256.207 li
347.912 262.313 li
346.976 262.313 li
cp
.0433051 0 .713497 0 cmyk
f
395.194 298.381 mo
396.061 298.381 li
396.061 302.235 li
396.061 302.849 396.174 303.294 396.4 303.574 cv
396.627 303.854 396.988 303.993 397.484 303.993 cv
397.968 303.993 398.313 303.862 398.515 303.6 cv
398.716 303.337 398.817 302.892 398.817 302.265 cv
398.817 298.381 li
399.576 298.381 li
399.576 302.252 li
399.576 303.085 399.405 303.691 399.063 304.071 cv
398.72 304.451 398.175 304.641 397.427 304.641 cv
396.665 304.641 396.103 304.444 395.739 304.052 cv
395.376 303.657 395.194 303.051 395.194 302.228 cv
395.194 298.381 li
cp
401.092 304.488 mo
401.092 298.381 li
404.505 298.381 li
404.505 299.03 li
401.958 299.03 li
401.958 301.075 li
404.096 301.075 li
404.096 301.715 li
401.958 301.715 li
401.958 304.488 li
401.092 304.488 li
cp
408.713 302.152 mo
407.672 299.521 li
406.629 302.152 li
408.713 302.152 li
cp
409.628 304.488 mo
408.964 302.796 li
406.377 302.796 li
405.705 304.488 li
404.9 304.488 li
407.323 298.381 li
408.181 298.381 li
410.566 304.488 li
409.628 304.488 li
cp
411.442 304.488 mo
411.442 298.381 li
412.644 298.381 li
414.335 303.105 li
416.076 298.381 li
417.149 298.381 li
417.149 304.488 li
416.34 304.488 li
416.34 299.521 li
414.656 304.079 li
413.819 304.079 li
412.186 299.509 li
412.186 304.488 li
411.442 304.488 li
cp
418.709 298.381 mo
419.577 298.381 li
419.577 304.488 li
418.709 304.488 li
418.709 298.381 li
cp
.656916 .200534 1 .0402838 cmyk
f
202.498 229.427 mo
201.549 229.427 200.816 229.148 200.299 228.591 cv
199.782 228.034 199.524 227.245 199.524 226.225 cv
199.524 225.208 199.787 224.418 200.314 223.857 cv
200.84 223.296 201.582 223.015 202.54 223.015 cv
203.087 223.015 203.727 223.105 204.462 223.284 cv
204.462 224.096 li
203.626 223.807 202.981 223.663 202.527 223.663 cv
201.864 223.663 201.351 223.887 200.988 224.336 cv
200.625 224.784 200.443 225.417 200.443 226.233 cv
200.443 227.012 200.637 227.626 201.025 228.076 cv
201.413 228.526 201.943 228.751 202.614 228.751 cv
203.191 228.751 203.81 228.573 204.47 228.218 cv
204.47 228.961 li
203.868 229.272 203.211 229.427 202.498 229.427 cv
205.723 229.275 mo
205.723 223.168 li
207.571 223.168 li
208.157 223.168 208.606 223.297 208.918 223.556 cv
209.23 223.815 209.386 224.19 209.386 224.682 cv
209.386 225.497 208.975 226.074 208.153 226.416 cv
210.191 229.275 li
209.126 229.275 li
207.39 226.692 li
206.581 226.692 li
206.581 229.275 li
205.723 229.275 li
cp
206.581 226.043 mo
206.861 226.043 li
207.951 226.043 208.495 225.616 208.495 224.761 cv
208.495 224.131 208.039 223.816 207.126 223.816 cv
206.581 223.816 li
206.581 226.043 li
cp
211.06 229.275 mo
211.06 223.168 li
212.262 223.168 li
213.954 227.893 li
215.695 223.168 li
216.767 223.168 li
216.767 229.275 li
215.959 229.275 li
215.959 224.307 li
214.274 228.866 li
213.437 228.866 li
211.803 224.295 li
211.803 229.275 li
211.06 229.275 li
cp
221.426 226.939 mo
220.386 224.307 li
219.342 226.939 li
221.426 226.939 li
cp
222.342 229.275 mo
221.677 227.583 li
219.09 227.583 li
218.418 229.275 li
217.613 229.275 li
220.036 223.168 li
220.894 223.168 li
223.279 229.275 li
222.342 229.275 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
199.658 259.932 mo
199.658 253.824 li
200.508 253.824 li
203.583 258.542 li
203.583 253.824 li
204.324 253.824 li
204.324 259.932 li
203.478 259.932 li
200.4 255.216 li
200.4 259.932 li
199.658 259.932 li
cp
208.354 260.084 mo
207.505 260.084 206.825 259.791 206.309 259.203 cv
205.793 258.615 205.536 257.84 205.536 256.875 cv
205.536 255.903 205.794 255.127 206.313 254.545 cv
206.832 253.964 207.524 253.673 208.391 253.673 cv
209.254 253.673 209.947 253.963 210.467 254.543 cv
210.986 255.124 211.247 255.897 211.247 256.865 cv
211.247 257.854 210.986 258.637 210.467 259.216 cv
209.947 259.795 209.243 260.084 208.354 260.084 cv
208.367 259.437 mo
208.991 259.437 209.473 259.212 209.813 258.763 cv
210.155 258.313 210.326 257.678 210.326 256.856 cv
210.326 256.063 210.153 255.441 209.812 254.992 cv
209.469 254.544 208.996 254.319 208.391 254.319 cv
207.783 254.319 207.308 254.545 206.967 254.994 cv
206.625 255.443 206.456 256.069 206.456 256.871 cv
206.456 257.669 206.625 258.296 206.962 258.752 cv
207.301 259.209 207.769 259.437 208.367 259.437 cv
215.546 257.596 mo
214.507 254.964 li
213.463 257.596 li
215.546 257.596 li
cp
216.462 259.932 mo
215.797 258.239 li
213.21 258.239 li
212.539 259.932 li
211.733 259.932 li
214.157 253.824 li
215.015 253.824 li
217.399 259.932 li
216.462 259.932 li
cp
221.371 257.596 mo
220.331 254.964 li
219.288 257.596 li
221.371 257.596 li
cp
222.287 259.932 mo
221.622 258.239 li
219.035 258.239 li
218.363 259.932 li
217.558 259.932 li
219.98 253.824 li
220.838 253.824 li
223.224 259.932 li
222.287 259.932 li
cp
.0433051 0 .713497 0 cmyk
f
256.519 191.006 mo
255.672 191.006 254.99 190.713 254.475 190.125 cv
253.959 189.538 253.701 188.762 253.701 187.797 cv
253.701 186.825 253.96 186.049 254.479 185.467 cv
254.997 184.885 255.69 184.594 256.557 184.594 cv
257.42 184.594 258.112 184.885 258.632 185.465 cv
259.152 186.045 259.412 186.82 259.412 187.788 cv
259.412 188.776 259.152 189.559 258.632 190.138 cv
258.112 190.717 257.408 191.006 256.519 191.006 cv
256.532 190.359 mo
257.156 190.359 257.638 190.134 257.979 189.684 cv
258.32 189.234 258.491 188.599 258.491 187.779 cv
258.491 186.985 258.32 186.364 257.977 185.915 cv
257.635 185.466 257.161 185.242 256.557 185.242 cv
255.948 185.242 255.474 185.466 255.133 185.916 cv
254.792 186.366 254.621 186.991 254.621 187.792 cv
254.621 188.59 254.79 189.218 255.128 189.674 cv
255.466 190.131 255.934 190.359 256.532 190.359 cv
260.618 190.854 mo
260.618 184.747 li
262.466 184.747 li
263.052 184.747 263.501 184.876 263.813 185.135 cv
264.125 185.394 264.281 185.769 264.281 186.262 cv
264.281 187.076 263.87 187.653 263.048 187.994 cv
265.086 190.854 li
264.021 190.854 li
262.285 188.271 li
261.476 188.271 li
261.476 190.854 li
260.618 190.854 li
cp
261.476 187.623 mo
261.756 187.623 li
262.846 187.623 263.39 187.195 263.39 186.34 cv
263.39 185.71 262.934 185.395 262.02 185.395 cv
261.476 185.395 li
261.476 187.623 li
cp
268.571 191.006 mo
267.622 191.006 266.889 190.727 266.372 190.17 cv
265.855 189.613 265.597 188.824 265.597 187.804 cv
265.597 186.786 265.86 185.997 266.387 185.436 cv
266.914 184.875 267.656 184.594 268.613 184.594 cv
269.16 184.594 269.801 184.684 270.536 184.863 cv
270.536 185.675 li
269.699 185.386 269.054 185.242 268.6 185.242 cv
267.938 185.242 267.425 185.466 267.062 185.915 cv
266.698 186.364 266.517 186.996 266.517 187.813 cv
266.517 188.591 266.711 189.205 267.099 189.655 cv
267.486 190.105 268.016 190.33 268.687 190.33 cv
269.265 190.33 269.883 190.152 270.543 189.797 cv
270.543 190.54 li
269.941 190.851 269.284 191.006 268.571 191.006 cv
274.891 188.518 mo
273.85 185.886 li
272.807 188.518 li
274.891 188.518 li
cp
275.806 190.854 mo
275.142 189.162 li
272.555 189.162 li
271.883 190.854 li
271.078 190.854 li
273.501 184.747 li
274.358 184.747 li
276.743 190.854 li
275.806 190.854 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
325.438 269.655 mo
325.438 264.197 li
323.272 264.197 li
323.272 263.549 li
328.471 263.549 li
328.471 264.197 li
326.305 264.197 li
326.305 269.655 li
325.438 269.655 li
cp
332.419 267.319 mo
331.379 264.688 li
330.336 267.319 li
332.419 267.319 li
cp
333.335 269.655 mo
332.67 267.964 li
330.083 267.964 li
329.411 269.655 li
328.605 269.655 li
331.028 263.549 li
331.887 263.549 li
334.271 269.655 li
333.335 269.655 li
cp
335.148 269.655 mo
335.148 263.549 li
336.35 263.549 li
338.042 268.272 li
339.782 263.549 li
340.854 263.549 li
340.854 269.655 li
340.047 269.655 li
340.047 264.688 li
338.361 269.246 li
337.524 269.246 li
335.891 264.677 li
335.891 269.655 li
335.148 269.655 li
cp
342.37 263.549 mo
343.235 263.549 li
343.235 267.402 li
343.235 268.016 343.35 268.462 343.577 268.741 cv
343.803 269.021 344.164 269.16 344.66 269.16 cv
345.144 269.16 345.487 269.029 345.689 268.767 cv
345.892 268.505 345.992 268.06 345.992 267.432 cv
345.992 263.549 li
346.752 263.549 li
346.752 267.42 li
346.752 268.253 346.581 268.858 346.237 269.238 cv
345.896 269.618 345.351 269.808 344.603 269.808 cv
343.841 269.808 343.277 269.611 342.915 269.219 cv
342.552 268.824 342.37 268.218 342.37 267.396 cv
342.37 263.549 li
cp
.656916 .200534 1 .0402838 cmyk
f
549.033 162.006 mo
549.898 162.006 li
549.898 165.859 li
549.898 166.473 550.013 166.918 550.24 167.199 cv
550.466 167.478 550.827 167.618 551.322 167.618 cv
551.807 167.618 552.15 167.487 552.353 167.224 cv
552.555 166.961 552.656 166.516 552.656 165.889 cv
552.656 162.006 li
553.415 162.006 li
553.415 165.876 li
553.415 166.709 553.244 167.315 552.9 167.696 cv
552.559 168.075 552.014 168.265 551.266 168.265 cv
550.504 168.265 549.94 168.069 549.578 167.675 cv
549.215 167.282 549.033 166.675 549.033 165.852 cv
549.033 162.006 li
cp
554.931 168.113 mo
554.931 162.006 li
556.133 162.006 li
557.824 166.729 li
559.565 162.006 li
560.638 162.006 li
560.638 168.113 li
559.83 168.113 li
559.83 163.145 li
558.145 167.704 li
557.308 167.704 li
555.674 163.133 li
555.674 168.113 li
554.931 168.113 li
cp
562.202 168.113 mo
562.202 162.006 li
565.615 162.006 li
565.615 162.654 li
563.067 162.654 li
563.067 164.613 li
565.203 164.613 li
565.203 165.252 li
563.067 165.252 li
563.067 167.466 li
565.792 167.466 li
565.792 168.113 li
562.202 168.113 li
cp
568.229 168.113 mo
568.229 162.654 li
566.063 162.654 li
566.063 162.006 li
571.262 162.006 li
571.262 162.654 li
569.096 162.654 li
569.096 168.113 li
568.229 168.113 li
cp
f
100.256 163.172 mo
99.3066 163.172 98.5737 162.893 98.0566 162.336 cv
97.5396 161.779 97.2817 160.99 97.2817 159.97 cv
97.2817 158.952 97.5449 158.163 98.0718 157.602 cv
98.5977 157.041 99.3398 156.76 100.298 156.76 cv
100.845 156.76 101.485 156.85 102.22 157.029 cv
102.22 157.841 li
101.384 157.552 100.739 157.407 100.285 157.407 cv
99.6216 157.407 99.1099 157.632 98.7456 158.081 cv
98.3828 158.53 98.2007 159.162 98.2007 159.979 cv
98.2007 160.757 98.3945 161.371 98.7827 161.821 cv
99.1709 162.271 99.7007 162.496 100.372 162.496 cv
100.949 162.496 101.568 162.318 102.228 161.963 cv
102.228 162.706 li
101.625 163.017 100.969 163.172 100.256 163.172 cv
105.939 163.172 mo
105.092 163.172 104.411 162.878 103.895 162.291 cv
103.38 161.704 103.122 160.928 103.122 159.962 cv
103.122 158.991 103.381 158.215 103.9 157.633 cv
104.417 157.051 105.111 156.76 105.978 156.76 cv
106.841 156.76 107.533 157.051 108.053 157.631 cv
108.573 158.211 108.833 158.986 108.833 159.954 cv
108.833 160.941 108.573 161.725 108.053 162.304 cv
107.533 162.883 106.829 163.172 105.939 163.172 cv
105.953 162.525 mo
106.577 162.525 107.059 162.3 107.4 161.85 cv
107.741 161.4 107.912 160.765 107.912 159.945 cv
107.912 159.151 107.74 158.53 107.397 158.081 cv
107.056 157.632 106.582 157.407 105.978 157.407 cv
105.369 157.407 104.894 157.632 104.554 158.082 cv
104.213 158.532 104.042 159.157 104.042 159.958 cv
104.042 160.756 104.211 161.384 104.549 161.84 cv
104.887 162.297 105.354 162.525 105.953 162.525 cv
110.038 163.02 mo
110.038 156.913 li
110.905 156.913 li
110.905 162.373 li
113.653 162.373 li
113.653 163.02 li
110.038 163.02 li
cp
114.49 156.913 mo
115.355 156.913 li
115.355 160.766 li
115.355 161.38 115.47 161.826 115.696 162.106 cv
115.923 162.385 116.284 162.525 116.78 162.525 cv
117.264 162.525 117.608 162.394 117.81 162.131 cv
118.012 161.868 118.113 161.423 118.113 160.795 cv
118.113 156.913 li
118.872 156.913 li
118.872 160.784 li
118.872 161.617 118.701 162.223 118.358 162.603 cv
118.016 162.982 117.471 163.172 116.723 163.172 cv
115.961 163.172 115.397 162.975 115.035 162.582 cv
114.672 162.189 114.49 161.581 114.49 160.759 cv
114.49 156.913 li
cp
f
366.529 276.423 mo
367.395 276.423 li
367.395 280.277 li
367.395 280.89 367.509 281.336 367.736 281.616 cv
367.962 281.896 368.323 282.035 368.819 282.035 cv
369.303 282.035 369.646 281.904 369.849 281.641 cv
370.051 281.379 370.152 280.933 370.152 280.306 cv
370.152 276.423 li
370.911 276.423 li
370.911 280.294 li
370.911 281.127 370.74 281.733 370.396 282.113 cv
370.055 282.492 369.51 282.682 368.762 282.682 cv
368 282.682 367.437 282.486 367.074 282.092 cv
366.711 281.699 366.529 281.092 366.529 280.269 cv
366.529 276.423 li
cp
375.521 280.194 mo
374.482 277.563 li
373.439 280.194 li
375.521 280.194 li
cp
376.438 282.53 mo
375.773 280.838 li
373.186 280.838 li
372.514 282.53 li
371.709 282.53 li
374.132 276.423 li
374.99 276.423 li
377.375 282.53 li
376.438 282.53 li
cp
378.251 282.53 mo
378.251 276.423 li
379.836 276.423 li
380.446 276.423 380.914 276.539 381.24 276.77 cv
381.566 277.001 381.729 277.334 381.729 277.768 cv
381.729 278.508 381.311 279.035 380.476 279.348 cv
381.474 279.654 381.973 280.206 381.973 281.004 cv
381.973 281.499 381.808 281.877 381.478 282.138 cv
381.148 282.399 380.672 282.53 380.051 282.53 cv
378.251 282.53 li
cp
379.11 281.883 mo
379.287 281.883 li
379.923 281.883 380.334 281.843 380.521 281.763 cv
380.879 281.612 381.058 281.331 381.058 280.921 cv
381.058 280.558 380.895 280.256 380.571 280.015 cv
380.246 279.775 379.84 279.654 379.353 279.654 cv
379.11 279.654 li
379.11 281.883 li
cp
379.11 279.106 mo
379.386 279.106 li
379.848 279.106 380.207 279.007 380.461 278.808 cv
380.716 278.61 380.843 278.331 380.843 277.971 cv
380.843 277.371 380.378 277.072 379.448 277.072 cv
379.11 277.072 li
379.11 279.106 li
cp
385.723 282.682 mo
384.774 282.682 384.041 282.404 383.524 281.847 cv
383.007 281.289 382.749 280.501 382.749 279.48 cv
382.749 278.463 383.012 277.673 383.539 277.112 cv
384.065 276.551 384.807 276.271 385.765 276.271 cv
386.312 276.271 386.952 276.36 387.688 276.539 cv
387.688 277.352 li
386.851 277.063 386.206 276.918 385.752 276.918 cv
385.089 276.918 384.576 277.142 384.213 277.591 cv
383.85 278.04 383.668 278.672 383.668 279.489 cv
383.668 280.267 383.862 280.882 384.25 281.332 cv
384.638 281.781 385.168 282.006 385.839 282.006 cv
386.417 282.006 387.035 281.829 387.695 281.474 cv
387.695 282.217 li
387.093 282.527 386.436 282.682 385.723 282.682 cv
f
398.996 199.287 mo
399.862 199.287 li
399.862 203.141 li
399.862 203.754 399.977 204.2 400.202 204.479 cv
400.43 204.759 400.79 204.899 401.286 204.899 cv
401.771 204.899 402.114 204.768 402.316 204.505 cv
402.519 204.243 402.619 203.797 402.619 203.17 cv
402.619 199.287 li
403.378 199.287 li
403.378 203.158 li
403.378 203.991 403.207 204.597 402.864 204.977 cv
402.522 205.355 401.978 205.546 401.229 205.546 cv
400.467 205.546 399.904 205.35 399.541 204.956 cv
399.179 204.563 398.996 203.956 398.996 203.133 cv
398.996 199.287 li
cp
407.989 203.058 mo
406.949 200.426 li
405.905 203.058 li
407.989 203.058 li
cp
408.905 205.394 mo
408.24 203.702 li
405.653 203.702 li
404.981 205.394 li
404.177 205.394 li
406.6 199.287 li
407.457 199.287 li
409.842 205.394 li
408.905 205.394 li
cp
410.719 205.394 mo
410.719 199.287 li
411.585 199.287 li
411.585 204.747 li
414.333 204.747 li
414.333 205.394 li
410.719 205.394 li
cp
419.808 205.229 mo
419.067 205.44 418.423 205.546 417.873 205.546 cv
416.902 205.546 416.157 205.27 415.64 204.717 cv
415.12 204.164 414.861 203.372 414.861 202.341 cv
414.861 201.328 415.124 200.541 415.649 199.978 cv
416.174 199.416 416.911 199.135 417.86 199.135 cv
418.482 199.135 419.129 199.227 419.801 199.412 cv
419.801 200.211 li
418.958 199.925 418.313 199.782 417.864 199.782 cv
417.205 199.782 416.693 200.006 416.328 200.455 cv
415.963 200.904 415.781 201.535 415.781 202.348 cv
415.781 203.155 415.977 203.782 416.367 204.229 cv
416.758 204.676 417.306 204.899 418.01 204.899 cv
418.298 204.899 418.61 204.848 418.945 204.747 cv
418.945 202.758 li
419.808 202.758 li
419.808 205.229 li
cp
f
199.123 241.145 mo
199.123 235.037 li
199.935 235.037 li
199.935 238.04 li
202.407 235.037 li
203.277 235.037 li
200.883 237.951 li
203.704 241.145 li
202.604 241.145 li
199.935 238.049 li
199.935 241.145 li
199.123 241.145 li
cp
204.633 241.145 mo
204.633 235.037 li
208.045 235.037 li
208.045 235.687 li
205.5 235.687 li
205.5 237.645 li
207.633 237.645 li
207.633 238.284 li
205.5 238.284 li
205.5 240.497 li
208.223 240.497 li
208.223 241.145 li
204.633 241.145 li
cp
210.662 241.145 mo
210.662 235.687 li
208.495 235.687 li
208.495 235.037 li
213.693 235.037 li
213.693 235.687 li
211.527 235.687 li
211.527 241.145 li
210.662 241.145 li
cp
217.005 241.296 mo
216.159 241.296 215.477 241.003 214.961 240.416 cv
214.445 239.829 214.188 239.053 214.188 238.087 cv
214.188 237.116 214.447 236.339 214.965 235.757 cv
215.484 235.177 216.176 234.886 217.043 234.886 cv
217.907 234.886 218.6 235.176 219.119 235.755 cv
219.639 236.336 219.898 237.11 219.898 238.078 cv
219.898 239.066 219.639 239.85 219.119 240.429 cv
218.6 241.007 217.895 241.296 217.005 241.296 cv
217.019 240.649 mo
217.643 240.649 218.125 240.424 218.466 239.976 cv
218.808 239.525 218.978 238.891 218.978 238.07 cv
218.978 237.275 218.807 236.654 218.463 236.205 cv
218.122 235.756 217.648 235.532 217.043 235.532 cv
216.435 235.532 215.96 235.757 215.62 236.207 cv
215.278 236.656 215.107 237.282 215.107 238.083 cv
215.107 238.881 215.276 239.508 215.614 239.964 cv
215.954 240.421 216.42 240.649 217.019 240.649 cv
.19791 .410834 .670069 .0102846 cmyk
f
505.485 250.319 mo
506.352 250.319 li
506.352 254.174 li
506.352 254.786 506.465 255.232 506.691 255.513 cv
506.918 255.791 507.279 255.932 507.775 255.932 cv
508.26 255.932 508.604 255.801 508.806 255.537 cv
509.007 255.275 509.108 254.829 509.108 254.202 cv
509.108 250.319 li
509.867 250.319 li
509.867 254.19 li
509.867 255.023 509.696 255.63 509.354 256.01 cv
509.012 256.389 508.466 256.578 507.719 256.578 cv
506.956 256.578 506.394 256.383 506.03 255.988 cv
505.667 255.596 505.485 254.988 505.485 254.165 cv
505.485 250.319 li
cp
513.05 256.427 mo
510.743 250.319 li
511.611 250.319 li
513.5 255.32 li
515.324 250.319 li
516.083 250.319 li
513.867 256.427 li
513.05 256.427 li
cp
519.997 254.091 mo
518.957 251.458 li
517.914 254.091 li
519.997 254.091 li
cp
520.913 256.427 mo
520.248 254.734 li
517.661 254.734 li
516.989 256.427 li
516.185 256.427 li
518.607 250.319 li
519.465 250.319 li
521.851 256.427 li
520.913 256.427 li
cp
522.728 256.427 mo
522.728 250.319 li
523.594 250.319 li
523.594 255.779 li
526.341 255.779 li
526.341 256.427 li
522.728 256.427 li
cp
.656916 .200534 1 .0402838 cmyk
f
500.064 228.928 mo
500.931 228.928 li
500.931 232.782 li
500.931 233.396 501.044 233.841 501.271 234.121 cv
501.497 234.4 501.858 234.54 502.354 234.54 cv
502.838 234.54 503.183 234.409 503.385 234.146 cv
503.586 233.884 503.688 233.438 503.688 232.812 cv
503.688 228.928 li
504.446 228.928 li
504.446 232.799 li
504.446 233.632 504.275 234.238 503.933 234.618 cv
503.59 234.997 503.045 235.188 502.297 235.188 cv
501.535 235.188 500.973 234.991 500.609 234.598 cv
500.246 234.204 500.064 233.598 500.064 232.774 cv
500.064 228.928 li
cp
507.629 235.035 mo
505.322 228.928 li
506.19 228.928 li
508.079 233.929 li
509.903 228.928 li
510.662 228.928 li
508.446 235.035 li
507.629 235.035 li
cp
511.481 235.035 mo
511.481 228.928 li
514.895 228.928 li
514.895 229.576 li
512.349 229.576 li
512.349 231.536 li
514.482 231.536 li
514.482 232.175 li
512.349 232.175 li
512.349 234.389 li
515.071 234.389 li
515.071 235.035 li
511.481 235.035 li
cp
516.058 235.035 mo
516.058 228.928 li
517.905 228.928 li
518.491 228.928 518.94 229.058 519.252 229.316 cv
519.564 229.575 519.721 229.95 519.721 230.443 cv
519.721 231.257 519.31 231.835 518.487 232.175 cv
520.525 235.035 li
519.46 235.035 li
517.725 232.453 li
516.916 232.453 li
516.916 235.035 li
516.058 235.035 li
cp
516.916 231.804 mo
517.196 231.804 li
518.285 231.804 518.829 231.376 518.829 230.521 cv
518.829 229.892 518.373 229.576 517.46 229.576 cv
516.916 229.576 li
516.916 231.804 li
cp
f
442.531 251.299 mo
443.397 251.299 li
443.397 255.153 li
443.397 255.767 443.512 256.212 443.737 256.492 cv
443.964 256.771 444.325 256.911 444.821 256.911 cv
445.306 256.911 445.649 256.78 445.852 256.518 cv
446.054 256.255 446.154 255.81 446.154 255.183 cv
446.154 251.299 li
446.913 251.299 li
446.913 255.17 li
446.913 256.003 446.742 256.609 446.399 256.989 cv
446.058 257.369 445.513 257.559 444.765 257.559 cv
444.002 257.559 443.439 257.362 443.076 256.968 cv
442.713 256.575 442.531 255.968 442.531 255.146 cv
442.531 251.299 li
cp
446.883 258.541 mo
446.883 257.773 li
447.212 257.88 447.504 257.935 447.758 257.935 cv
448.087 257.935 448.317 257.84 448.448 257.651 cv
448.579 257.463 448.645 257.133 448.645 256.663 cv
448.645 251.299 li
449.511 251.299 li
449.511 256.634 li
449.511 257.963 448.882 258.628 447.625 258.628 cv
447.434 258.628 447.186 258.6 446.883 258.541 cv
452.507 257.406 mo
452.507 251.948 li
450.342 251.948 li
450.342 251.299 li
455.54 251.299 li
455.54 251.948 li
453.373 251.948 li
453.373 257.406 li
452.507 257.406 li
cp
456.394 257.406 mo
456.394 251.299 li
457.26 251.299 li
457.26 256.759 li
460.007 256.759 li
460.007 257.406 li
456.394 257.406 li
cp
f
388.268 306.394 mo
389.133 306.394 li
389.133 310.247 li
389.133 310.86 389.247 311.306 389.474 311.586 cv
389.7 311.866 390.062 312.005 390.557 312.005 cv
391.041 312.005 391.385 311.874 391.587 311.611 cv
391.789 311.349 391.89 310.903 391.89 310.276 cv
391.89 306.394 li
392.649 306.394 li
392.649 310.264 li
392.649 311.097 392.479 311.703 392.135 312.083 cv
391.793 312.463 391.248 312.652 390.5 312.652 cv
389.738 312.652 389.175 312.456 388.813 312.063 cv
388.449 311.669 388.268 311.063 388.268 310.239 cv
388.268 306.394 li
cp
394.165 312.5 mo
394.165 306.394 li
397.578 306.394 li
397.578 307.042 li
395.031 307.042 li
395.031 309 li
397.166 309 li
397.166 309.64 li
395.031 309.64 li
395.031 311.854 li
397.755 311.854 li
397.755 312.5 li
394.165 312.5 li
cp
401.357 312.652 mo
400.408 312.652 399.675 312.374 399.158 311.817 cv
398.641 311.259 398.382 310.471 398.382 309.45 cv
398.382 308.434 398.646 307.644 399.172 307.082 cv
399.699 306.521 400.441 306.241 401.399 306.241 cv
401.945 306.241 402.586 306.33 403.321 306.509 cv
403.321 307.322 li
402.484 307.032 401.839 306.888 401.385 306.888 cv
400.723 306.888 400.21 307.112 399.847 307.562 cv
399.484 308.01 399.302 308.643 399.302 309.459 cv
399.302 310.237 399.496 310.853 399.884 311.302 cv
400.272 311.751 400.801 311.977 401.473 311.977 cv
402.05 311.977 402.669 311.799 403.328 311.444 cv
403.328 312.188 li
402.728 312.497 402.069 312.652 401.357 312.652 cv
404.581 312.5 mo
404.581 306.394 li
407.994 306.394 li
407.994 307.042 li
405.447 307.042 li
405.447 309 li
407.582 309 li
407.582 309.64 li
405.447 309.64 li
405.447 311.854 li
408.171 311.854 li
408.171 312.5 li
404.581 312.5 li
cp
f
442.249 236.205 mo
443.115 236.205 li
443.115 240.059 li
443.115 240.672 443.229 241.117 443.456 241.397 cv
443.683 241.677 444.043 241.816 444.539 241.816 cv
445.023 241.816 445.367 241.686 445.569 241.423 cv
445.771 241.16 445.872 240.715 445.872 240.088 cv
445.872 236.205 li
446.632 236.205 li
446.632 240.075 li
446.632 240.908 446.46 241.515 446.117 241.895 cv
445.775 242.273 445.23 242.464 444.482 242.464 cv
443.721 242.464 443.157 242.268 442.794 241.875 cv
442.432 241.48 442.249 240.874 442.249 240.051 cv
442.249 236.205 li
cp
448.147 242.312 mo
448.147 236.205 li
451.561 236.205 li
451.561 236.853 li
449.014 236.853 li
449.014 238.898 li
451.151 238.898 li
451.151 239.539 li
449.014 239.539 li
449.014 242.312 li
448.147 242.312 li
cp
452.674 242.312 mo
452.674 236.205 li
454.522 236.205 li
455.108 236.205 455.558 236.334 455.869 236.593 cv
456.182 236.852 456.337 237.227 456.337 237.72 cv
456.337 238.533 455.927 239.111 455.104 239.451 cv
457.143 242.312 li
456.077 242.312 li
454.34 239.729 li
453.532 239.729 li
453.532 242.312 li
452.674 242.312 li
cp
453.532 239.081 mo
453.813 239.081 li
454.901 239.081 455.446 238.652 455.446 237.798 cv
455.446 237.168 454.989 236.853 454.076 236.853 cv
453.532 236.853 li
453.532 239.081 li
cp
456.465 243.446 mo
456.465 242.679 li
456.794 242.785 457.086 242.84 457.34 242.84 cv
457.669 242.84 457.899 242.746 458.03 242.557 cv
458.16 242.368 458.227 242.039 458.227 241.568 cv
458.227 236.205 li
459.093 236.205 li
459.093 241.54 li
459.093 242.868 458.465 243.533 457.207 243.533 cv
457.016 243.533 456.768 243.505 456.465 243.446 cv
f
388.358 321.384 mo
389.225 321.384 li
389.225 325.238 li
389.225 325.852 389.338 326.297 389.564 326.577 cv
389.791 326.857 390.152 326.996 390.647 326.996 cv
391.133 326.996 391.476 326.865 391.679 326.603 cv
391.881 326.34 391.981 325.895 391.981 325.268 cv
391.981 321.384 li
392.74 321.384 li
392.74 325.255 li
392.74 326.088 392.569 326.694 392.227 327.074 cv
391.885 327.454 391.34 327.644 390.592 327.644 cv
389.829 327.644 389.267 327.447 388.903 327.055 cv
388.54 326.66 388.358 326.053 388.358 325.23 cv
388.358 321.384 li
cp
394.257 327.491 mo
394.257 321.384 li
397.669 321.384 li
397.669 322.033 li
395.122 322.033 li
395.122 324.078 li
397.261 324.078 li
397.261 324.718 li
395.122 324.718 li
395.122 327.491 li
394.257 327.491 li
cp
398.782 327.491 mo
398.782 321.384 li
400.445 321.384 li
401.183 321.384 401.711 321.509 402.034 321.758 cv
402.356 322.007 402.518 322.416 402.518 322.986 cv
402.518 323.635 402.298 324.145 401.857 324.512 cv
401.416 324.881 400.807 325.065 400.024 325.065 cv
399.642 325.065 li
399.642 327.491 li
398.782 327.491 li
cp
399.642 324.409 mo
399.991 324.409 li
400.506 324.409 400.903 324.291 401.184 324.056 cv
401.465 323.818 401.604 323.484 401.604 323.051 cv
401.604 322.686 401.494 322.424 401.274 322.269 cv
401.055 322.111 400.688 322.033 400.174 322.033 cv
399.642 322.033 li
399.642 324.409 li
cp
403.448 327.491 mo
403.448 321.384 li
405.297 321.384 li
405.884 321.384 406.332 321.514 406.644 321.772 cv
406.956 322.031 407.112 322.406 407.112 322.899 cv
407.112 323.713 406.7 324.291 405.878 324.631 cv
407.917 327.491 li
406.853 327.491 li
405.115 324.908 li
404.308 324.908 li
404.308 327.491 li
403.448 327.491 li
cp
404.308 324.26 mo
404.587 324.26 li
405.677 324.26 406.222 323.832 406.222 322.978 cv
406.222 322.349 405.765 322.033 404.852 322.033 cv
404.308 322.033 li
404.308 324.26 li
cp
f
544.513 234.682 mo
542.941 228.575 li
543.774 228.575 li
545.024 233.399 li
546.176 228.575 li
547.01 228.575 li
548.098 233.333 li
549.442 228.575 li
550.149 228.575 li
548.438 234.682 li
547.574 234.682 li
546.497 229.974 li
545.371 234.682 li
544.513 234.682 li
cp
551.733 234.682 mo
550.162 228.575 li
550.995 228.575 li
552.246 233.399 li
553.396 228.575 li
554.231 228.575 li
555.319 233.333 li
556.664 228.575 li
557.37 228.575 li
555.658 234.682 li
554.795 234.682 li
553.719 229.974 li
552.593 234.682 li
551.733 234.682 li
cp
558.113 228.575 mo
558.98 228.575 li
558.98 232.429 li
558.98 233.042 559.094 233.488 559.32 233.768 cv
559.547 234.047 559.908 234.187 560.403 234.187 cv
560.889 234.187 561.231 234.056 561.434 233.793 cv
561.636 233.531 561.736 233.086 561.736 232.458 cv
561.736 228.575 li
562.495 228.575 li
562.495 232.446 li
562.495 233.279 562.324 233.885 561.982 234.265 cv
561.64 234.644 561.095 234.834 560.347 234.834 cv
559.584 234.834 559.021 234.638 558.658 234.245 cv
558.295 233.851 558.113 233.244 558.113 232.421 cv
558.113 228.575 li
cp
f
433.936 151.735 mo
434.801 151.735 li
434.801 155.589 li
434.801 156.203 434.915 156.648 435.142 156.928 cv
435.368 157.208 435.729 157.348 436.226 157.348 cv
436.709 157.348 437.053 157.216 437.255 156.954 cv
437.457 156.691 437.559 156.246 437.559 155.619 cv
437.559 151.735 li
438.317 151.735 li
438.317 155.606 li
438.317 156.439 438.146 157.045 437.803 157.425 cv
437.461 157.804 436.916 157.995 436.168 157.995 cv
435.406 157.995 434.843 157.798 434.48 157.404 cv
434.117 157.011 433.936 156.404 433.936 155.582 cv
433.936 151.735 li
cp
439.833 157.842 mo
439.833 151.735 li
443.246 151.735 li
443.246 152.384 li
440.699 152.384 li
440.699 154.429 li
442.837 154.429 li
442.837 155.069 li
440.699 155.069 li
440.699 157.842 li
439.833 157.842 li
cp
444.359 157.842 mo
444.359 151.735 li
446.022 151.735 li
446.759 151.735 447.288 151.859 447.611 152.109 cv
447.934 152.358 448.094 152.768 448.094 153.337 cv
448.094 153.986 447.874 154.496 447.435 154.863 cv
446.993 155.232 446.383 155.417 445.602 155.417 cv
445.218 155.417 li
445.218 157.842 li
444.359 157.842 li
cp
445.218 154.76 mo
445.568 154.76 li
446.082 154.76 446.48 154.643 446.76 154.405 cv
447.041 154.169 447.182 153.834 447.182 153.402 cv
447.182 153.037 447.071 152.775 446.852 152.62 cv
446.631 152.462 446.264 152.384 445.75 152.384 cv
445.218 152.384 li
445.218 154.76 li
cp
449.025 157.842 mo
449.025 151.735 li
452.438 151.735 li
452.438 152.384 li
449.892 152.384 li
449.892 154.342 li
452.025 154.342 li
452.025 154.982 li
449.892 154.982 li
449.892 157.195 li
452.614 157.195 li
452.614 157.842 li
449.025 157.842 li
cp
f
546.697 260.388 mo
544.39 254.28 li
545.258 254.28 li
547.146 259.281 li
548.971 254.28 li
549.729 254.28 li
547.514 260.388 li
546.697 260.388 li
cp
550.574 255.907 mo
551.386 255.907 li
551.386 260.388 li
550.574 260.388 li
550.574 255.907 li
cp
550.574 254.28 mo
551.386 254.28 li
551.386 255.093 li
550.574 255.093 li
550.574 254.28 li
cp
555.89 260.388 mo
555.89 259.547 li
555.56 260.176 555.063 260.49 554.396 260.49 cv
553.858 260.49 553.434 260.293 553.124 259.9 cv
552.814 259.508 552.66 258.97 552.66 258.288 cv
552.66 257.542 552.835 256.942 553.186 256.488 cv
553.536 256.034 553.997 255.807 554.569 255.807 cv
555.1 255.807 555.54 256.011 555.89 256.417 cv
555.89 253.872 li
556.706 253.872 li
556.706 260.388 li
555.89 260.388 li
cp
555.89 256.975 mo
555.469 256.604 555.07 256.417 554.694 256.417 cv
553.915 256.417 553.526 257.014 553.526 258.205 cv
553.526 259.252 553.872 259.776 554.565 259.776 cv
555.016 259.776 555.458 259.53 555.89 259.038 cv
555.89 256.975 li
cp
560.638 259.818 mo
560.151 260.267 559.681 260.49 559.231 260.49 cv
558.859 260.49 558.551 260.374 558.306 260.142 cv
558.063 259.908 557.939 259.615 557.939 259.262 cv
557.939 258.771 558.145 258.395 558.556 258.133 cv
558.967 257.869 559.557 257.738 560.325 257.738 cv
560.518 257.738 li
560.518 257.198 li
560.518 256.678 560.251 256.417 559.718 256.417 cv
559.289 256.417 558.825 256.55 558.327 256.813 cv
558.327 256.143 li
558.874 255.918 559.387 255.807 559.866 255.807 cv
560.367 255.807 560.737 255.919 560.974 256.146 cv
561.211 256.371 561.33 256.723 561.33 257.198 cv
561.33 259.229 li
561.33 259.692 561.473 259.925 561.76 259.925 cv
561.795 259.925 561.848 259.919 561.916 259.908 cv
561.974 260.358 li
561.791 260.446 561.587 260.49 561.364 260.49 cv
560.984 260.49 560.743 260.267 560.638 259.818 cv
560.518 259.376 mo
560.518 258.217 li
560.246 258.208 li
559.8 258.208 559.44 258.292 559.165 258.463 cv
558.89 258.632 558.752 258.854 558.752 259.129 cv
558.752 259.324 558.821 259.489 558.959 259.624 cv
559.096 259.759 559.264 259.826 559.461 259.826 cv
559.8 259.826 560.152 259.677 560.518 259.376 cv
.19791 .410834 .670069 .0102846 cmyk
f
199.06 246.233 mo
199.928 246.233 li
199.928 252.34 li
199.06 252.34 li
199.06 246.233 li
cp
201.496 252.34 mo
201.496 246.233 li
203.159 246.233 li
203.896 246.233 204.426 246.358 204.748 246.607 cv
205.07 246.856 205.231 247.265 205.231 247.835 cv
205.231 248.484 205.011 248.993 204.571 249.361 cv
204.131 249.73 203.52 249.914 202.738 249.914 cv
202.355 249.914 li
202.355 252.34 li
201.496 252.34 li
cp
202.355 249.258 mo
202.705 249.258 li
203.22 249.258 203.617 249.14 203.898 248.904 cv
204.178 248.667 204.319 248.333 204.319 247.9 cv
204.319 247.535 204.208 247.273 203.988 247.117 cv
203.768 246.96 203.401 246.882 202.888 246.882 cv
202.355 246.882 li
202.355 249.258 li
cp
208.778 252.492 mo
207.829 252.492 207.096 252.214 206.579 251.657 cv
206.062 251.1 205.804 250.311 205.804 249.29 cv
205.804 248.273 206.067 247.483 206.594 246.922 cv
207.121 246.361 207.863 246.081 208.82 246.081 cv
209.367 246.081 210.008 246.17 210.743 246.349 cv
210.743 247.162 li
209.906 246.873 209.261 246.728 208.807 246.728 cv
208.145 246.728 207.632 246.952 207.269 247.401 cv
206.905 247.85 206.724 248.483 206.724 249.299 cv
206.724 250.078 206.918 250.692 207.306 251.142 cv
207.694 251.591 208.223 251.816 208.894 251.816 cv
209.472 251.816 210.091 251.639 210.75 251.284 cv
210.75 252.027 li
210.148 252.337 209.491 252.492 208.778 252.492 cv
216.591 252.175 mo
215.851 252.387 215.206 252.492 214.657 252.492 cv
213.686 252.492 212.941 252.216 212.422 251.663 cv
211.904 251.111 211.645 250.319 211.645 249.287 cv
211.645 248.275 211.907 247.487 212.432 246.925 cv
212.958 246.362 213.695 246.081 214.644 246.081 cv
215.266 246.081 215.912 246.173 216.584 246.358 cv
216.584 247.157 li
215.742 246.871 215.097 246.728 214.648 246.728 cv
213.988 246.728 213.476 246.952 213.112 247.401 cv
212.747 247.85 212.565 248.481 212.565 249.295 cv
212.565 250.101 212.76 250.728 213.151 251.175 cv
213.542 251.622 214.089 251.845 214.793 251.845 cv
215.081 251.845 215.393 251.795 215.729 251.693 cv
215.729 249.704 li
216.591 249.704 li
216.591 252.175 li
cp
f
37.1533 305.621 mo
36.2041 305.621 35.4712 305.342 34.9541 304.785 cv
34.4375 304.228 34.1792 303.439 34.1792 302.419 cv
34.1792 301.401 34.4424 300.612 34.9692 300.051 cv
35.4951 299.49 36.2373 299.209 37.1953 299.209 cv
37.7422 299.209 38.3823 299.299 39.1182 299.478 cv
39.1182 300.29 li
38.2813 300.001 37.6362 299.856 37.1821 299.856 cv
36.5195 299.856 36.0073 300.081 35.6431 300.53 cv
35.2803 300.978 35.0981 301.611 35.0981 302.428 cv
35.0981 303.206 35.2925 303.82 35.6802 304.27 cv
36.0684 304.72 36.5981 304.945 37.2695 304.945 cv
37.8472 304.945 38.4653 304.767 39.1255 304.412 cv
39.1255 305.155 li
38.5234 305.466 37.8662 305.621 37.1533 305.621 cv
44.9653 305.303 mo
44.2251 305.515 43.5811 305.621 43.0313 305.621 cv
42.0605 305.621 41.3154 305.345 40.7974 304.792 cv
40.2783 304.239 40.0195 303.447 40.0195 302.416 cv
40.0195 301.403 40.2822 300.615 40.8071 300.053 cv
41.3325 299.491 42.0693 299.209 43.0181 299.209 cv
43.6401 299.209 44.2871 299.302 44.9585 299.486 cv
44.9585 300.286 li
44.1172 300 43.4712 299.856 43.0234 299.856 cv
42.3633 299.856 41.8511 300.081 41.4863 300.53 cv
41.1211 300.978 40.9395 301.61 40.9395 302.423 cv
40.9395 303.23 41.1343 303.857 41.5254 304.303 cv
41.9165 304.75 42.4644 304.974 43.1685 304.974 cv
43.4561 304.974 43.7681 304.923 44.1045 304.822 cv
44.1045 302.832 li
44.9653 302.832 li
44.9653 305.303 li
cp
46.4785 305.469 mo
46.4785 299.362 li
48.3262 299.362 li
48.9131 299.362 49.3623 299.491 49.6743 299.75 cv
49.9854 300.008 50.1411 300.384 50.1411 300.876 cv
50.1411 301.691 49.7305 302.268 48.9082 302.609 cv
50.9473 305.469 li
49.8823 305.469 li
48.1455 302.886 li
47.3374 302.886 li
47.3374 305.469 li
46.4785 305.469 li
cp
47.3374 302.237 mo
47.6172 302.237 li
48.7061 302.237 49.2515 301.81 49.2515 300.955 cv
49.2515 300.325 48.7944 300.01 47.8813 300.01 cv
47.3374 300.01 li
47.3374 302.237 li
cp
f
5.354 248.473 mo
4.40527 248.473 3.67188 248.194 3.15527 247.637 cv
2.63818 247.08 2.37988 246.291 2.37988 245.271 cv
2.37988 244.253 2.64307 243.464 3.16992 242.903 cv
3.69629 242.342 4.43799 242.061 5.396 242.061 cv
5.94287 242.061 6.58301 242.151 7.31934 242.33 cv
7.31934 243.142 li
6.48193 242.853 5.83691 242.709 5.3833 242.709 cv
4.72021 242.709 4.20801 242.933 3.84424 243.382 cv
3.48096 243.831 3.29932 244.463 3.29932 245.279 cv
3.29932 246.058 3.49316 246.672 3.88086 247.122 cv
4.26904 247.572 4.79932 247.797 5.47021 247.797 cv
6.04785 247.797 6.66602 247.619 7.32617 247.264 cv
7.32617 248.007 li
6.72412 248.318 6.06689 248.473 5.354 248.473 cv
11.1953 248.473 mo
10.2461 248.473 9.51318 248.194 8.99609 247.637 cv
8.479 247.08 8.22021 246.291 8.22021 245.271 cv
8.22021 244.253 8.48389 243.464 9.01025 242.903 cv
9.53711 242.342 10.2793 242.061 11.2373 242.061 cv
11.7832 242.061 12.4243 242.151 13.1592 242.33 cv
13.1592 243.142 li
12.3223 242.853 11.6772 242.709 11.2241 242.709 cv
10.561 242.709 10.0479 242.933 9.68506 243.382 cv
9.32227 243.831 9.14014 244.463 9.14014 245.279 cv
9.14014 246.058 9.33398 246.672 9.72217 247.122 cv
10.1099 247.572 10.6392 247.797 11.311 247.797 cv
11.8882 247.797 12.5073 247.619 13.166 247.264 cv
13.166 248.007 li
12.5649 248.318 11.9082 248.473 11.1953 248.473 cv
17.0352 248.473 mo
16.0859 248.473 15.353 248.194 14.8359 247.637 cv
14.3193 247.08 14.061 246.291 14.061 245.271 cv
14.061 244.253 14.3242 243.464 14.8511 242.903 cv
15.3779 242.342 16.1201 242.061 17.0771 242.061 cv
17.624 242.061 18.2651 242.151 19 242.33 cv
19 243.142 li
18.1631 242.853 17.5181 242.709 17.064 242.709 cv
16.4023 242.709 15.8892 242.933 15.5259 243.382 cv
15.1621 243.831 14.981 244.463 14.981 245.279 cv
14.981 246.058 15.1753 246.672 15.563 247.122 cv
15.9502 247.572 16.48 247.797 17.1509 247.797 cv
17.729 247.797 18.3472 247.619 19.0073 247.264 cv
19.0073 248.007 li
18.4053 248.318 17.748 248.473 17.0352 248.473 cv
f
258.576 200.17 mo
257.729 200.17 257.047 199.876 256.532 199.289 cv
256.016 198.702 255.758 197.926 255.758 196.96 cv
255.758 195.989 256.017 195.213 256.536 194.631 cv
257.054 194.049 257.747 193.758 258.614 193.758 cv
259.478 193.758 260.169 194.049 260.689 194.629 cv
261.209 195.209 261.469 195.984 261.469 196.952 cv
261.469 197.939 261.209 198.723 260.689 199.302 cv
260.169 199.881 259.465 200.17 258.576 200.17 cv
258.589 199.523 mo
259.213 199.523 259.695 199.298 260.036 198.848 cv
260.377 198.398 260.548 197.763 260.548 196.943 cv
260.548 196.149 260.377 195.527 260.034 195.079 cv
259.692 194.63 259.218 194.405 258.614 194.405 cv
258.005 194.405 257.531 194.63 257.19 195.08 cv
256.849 195.53 256.678 196.155 256.678 196.956 cv
256.678 197.754 256.847 198.381 257.185 198.838 cv
257.523 199.295 257.991 199.523 258.589 199.523 cv
263.872 200.17 mo
263.461 200.17 262.937 200.08 262.299 199.902 cv
262.299 199.044 li
262.986 199.363 263.552 199.523 263.995 199.523 cv
264.336 199.523 264.611 199.433 264.818 199.254 cv
265.026 199.075 265.129 198.84 265.129 198.549 cv
265.129 198.309 265.062 198.105 264.926 197.938 cv
264.79 197.77 264.538 197.583 264.172 197.377 cv
263.751 197.133 li
263.232 196.836 262.865 196.556 262.652 196.294 cv
262.439 196.031 262.332 195.725 262.332 195.376 cv
262.332 194.905 262.503 194.518 262.844 194.214 cv
263.185 193.91 263.619 193.758 264.147 193.758 cv
264.618 193.758 265.115 193.837 265.637 193.993 cv
265.637 194.786 li
264.994 194.532 264.514 194.405 264.198 194.405 cv
263.898 194.405 263.651 194.485 263.455 194.645 cv
263.26 194.804 263.162 195.006 263.162 195.248 cv
263.162 195.452 263.233 195.631 263.376 195.788 cv
263.519 195.945 263.78 196.132 264.16 196.35 cv
264.597 196.598 li
265.125 196.897 265.494 197.18 265.703 197.447 cv
265.913 197.714 266.017 198.034 266.017 198.408 cv
266.017 198.94 265.821 199.366 265.429 199.687 cv
265.037 200.009 264.518 200.17 263.872 200.17 cv
267.172 193.911 mo
268.038 193.911 li
268.038 197.764 li
268.038 198.378 268.151 198.824 268.378 199.104 cv
268.605 199.383 268.966 199.523 269.461 199.523 cv
269.946 199.523 270.289 199.392 270.491 199.129 cv
270.693 198.866 270.795 198.421 270.795 197.793 cv
270.795 193.911 li
271.553 193.911 li
271.553 197.782 li
271.553 198.615 271.382 199.221 271.04 199.6 cv
270.697 199.98 270.152 200.17 269.405 200.17 cv
268.642 200.17 268.08 199.973 267.716 199.58 cv
267.353 199.187 267.172 198.579 267.172 197.757 cv
267.172 193.911 li
cp
.656916 .200534 1 .0402838 cmyk
f
318.236 208.136 mo
319.103 208.136 li
319.103 211.99 li
319.103 212.603 319.216 213.049 319.443 213.329 cv
319.669 213.608 320.03 213.748 320.526 213.748 cv
321.01 213.748 321.354 213.617 321.556 213.354 cv
321.758 213.092 321.859 212.646 321.859 212.019 cv
321.859 208.136 li
322.618 208.136 li
322.618 212.007 li
322.618 212.84 322.447 213.446 322.104 213.826 cv
321.762 214.205 321.217 214.395 320.469 214.395 cv
319.707 214.395 319.145 214.199 318.781 213.805 cv
318.418 213.412 318.236 212.805 318.236 211.982 cv
318.236 208.136 li
cp
327.229 211.907 mo
326.189 209.275 li
325.146 211.907 li
327.229 211.907 li
cp
328.146 214.243 mo
327.48 212.551 li
324.894 212.551 li
324.222 214.243 li
323.417 214.243 li
325.839 208.136 li
326.697 208.136 li
329.082 214.243 li
328.146 214.243 li
cp
329.958 214.243 mo
329.958 208.136 li
331.543 208.136 li
332.153 208.136 332.621 208.252 332.947 208.483 cv
333.273 208.714 333.437 209.047 333.437 209.481 cv
333.437 210.221 333.019 210.748 332.184 211.061 cv
333.182 211.367 333.681 211.919 333.681 212.717 cv
333.681 213.212 333.516 213.59 333.186 213.851 cv
332.855 214.112 332.379 214.243 331.758 214.243 cv
329.958 214.243 li
cp
330.817 213.596 mo
330.994 213.596 li
331.63 213.596 332.041 213.556 332.229 213.475 cv
332.585 213.325 332.766 213.044 332.766 212.634 cv
332.766 212.271 332.603 211.969 332.278 211.728 cv
331.953 211.488 331.547 211.367 331.061 211.367 cv
330.817 211.367 li
330.817 213.596 li
cp
330.817 210.819 mo
331.094 210.819 li
331.556 210.819 331.914 210.72 332.168 210.521 cv
332.422 210.323 332.551 210.044 332.551 209.684 cv
332.551 209.084 332.085 208.784 331.155 208.784 cv
330.817 208.784 li
330.817 210.819 li
cp
f
287.622 214.005 mo
287.622 207.898 li
289.285 207.898 li
290.022 207.898 290.551 208.023 290.873 208.272 cv
291.196 208.521 291.357 208.93 291.357 209.5 cv
291.357 210.149 291.137 210.658 290.696 211.026 cv
290.256 211.395 289.646 211.579 288.864 211.579 cv
288.481 211.579 li
288.481 214.005 li
287.622 214.005 li
cp
288.481 210.923 mo
288.831 210.923 li
289.345 210.923 289.743 210.805 290.023 210.569 cv
290.304 210.332 290.444 209.998 290.444 209.565 cv
290.444 209.2 290.334 208.938 290.114 208.782 cv
289.894 208.625 289.527 208.547 289.013 208.547 cv
288.481 208.547 li
288.481 210.923 li
cp
292.288 214.005 mo
292.288 207.898 li
295.7 207.898 li
295.7 208.547 li
293.154 208.547 li
293.154 210.505 li
295.288 210.505 li
295.288 211.145 li
293.154 211.145 li
293.154 213.358 li
295.877 213.358 li
295.877 214.005 li
292.288 214.005 li
cp
297.655 214.005 mo
296.084 207.898 li
296.917 207.898 li
298.168 212.722 li
299.318 207.898 li
300.152 207.898 li
301.241 212.656 li
302.586 207.898 li
303.292 207.898 li
301.58 214.005 li
300.717 214.005 li
299.64 209.297 li
298.514 214.005 li
297.655 214.005 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
506.415 257.894 mo
507.281 257.894 li
507.281 261.747 li
507.281 262.36 507.396 262.807 507.622 263.087 cv
507.849 263.365 508.209 263.506 508.705 263.506 cv
509.189 263.506 509.533 263.375 509.735 263.111 cv
509.938 262.85 510.038 262.403 510.038 261.776 cv
510.038 257.894 li
510.797 257.894 li
510.797 261.765 li
510.797 262.598 510.626 263.203 510.283 263.584 cv
509.941 263.964 509.396 264.152 508.648 264.152 cv
507.887 264.152 507.323 263.956 506.96 263.563 cv
506.598 263.17 506.415 262.563 506.415 261.739 cv
506.415 257.894 li
cp
512.313 264.001 mo
512.313 257.894 li
513.977 257.894 li
514.713 257.894 515.243 258.019 515.565 258.268 cv
515.888 258.517 516.048 258.926 516.048 259.495 cv
516.048 260.145 515.828 260.653 515.389 261.021 cv
514.948 261.391 514.337 261.574 513.556 261.574 cv
513.172 261.574 li
513.172 264.001 li
512.313 264.001 li
cp
513.172 260.919 mo
513.522 260.919 li
514.037 260.919 514.435 260.801 514.714 260.564 cv
514.995 260.327 515.135 259.993 515.135 259.561 cv
515.135 259.195 515.025 258.934 514.806 258.777 cv
514.585 258.62 514.219 258.543 513.705 258.543 cv
513.172 258.543 li
513.172 260.919 li
cp
516.979 264.001 mo
516.979 257.894 li
518.828 257.894 li
519.414 257.894 519.863 258.022 520.175 258.281 cv
520.487 258.54 520.644 258.915 520.644 259.408 cv
520.644 260.223 520.232 260.801 519.41 261.141 cv
521.448 264.001 li
520.383 264.001 li
518.646 261.418 li
517.838 261.418 li
517.838 264.001 li
516.979 264.001 li
cp
517.838 260.77 mo
518.118 260.77 li
519.207 260.77 519.752 260.342 519.752 259.486 cv
519.752 258.856 519.295 258.543 518.382 258.543 cv
517.838 258.543 li
517.838 260.77 li
cp
.656916 .200534 1 .0402838 cmyk
f
294.121 225.705 mo
294.121 219.598 li
295.784 219.598 li
296.521 219.598 297.051 219.723 297.373 219.972 cv
297.695 220.221 297.856 220.63 297.856 221.2 cv
297.856 221.849 297.636 222.358 297.195 222.726 cv
296.755 223.095 296.145 223.279 295.363 223.279 cv
294.98 223.279 li
294.98 225.705 li
294.121 225.705 li
cp
294.98 222.623 mo
295.33 222.623 li
295.844 222.623 296.242 222.505 296.522 222.268 cv
296.803 222.032 296.943 221.697 296.943 221.265 cv
296.943 220.899 296.833 220.638 296.613 220.482 cv
296.393 220.325 296.026 220.247 295.512 220.247 cv
294.98 220.247 li
294.98 222.623 li
cp
299.579 225.705 mo
298.008 219.598 li
298.841 219.598 li
300.091 224.422 li
301.242 219.598 li
302.076 219.598 li
303.164 224.356 li
304.509 219.598 li
305.216 219.598 li
303.504 225.705 li
302.641 225.705 li
301.564 220.997 li
300.438 225.705 li
299.579 225.705 li
cp
306.008 225.705 mo
306.008 219.598 li
309.421 219.598 li
309.421 220.247 li
306.875 220.247 li
306.875 222.292 li
309.012 222.292 li
309.012 222.932 li
306.875 222.932 li
306.875 225.705 li
306.008 225.705 li
cp
.19791 .410834 .670069 .0102846 cmyk
f
201.918 261.531 mo
202.786 261.531 li
202.786 267.638 li
201.918 267.638 li
201.918 261.531 li
cp
204.354 267.638 mo
204.354 261.531 li
205.555 261.531 li
207.247 266.255 li
208.988 261.531 li
210.06 261.531 li
210.06 267.638 li
209.252 267.638 li
209.252 262.67 li
207.568 267.228 li
206.73 267.228 li
205.097 262.658 li
205.097 267.638 li
204.354 267.638 li
cp
214.72 265.302 mo
213.679 262.67 li
212.636 265.302 li
214.72 265.302 li
cp
215.635 267.638 mo
214.97 265.946 li
212.384 265.946 li
211.712 267.638 li
210.906 267.638 li
213.329 261.531 li
214.187 261.531 li
216.572 267.638 li
215.635 267.638 li
cp
f
321.005 201.973 mo
320.595 201.973 320.071 201.884 319.432 201.705 cv
319.432 200.847 li
320.12 201.166 320.685 201.326 321.128 201.326 cv
321.47 201.326 321.744 201.236 321.952 201.058 cv
322.159 200.879 322.263 200.644 322.263 200.352 cv
322.263 200.112 322.195 199.909 322.059 199.741 cv
321.923 199.573 321.672 199.386 321.305 199.18 cv
320.885 198.936 li
320.365 198.639 319.999 198.36 319.785 198.097 cv
319.572 197.834 319.466 197.528 319.466 197.179 cv
319.466 196.708 319.636 196.321 319.977 196.017 cv
320.318 195.713 320.751 195.561 321.281 195.561 cv
321.751 195.561 322.248 195.64 322.771 195.796 cv
322.771 196.589 li
322.126 196.335 321.647 196.209 321.331 196.209 cv
321.032 196.209 320.784 196.288 320.589 196.448 cv
320.393 196.607 320.295 196.809 320.295 197.051 cv
320.295 197.255 320.367 197.434 320.509 197.591 cv
320.652 197.748 320.914 197.935 321.293 198.153 cv
321.729 198.401 li
322.259 198.7 322.626 198.983 322.837 199.25 cv
323.046 199.517 323.151 199.837 323.151 200.212 cv
323.151 200.743 322.955 201.169 322.563 201.491 cv
322.17 201.812 321.651 201.973 321.005 201.973 cv
324.354 201.821 mo
324.354 195.714 li
327.767 195.714 li
327.767 196.362 li
325.221 196.362 li
325.221 198.408 li
327.357 198.408 li
327.357 199.048 li
325.221 199.048 li
325.221 201.821 li
324.354 201.821 li
cp
328.831 195.714 mo
329.696 195.714 li
329.696 199.567 li
329.696 200.181 329.81 200.627 330.037 200.907 cv
330.264 201.186 330.625 201.326 331.12 201.326 cv
331.604 201.326 331.947 201.195 332.15 200.932 cv
332.353 200.669 332.454 200.224 332.454 199.596 cv
332.454 195.714 li
333.213 195.714 li
333.213 199.585 li
333.213 200.418 333.041 201.024 332.698 201.404 cv
332.356 201.783 331.811 201.973 331.063 201.973 cv
330.302 201.973 329.738 201.776 329.376 201.383 cv
329.012 200.99 328.831 200.382 328.831 199.56 cv
328.831 195.714 li
cp
.656916 .200534 1 .0402838 cmyk
f
546.051 253.593 mo
545.641 253.593 545.117 253.504 544.479 253.324 cv
544.479 252.467 li
545.166 252.785 545.73 252.945 546.174 252.945 cv
546.516 252.945 546.79 252.855 546.998 252.678 cv
547.205 252.498 547.309 252.264 547.309 251.972 cv
547.309 251.731 547.24 251.528 547.105 251.36 cv
546.969 251.192 546.718 251.006 546.352 250.8 cv
545.931 250.556 li
545.411 250.259 545.045 249.979 544.831 249.717 cv
544.617 249.453 544.512 249.147 544.512 248.799 cv
544.512 248.327 544.682 247.94 545.023 247.637 cv
545.363 247.332 545.798 247.181 546.326 247.181 cv
546.798 247.181 547.294 247.26 547.816 247.415 cv
547.816 248.208 li
547.173 247.954 546.693 247.828 546.377 247.828 cv
546.078 247.828 545.83 247.907 545.635 248.067 cv
545.439 248.227 545.341 248.429 545.341 248.67 cv
545.341 248.874 545.413 249.054 545.555 249.21 cv
545.697 249.367 545.96 249.555 546.34 249.772 cv
546.775 250.021 li
547.305 250.319 547.673 250.603 547.883 250.869 cv
548.092 251.137 548.197 251.456 548.197 251.831 cv
548.197 252.362 548.001 252.788 547.609 253.11 cv
547.216 253.432 546.697 253.593 546.051 253.593 cv
552.71 253.295 mo
552.165 253.46 551.699 253.543 551.311 253.543 cv
550.65 253.543 550.111 253.323 549.695 252.886 cv
549.279 252.446 549.07 251.877 549.07 251.18 cv
549.07 250.499 549.254 249.942 549.622 249.509 cv
549.988 249.073 550.458 248.856 551.029 248.856 cv
551.572 248.856 551.99 249.05 552.287 249.435 cv
552.582 249.819 552.73 250.366 552.73 251.076 cv
552.727 251.327 li
549.9 251.327 li
550.018 252.393 550.54 252.926 551.464 252.926 cv
551.802 252.926 552.218 252.834 552.71 252.652 cv
552.71 253.295 li
cp
549.938 250.717 mo
551.913 250.717 li
551.913 249.883 551.602 249.467 550.98 249.467 cv
550.357 249.467 550.009 249.883 549.938 250.717 cv
556.439 252.871 mo
555.951 253.319 555.482 253.543 555.031 253.543 cv
554.66 253.543 554.352 253.427 554.107 253.194 cv
553.863 252.961 553.74 252.668 553.74 252.314 cv
553.74 251.823 553.945 251.447 554.357 251.185 cv
554.768 250.923 555.357 250.79 556.126 250.79 cv
556.318 250.79 li
556.318 250.251 li
556.318 249.73 556.052 249.471 555.52 249.471 cv
555.09 249.471 554.626 249.603 554.128 249.866 cv
554.128 249.194 li
554.676 248.972 555.189 248.859 555.667 248.859 cv
556.168 248.859 556.538 248.973 556.775 249.198 cv
557.013 249.425 557.131 249.775 557.131 250.251 cv
557.131 252.28 li
557.131 252.745 557.275 252.978 557.561 252.978 cv
557.597 252.978 557.648 252.972 557.718 252.961 cv
557.775 253.411 li
557.592 253.499 557.388 253.543 557.165 253.543 cv
556.786 253.543 556.544 253.319 556.439 252.871 cv
556.318 252.429 mo
556.318 251.27 li
556.048 251.261 li
555.602 251.261 555.24 251.346 554.966 251.515 cv
554.691 251.685 554.553 251.906 554.553 252.183 cv
554.553 252.377 554.622 252.542 554.76 252.678 cv
554.898 252.812 555.064 252.879 555.263 252.879 cv
555.602 252.879 555.953 252.729 556.318 252.429 cv
.19791 .410834 .670069 .0102846 cmyk
f
94.7544 323.104 mo
93.8052 323.104 93.0723 322.824 92.5552 322.268 cv
92.0386 321.71 91.7803 320.922 91.7803 319.901 cv
91.7803 318.884 92.0435 318.095 92.5703 317.533 cv
93.0962 316.973 93.8394 316.691 94.7964 316.691 cv
95.3433 316.691 95.9844 316.781 96.7192 316.96 cv
96.7192 317.772 li
95.8823 317.483 95.2373 317.34 94.7832 317.34 cv
94.1216 317.34 93.6084 317.563 93.2441 318.013 cv
92.8813 318.461 92.7002 319.094 92.7002 319.91 cv
92.7002 320.688 92.8945 321.303 93.2813 321.752 cv
93.6694 322.202 94.1992 322.428 94.8706 322.428 cv
95.4482 322.428 96.0664 322.249 96.7266 321.895 cv
96.7266 322.638 li
96.1245 322.948 95.4673 323.104 94.7544 323.104 cv
97.9746 316.845 mo
98.8423 316.845 li
98.8423 322.951 li
97.9746 322.951 li
97.9746 316.845 li
cp
103.027 323.104 mo
102.079 323.104 101.345 322.824 100.829 322.268 cv
100.312 321.71 100.052 320.922 100.052 319.901 cv
100.052 318.884 100.316 318.095 100.842 317.533 cv
101.369 316.973 102.111 316.691 103.069 316.691 cv
103.615 316.691 104.256 316.781 104.991 316.96 cv
104.991 317.772 li
104.154 317.483 103.509 317.34 103.056 317.34 cv
102.394 317.34 101.88 317.563 101.518 318.013 cv
101.154 318.461 100.972 319.094 100.972 319.91 cv
100.972 320.688 101.167 321.303 101.554 321.752 cv
101.942 322.202 102.471 322.428 103.144 322.428 cv
103.72 322.428 104.339 322.249 104.999 321.895 cv
104.999 322.638 li
104.397 322.948 103.739 323.104 103.027 323.104 cv
f
350.616 204.62 mo
351.482 204.62 li
351.482 208.474 li
351.482 209.087 351.597 209.533 351.822 209.813 cv
352.05 210.092 352.41 210.232 352.906 210.232 cv
353.391 210.232 353.734 210.101 353.937 209.838 cv
354.139 209.576 354.239 209.13 354.239 208.503 cv
354.239 204.62 li
354.998 204.62 li
354.998 208.491 li
354.998 209.324 354.827 209.93 354.484 210.31 cv
354.143 210.69 353.598 210.879 352.85 210.879 cv
352.087 210.879 351.524 210.683 351.161 210.289 cv
350.799 209.896 350.616 209.289 350.616 208.466 cv
350.616 204.62 li
cp
359.609 208.391 mo
358.569 205.759 li
357.526 208.391 li
359.609 208.391 li
cp
360.525 210.727 mo
359.86 209.035 li
357.273 209.035 li
356.602 210.727 li
355.797 210.727 li
358.22 204.62 li
359.077 204.62 li
361.462 210.727 li
360.525 210.727 li
cp
.656916 .200534 1 .0402838 cmyk
f
443.174 228.575 mo
444.04 228.575 li
444.04 232.429 li
444.04 233.042 444.154 233.487 444.38 233.768 cv
444.607 234.047 444.968 234.187 445.464 234.187 cv
445.948 234.187 446.292 234.056 446.494 233.792 cv
446.696 233.53 446.797 233.084 446.797 232.458 cv
446.797 228.575 li
447.556 228.575 li
447.556 232.445 li
447.556 233.278 447.385 233.885 447.042 234.265 cv
446.7 234.644 446.155 234.834 445.407 234.834 cv
444.645 234.834 444.082 234.638 443.719 234.243 cv
443.356 233.851 443.174 233.244 443.174 232.42 cv
443.174 228.575 li
cp
449.072 234.682 mo
449.072 228.575 li
449.938 228.575 li
449.938 231.149 li
452.843 231.149 li
452.843 228.575 li
453.711 228.575 li
453.711 234.682 li
452.843 234.682 li
452.843 231.797 li
449.938 231.797 li
449.938 234.682 li
449.072 234.682 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.4%%For: (Daniel Palacios) ()%%Title: (byAffiliation.eps)%%CreationDate: 1/8/14 2:49 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6pKf>m&h*[k!:Kn;M?tU`b`!DGk-3'4;,CC>+Q,FrT0MbMhl7/B4i8OsB:j<rhqD:gSt6FWX1G>nRG;V,2llW6gLfd/9C\Mi%QR+etX)_Io[9,2p>sG<2K<#\j0AiD0B(*7YHDu&!KiXu!kq9p_Ioi*/K?>,qWPkuUNCN5@n]aPbjWg)8mq@dDHD=MYFZq=h\?)JP%/<lF?c0otRHMII7>jGcn1)?pOUri3\Zj"_6B.VUUG<V_][+=QZd%Ea>,?["9h@mp1V.j5!'H-o4F>IR.jFa6V$@FNR3L>`'DGP"c%okps3l.'"_qcVK_Vq(dJF?Zp;peNi6GYV<'Za8@u]2@hC#Wu'b95ANIb2I:91TLhg,dh.bs49+SY*iGhb_B?hYBoSC9C_CQV-<1]%nDl[Ee,"Q%^2c+^8b=riEq8%bFj?KL*fMY*74*`76*"1)5^htsEhi3F7Los\^M/D.9'<>-"6?m/h`1)$\A<Llq!V;`Xs"Ehg;-Xu%ei[_ROARXqC0[*9BM2B;TE?bb=)o!E0Lo-N3gB$hZs@JOgYe(WJ?WNKiDHNP<c9TB.[$$U0?RE)+T6;\;m4p=eWmX1J!!m0%H5@g%5BOCho3SWOAA\YX.NA_),,GfFBa8;>5\\J8*PnTiEBpc06eVZXBGN,3b#2Kl<)it3r&_XgGH]SW,pi>aWq\ZB_r%>J^C(3OWiGhq%<Um&gi_rjR:Wm<sS%b02@BEcE^ZBK</!n.W\Ql\hgGDX+A"$N?KR`d*Bjr[C`*2pBIq,TI!G`DWph$4M:C79,;_I+ZE]KK(\'&?1%?7s]Nk_SJJl$-m&oI7MrT;u]XM8-;2c3\u1/Y!KH.=Hq,_V\H#B8"$>hAd1#?(;T-`c!g]r/E:*374%37edqcNIS2IkCe7]B[Zmb%(=!;;A"@WXb;arij:oTJMA/\XS%_I,:.J+#:<,hNa,tE_nJ_$Af#%7ADet8>ONs:YUDUn`=:=<40he9-ho5EMDu>?rU\MmeFQ?PU%^TeR"%t@M/;C\AZV>XnbS-ErnS:3HCkkHRUYni$4LC9Y5*BfFQNf3U(>NY^T2>BD;K<sU&M6k+/l)a,JS0.aM>*Qa@IM=.$?2T\)%E-AK3VejX?'QUPc9&6"l3N[78_i[kiTsVW2K&`*4SW8^sSb>_8L*PjuiH(c(a'--"g,aYS5,\GEa=1b"C8NtgYb<Y5aZiD42Rh.Z%@S+kI2J7"hfsFPSS(#&FJ,$HH6_)VB/9<5oGeao28E/A^2#(2KG^7'2?2CEL9B72oV,C0&rtL/NZ2`7%W5.nprKmMA,rL[JfRN-M%?)QTI^\".,d-l_*q_m*AI%EO,s3cCdS+O>kQi;mhMa^fYs/#`f-2QHs9E.T75:XtkGPIZeQ%%oRk[0^LOtC4PE]J%HrW@I]Lq!AM%hi@Co;WR>\rs<WD3>hYH\,RG,rUeio$H@Pkm6:hc5Pt/HK<_%sqp3+2:VZk+@-jfKrc9deZZ#k()#NR,rtLFjo\4j*`d[XK56k[_%qt?Y7Z(HLB:Vk[Z^]!>'lt>5TF"m<oDuUV]DYj;0+/>-oJ9c_EPb!<s!dS!tqS,BLj+hoR<%+$TpcEC00MYr-=i2U8Tg(sM(N]M&%&-)?!^`6rmipZpt.-5S"UV2fY#Rr?^DrNkFk=8odPd4i&";V[ujG?I=K0K0FkO!_FgpG(5>%I1(IrY]b'aA[bqc(f*H#qbhO7N!H%@.)AF!/31nKnU/%MRWjjV@nO&LO@dT@8"gll"BN,p+m]4$+1.c7Yss7pbiB]=StGaiYse`OQZ+f?8N?`bo:sPD]#K\LaA`_r>C!<%^HKefLfXq)VB*0A.$b&)\%Z&ZJiki7$cjXhT:s-gi@i&801=87%,[1^7\c8X?qt]6A3SBG9F`!#BAkr'b;!b*hlOTF!m4N[)7k/O%r4>%^$?,/#?)/b,.JOE%NPKTX/fB]#R*ILt2.1E\opJ\]V%P\)M[l-Ad"fMdM96,[T+[u^]H0^D.Y5&fm4mqR!qM@`i"Q$A]N$TM%"fuPh5Z@M%>&Z0oflYN<<Yr-:_*72YgUtJaR$+:7lk,?4_L,`d+<?>!Eh%hi,c*ON/Po!2gn7Q`:^`cfgJB_t8eqkJO!E8t2u7]>%$MVQLlc759)"/C:r!:Rc^'T4T[`-2!F/`7kjQZ%$40pD1MI/_>l%#l\-<VEO_6;#V6misA-m'Tu3.O7!5ClK[E&\FZ-q0I;iV;Q&%6DstHbI1bCWQ"6^P_C$a"sgOtn[FY/@6V3qON[b*,<UsKYm=,.)*kSW`BAd5Jp!=[p5Rre.S\k,CJbpp>Gc<;p*aR\:ae,JNk^uW%k<=F@,m9uS>:*0m-jtOH]TH[0Lc7pn'Oq9l"Ig),S.bB=qNjFmQWO\hI0QM`b4kOF8s)f!OMC,k4fWquJb;-B(&qGs1RPR?jK9oA%)4-]"jC`Xgcp!`HPfI_aiY,N/;G%MD`ObiQ%>->R6I[3LcD/J^-PY3o%!8*(39<@oet*bS)N,@ZkB#n/@8:EJEp=5!i;K(h'AqrV%U&';VVm)"36hsOD,6sl0KQ>EJp_fn/K/q'XHqtn@16=_R:Ui&XB5j(8itA+AR8Y0L3j*tSF5<Q]aaW"CK<o!J7G2U:GS`*3YnG1i%(.Ae&aJ$N/d0io<U3t=0NG'MNCMI[5R__!RK2KHD`?,<Z2O=^R5ZbcIZ9a'S_tUfsoB'V?:\`/+ad+QA$i%X'#+l/87:ed,qQ@^M%<)2VH#3Zn?=hp`Kj?ndKVo54V[l)(##EXZIWCc:S,rh*b`/Xp*kU8)Q*XeVG))4fW,R`X7Al/Ym%MC98e6kirS\W8k2Hud,_YBHr%");[b,E$SmccjrO%f%6i&'?2g>3PnKCoPE>r"In:Iu>;,RSG;bbL@s2J]pV2A!\aF&NC%1TsIp]NsJ.8*XMF8\u50cTVbYU5\EXW%;f^!5/1WYIg7ZlF8JXtuMt.OREGSR"TX1N$JrJKlA;ro(,",%,\,hO$N(H!%M]u[eF,>;l1Zre0;\%8M-Dd"0jWr+Ve/Cdq\&;j3%W%S-l--H8+7M][TiY4`,e4((Y"_(UfBKDE1'P^SOBS8.&;rB[0NA0[\^<P^ugHS8B6Km.!*'qT$qGS_=KLucB,>noE#,5>3XshqB%KT\e&--K%+m?4r8Vnf9bl=3HN%d@AH8VUtW98V:QAR8ih(ajdS?Ubje"0q#@QLsKGLG"Z+-Qj`!7#0438=ms6YcXjP.pKGMg%j7N%$A`UEBt<).&E7#If17lKptE?d7aMY`.@8W"^4AF>>?<e[4HiH41D"@Y$IMFE!AopnFJ<K&,CgCIq@Y3ba>FR+?Mol+"fm'G&Ta27%.;k613Q;?>)cZ*t7=b&aROW0@EJB=XLkJ)uUL#K<]O^\-HW55_>Rh.K_k\35%ZEGOM,&ITilMp45&8B[@ob\,'B_k7L<(-\Q;ZXG%9]qFS.0Y]&@>"Z1VsbifBZ-O=()N"#>=Zd%e6aK'&0I&,7RiH2kd\.A7GD7X/(;4GhtDH^>6KlJ\+G$1"NQ0n9P-kc6qc1F:#M`q%e8rqDhE.V=L1N,ag4NCpi5,DOjgO")jD15/-mYd'^j1KH"CcY,KifaEfa==Z_J0b_^b#qRNQ:n@BT6,bSpFA3"(hSTb\tpT4B4%t%E<%k;kZ[GJH)0)W^h:RA@/R,V)Y7.BA\r_G>/U7oV04A<TMl:nW<*#s4\Nh1Ij["+=YqV5)Do@O[nURY6iue84E&W??97VR9:!hu%P;njpU[(N<N+ZQNU]a=PjuF`\/Z%Q"oR2p2<Da);^QcUGKFfGlN@QWL-nPunaJ+k8>>Y^&.!=5:4f&:NXpC@*:P4V[i,hM06_V[S%!h$oh5XD=':,/U^;&\O&j>@_E+EgA>5aTEE\;k4-_-f;<9"8]q<'VZ1[f*6@\2Adld,nOk`e\Fb-sbRabMc"RKP#0@L__o=ZYZQq%rhj8%Gb\0-p1`cd19ir`b(Z?,$/A,ENb^H5WN]]cF=D0r'AB:IXkRjsI6Li(8pLZ<l^X.5%Q#,[!]?>H/JpVDJ7XEiV$/2ERBEC9%5]ms2.P.0hCBDIOI]t(QpRAL2Q5%*t]?plta&\d%Fc'-giOgVSE1_p6#E:\#DaFgYUE#h>$grGk\0B?Ln^2LM];-6ZSL2d:?Jr1U%I0a)a&>XqE.1''6.'Ar]Of;,AnO;q:k`]3&L_I]=C+;sj4DH.]e+/5T^;fQ!6J8%]%.67jl!WJ$:a2/g!"nXKX/]ZQ1lb(78#a_,%HAY]P;$a:d2u&aDfu!8T\QZJWdiY*h-:FN:2PViZM4q8djVUbV4A0s_MojNg9/L*_-o.9I`)N_T;D'cOK?/AAbH]8?*Gg.Td_Y',%Jd\@gK?hgmcPZlu)Po3W=UkW37'e:sg-Ne=81-B8>!f!pI53*=WQC1S:t\Fl#8k0JeuBpT.@&R9*8-gsef?Y/4`Gb:>1c5lleF]:%D$7?05]&b5;1r%(V$P8^TpDUmh]S&*@OKMnCRM;c&alJkFRF/&2:5X5D%j/GfI@*E%%T?=-u2P.;hTjKHRAl%8YE[,W)P#T=CsJ"%9Jn-F(^?64S2P6]J]\`\Vst_"&5#MTZN5dTP:b*p$WJ>1>RA-t=ss'o.Et]qYSN5fG`)_M^91WT<g%Ri+4>17FV&_u#^jUf#5,BD%?7Lf$_+Z9n9G1^=BRk-3V$d8eUqT=^[)B=*Oakkj,:g;?"]O6.F"K)*7!4>o"mAp<o2"=\YoN4;%T&R\2jlmBXY8aPq8aeG?@.sa%le1@h<0Wt64/[4i2[#&`T^`"4DS^]0*kS>!!hX&\i"e2.cSA\!F4Xqa7SGD:i0fK[@)WU%)K3Ft'D'O@'FF^E(/H)nQ@d6>Ue13@%/4+l5<&?q0kE-Y[bhk2?G8AFWBr%2C//#AY\SkS&o+_J<2PG*gJPq?I8L=I;]'`AUL?P2\\g6X_hA^7Nc>\_OjI&7u,5QiM?`$[L%dJ#<C\>3R'LV[JFj@tKYJ7M+:d#4/+<ChfBAFbK9B[MtURN^+3B(5a/gj_hnc)HFem[a'Po;>qVYYR7MZK4NCp:<:6Vi`=JQKNWR%ARU"Ea)0#uFg-"'m9.hBlpHU$lDtb\Hdc"i[WYlJp]cVKWuMJ5o%`LV4s_'ujTK%$'_ufEO!Yka`[i4"?k*.b)87D44[L@fPWAEH%g9RZ5;AS72ED4*gloiKA#)h;X$=`te1e@N+&IhJA<%!KfPUI\g,aR"JM+m`fm>D*<#Vm$OX]rD*9Ig0I-FOLnK9/4ZJcF(;.O7np%AoVZG1D]$30d/'U:ZY<B;B:ln]MC"'at2[b`U#Ij3_cQ)o=]%FE:IU!efm4T+uWGpi/0Mf9*^"lFISm_T*UU47Lg_k?5-nP(+fhY%A4bW$+eT(hUcaa:lXM]V^+?76YS#`r4u;Z9aF,*F_e.Pu^(/-dp^S_S&X-DjFp-."+1uFqJY+6#$h;a`R7RfRklb`6P94&I=?Kou%,q+oTAXCDEFt2T8\QfnX,ZADc_i(s".!(lFCBJq.Sp?S^O,$R^U!f0EM*Y3$M-it*<R\L[#aQ$\-Ff'];/!C-@G'F.hQWbDGp-YU%CeoiilNCgs'j7g82[Pe*[@6'9/Ma.*(9LOU[KKmn0Y!rJj9F$7P8ZtDeDmp2?bd\Ogs-1i&/=#f7D\th?1n#7PJ>;]:-Au/lZAtT%qC)gS-JRW[Zu"?'Tk$_ASZch6kSIHcjOP-.Y]8!Zqk<p$f->ZsLA3$)^C=APc5<rf3]JQ4qN#.D4gU^sKc!JfP&JPS0/>2?ikL/\%^ZDGZ3(sU3PDBp46h>G(C0>V75U0eZ3]nJ,r!OF8Zb1VLHW.\6l_>QFX-&h+agIgYrO$gpZ^p[lpK>]!/lH*g(l`nu\O4tsFhY.O%<co+j<_`H</!MNC3,iZ6bZ6XdgbbS:/PpbLI.4#!YTIKM8M'EWZS`+;oD%`4lGGB'-kZm6/SLBq`X_:'a2CNUaa[A*d1G*>aKr9J%'"odKEM$Y70`!tLV@*gDpP&KWgbYf(j>[TNntSULK=t2q1_(hE?pu!4f8eF7?`q8ljjdJd!=jM?aUWTlK/2u;KLc@.$!Tk-h`(E=%V#LC3?B#C/CTjPILXb$&l.@e/n#@C,hh/[,"O'BRQq0C?=PmHWn@t.^p.rI%hh1b)p=k',`d[XK56k[_rUuk8Z(HLBcb\8[^A[5&%lt>5TF"m=:DuV7'qrtTi*/sj_gOB^QIeN.n#@g!sp7HrAT76[`_:[)JrT@STBA`]00_Wt6s!\f^s3Hu.YIn-dLMmm'/<*LQ9?eqm%LI"->>+^%R8XEeKESP7c>&X&$opIp&XnBE_0lljjq>PWkK%flEhSTpe,YsB>j2O#?g?Q&ZgH3[3<\0N>[[q:)MqUh-eZ&SH<fJ1a%s+W25nJ&P%-%=FE]KcSgh5Z[AeD%<\c'965:+]3__OKU:ru:r\Z1co:I+kdQdSf\?>,0U`R^Ga;c"d0^dV4IqIGCbX/"JXK[p%Xl%rrl1J!%GNs].?:D[8+1?^`fnC.]s6_.L;(ZFB%M<a#=sFB!lE^9tr^o:<UN/4+4ql><;<!c?K"GIb&6kXCe#aXO^N/.E2/`)gr]i%(Rdig$D@Bi=9WnEq+gC.Xr"&(hZH"=?Z*PRBf,*nSP&dmro2IZa)e:/qJ6_[qYTlpeYm[VD0cgeN[pZ,rM<@QrO^gbI7?\D]Mu"c%ORlo@^cJCnWq9WSpZp.r8uGu'j?>uICV<jSg->P=pM)U:>+]ZEq^[-l?>8$41j\V%;Y/CQ:jW>m0+.Hm`F,Z0n-^RkJp1\srbg5s%Z-6O\orf_<&mpNmDF$Tj^)Oc_fm)Y`nl^l(`%n7`cSg<C<KZ920hJmC8rd7YT\q(2IQ\Nrkpde8QY=4%^Z!?gI/".>s,+utr#gH8%0?'tgI!$&Hbu\Bm.`.N^nI1?erfW\beEqO7!opf=Vu`('fT2XLO4J`U)4C0JIq!h-SK5J`N]4(KnD4@8`]c4,@\@Y*Ur"ffQR2Ka%Z4T"ds06$HaAqHQ3#aB_BoQ:NNu@p;#Qqil?P"-@cJR]p+lb^nfrPh4SCB$JitaHW`=CFS2j6CreDK,0W5*2<X^84(8SZNPmBJQk%F-&<*>&Br6.A#4DnHIFWW-@RRogZXhpM$g_/5,iaW\AV/Q7[-lKj(6KqKK,TpUmFr;X""c7KpPk)m*0(U=-,ehZ;p^'**F%E=:XA%,`M1nRW%(sb8n(G.&sMc*7&GQQmFCVnQ1$f)p"dtVq.tm^eSVB<U7"(\_Z0[?5iK[r2#+ks6k1;Yhs3d2^Dg.i[^Q,aQ1Y+?c8Op%5?@h90+=Mb/d"?NRiqdbYJ'YBi"2<FY^mCCa_E"</QpUe8]gEQK(6Za,I\H:MuIlbIJg]^mrZH\h=\p)mA8@71;&uX1d\Yul)&MH%VanWU@21HFVJZoZeb]#QgqH/g(!q64rmIfujoJq>o4ENY7=*!FhRtlu/OlNSj#qe=N$$Qb-937A=oT!Eg-T`M%97G]EV/(&J+l:d%a]okQ+2T-`"lOD`p$^3r'-8gD0K\sjmp;!Y:aY)a<+rD+DIO%A$aj<tl]#YW`hopnMW7M&=7>T96U>IufmWe!dci@d2E;\pWde"e%hn1S-GCAa6/Zc7?F<09<;!:$na^),k"Q07kJ`%tsLI4V64XM?nG)jgJdr3=er#2](O'4E`gj%'uTmt#6bCR!\K\(P3\P\8Opn=)Q%P8J`4YK3f*<W?JW`p(0aGJTaCB-l6WdG\!4Jqb?#ocQ;iP2hVp"cVPmBINm6E,#(>?iS$tp`F+#DPR4%VorP^;P%$rIae3V$=a&7%Vkn:V%%G;P,8'-(4V,`Np7'&XnPdiMU-;bF=nTQ$cV?6b1W$Bh?:4`Gb2dflJ!g4U9%]C-<Nl,QUWeNor#a;X7)YY)^,n!U9ajSm%j/O.7dQ]mJcW[MM"j:Q.EL7u2A$X7O)c9-uW%>r;$Ct3Zhl0WH,js*aI9dhglXhcP)b/*n]FeUBc45a)DS&dAqk2C5@)L96HI&]c%V](p!K/Q%YL,7:ure-&uPdhPP4fL<a=sp[Q15=gi[uQ(e:DH'PS?,,-8TosKSLu!8$aUrKj-J:>5dTV@)'WpGpDW^:/`*Q,],.S]%\(>>BE./TRkCh!CB!38Z2!U@/;bjk*C1e<!.<_r=?"k6Zp05dY6)LZrPqf^k>5sWu649ep!:aLDg:JD_E?;g-G&+1Vs#>ifCKFj-%4U1PKVPsRsf+T2/cj\Bb""J1l%&W)"3?(e9X&J&[lp"6+-#oTXU?D0A+KmZPd$jZ1Z^RTbNKmHX#AXH/<=IF_<$gL+k5pB^pV>cO%c<#$gd.d1/dbnmj;'YiQ"m6lLT]&-%MgFbt+DO.mp$C4`X=rZZ5g#@Y>/'g`#d$ccii;BA)5MEt$#;g7:_mUF/lUG&&O\m[W^%:J%3L?&[=[AC%jEJc(N<YH;?U+\nApDJJKM+8&3Bko8V-8"uXNsN5_^/R"m?Ur`Je2EI9]naDg9.=kgf_`lX3n3%>(.ijs6d:rY^=XF%,$>*-W\=A!CqY4HClQ3W[JGERokk-?Cb>XF>A2*l-Wak8hQF4OqKD1shi3L6io^Ea)SJnBfkjeUj1kL$IFbGqRh&@pZAKgTX`1ZR%o4rL.$M=75lU%4Y&Y"([Qp7ZiLXVV]N?0rg@=Y%OK`QkX[0@c:<("'.E\]1FRX\>KK%=r"n!Gb4Sq2nJ)`0$dWJjaaOQ]?<;ls's%BfM\ED"Sd/*K*6l7f]r6FXkp&&d[n_UT6dKlU(6?IFRAgWs2oT,BLW\lq*5(N_]oJMS9h!0*]mRi#-FGlkK=&r3Z#rm/UsoHFm&7%e_HH]T.#/,rG0#OFebh;>-l)UcY"h*=MuEa$s:#\>"'hMclC3'3FoCs80aqD!\RLifOFN1A$O`non]#FVgbM1UXkiEg?CMXdje<b%Aa&R(pnkRT/\A#(\^oQRTgWlB),+-m"AZ>CBRlh"6QtQmjp`eD-Q#mm#]@*;r<`"?PO(M!K>&G1XD\n__t]k;T<V\jbjX,(RP[lU%1b)8/YVFT#6KP<R]&:gj0#)R^CNVl,m:UsjLXR#X=6n@DZJ?GEVA!2J,]CTS8<E-2b1u[c["TAL>OiRbZ.jTE%;p0=DBqLENU444%qlJ^V'Sc[pKUu;ZrV$&L#&RYH[U*=i1uQ>0Nc4Sdn4L=\l<[kB2ZDO7JMu6#Y82`t45g76LQJYN5WCm^^Ab^W7_22r,W*=l(kN`T%NRbM/s![?CX.Smkd>U2dFu==#F=#.W_[G#^G)''*5QTAC]ed%<MC2l,Se+-8:#B,`ge]p,C=R=uHb'6,5dZun(/o(=R16=PZ+JUF%hbhh5,(ZVAej+adj3N4qM]L0DSR<^N.nrkQoQTreJsq08&SM2>[0.j@TJ9NU5,=BG`/5%j@+AGirmp_G_EB431Q,cJ[7DdU?L*SS%KR/n9'i^;AVun(=ZYjm5aH+.p?<U&gI1P/4J@T&^91=H`Gkp8-Q=oS[2;RPjd91IF>L/21?lQbf3r`XLmSg12!c1005^IiO#8/,Z%_cHMCagY:e6O:?,d!C0Fca!AqDS5o709p4AQ_o+*S\%W-S.NMnoU-fZWDRAb_h$>G(ctSs[3i%E#K^8Qe]#eMOXQPqVfLL'N%",p%anP'`Mj;_Jk,XY2`1qJ=PXPWL32FhmVpu9VK!nf&XHel^*FT%o=JtB)5$'f$!'E:o$<t23W8&&`'NS;^0bMVPHPd>E>Jl7n<u?Z.%(VM_Rl"VGFjO$$Uc>0Hu,k%s@p\UBMU[!Q./kko@=sF$*?*HH=<Xl.YXM%X#<>1usk`LDog'sntX9\$f);J7[`muV?=Pb"sh/rD)%!]GN[!(p@mf#&ee-B-29N+ZqO>.U&js*$QlfY+CZ?CaEbNn]dGE=]7AD]VB_=$<Dam3NK#qQfG7"dS#7T[j1V`:]FR_f,7JfP8/(%8/5$r)h;p+U&#cH!XOn#n9V=,!=i?n>XslZYM[Tk!%O[b=R^l?8r-q!mo5`M*X)1[Sk6%<fAPah0UG]#l-jbPZM#7k[(rZC`pZg'%QUf)?Zgkep&EiBnX?",Xo<KO5%_>`m8qYH/GkT)!kMH;H\koZ^H`r9'D9J3ioBLo`/]LaHH]S&DrSP$&ENSh9it[pX4`*8"b*ecP%?.,MhN6C^'YmcqV-0W&*:CB6GL/tB!,dGnq2=3u-?b^j28=B:+`VK3$Sr0/)m)lLXeU$`.qEuAUX6XE3c/Pe7os$Z*Z<A]k9%Rk0%;e:FN,kmmt<OZ$CMj]us=>DVGp9BdJ4hNK_$h&4_o^nSIb^V::-5I)oMMXdd5`mh&f.#.]Q70uVb'''<!=Z.+O^11t>#Xt.K\T;i%o4DS(WSGoT<N0^tQ*qcMKikY0=^-="0=2762tkJ`R^'PHR4bsdZ59@_h2PCH.:8^4=7`IGnm#L>Z<l%[_57DJUQb"cZAF9nLRlAX%Z"PEF?dbi3.g*seM1s!MQC+e(1_R..brSU:<h*?:i<2A^_EdP[A/]7Gp=+#-6Eqf(;E&S[;cIA[-AnruktK^];V!5)+5lHc6`Nmg%(\oo]]:I5fpS)`\0_V;9p65X/L(h4f]M^\;V,GZ5F]p,R33r)*\M)0DUt'nRH[]f^0l8.eFII';S2U=,IH]HN^7Vttj`</b<hHb&%\[LSPksOn$fWWckai8Da`k0]b`,0_hiqaL<nXSpKeX<hA_X4L-Vt8(bfbL,SF-De(2i!j&;s]3[S%ZOub+#pdcV>k1^Q#4i\pWkp%WDn=pg%OfT>01*;#Zl>r21&Vo[^J6KhD6a5SL]E#B>eMmeVDVAcR%0,n]VF+Pk;hsWcg!Mn"`l)aleg#X1+Ysil*Wq3nmG&g&#S=%ID4q$BmY1cQ?77bGFCUXQ7)VlIH`j2ns+EsLS_Q'YMAl'h.\ESGMA[)DjL>_h-O0Onr7jkg"G]eji7+iB;ZF)MAAjr\eVK]pM86U%e(c5*d^JSml1LfNDOm?OS\eWbDRZKDVtXuqkFS5^rA$!QB0*_n82Hd%mQSc'VO<g2-+brP$XN+BY&CJtO.Vq@osVK]rLLiQf'2j:%au*+'9;c^p:4^F'\__-pqk(WFmnS'R^5`*W(W3T.UIK+T\'nH"0E'F-n=FFhG$[5cs8)HWFAI>;0:19(St2J?e9C7S!AD`9:ChJY%:O\iMV$lP(o^6gNEUp4-34J8).7fhaLXiQr>VB!_a0o?Q#L__nqPI&dV>8:DUJi;+`ffc#hCP0[picL\ibX+nVpi8JFC0<^pZ`H+%CuXrsriq\M>jqmc_o($"Dl9_kHKrbYdf\j6ZsP)L,)s-Yoj")ulM]H,lEo##>b#>q5-)"BVO9C+8h0581==j^4%8IE-*btq<XTO`%]?o0od;%t4Tld[CSZ[.kRV&OA]tc]-0]u]3-=:[=?:h'"Up>7tml1KhM,ZOKh82o'qaKK&,1eZ*Sf>>=ddK$[F?NW-YWE#VSEXeW%1Y$atQ.2e0_Oa[?f&g%n_cuIae)+jl3O*nD]a^P#-=!)gPg,tIdOF0ekuZRrfAE^\dKf/]rHs+PWQG7]^Y`6`]h-sS`s)"4dec]d%9?h,$;bJ>chpVn>qUtRk4$*gDZ_l:NSp#W$%dH5RM02[!3@`G>I;8Ri<SH>,(%S_=^u)4dq^:]4^Sc?k^UfaV:LctWk6:)mEG>3]%?':4SG#%t,5"_`,O.P[:D8Y-]8>d8f$(n\Fe'cph6-AYq-ClNudb[c$&ea]WG=#rgq^'e$FE*mSV,*Y@L/3#iMmpZJ^SgtWjcl1r%&F4gp-sbt-"i%O-V41'ThXB]Il2Ks[cLo\AfUXYNs*e8CH2GmO*mU*P^S`%!A+%b:H2?0E\YSE^1nWrrP\`N4#<kqU-frV;LU,gd%;gIi``3(c3?<ZpYLJmkl]/hHLs5'7=I]>Ofc^%XY2gu<:]#TYqfj/&cV8/9dD**!RRnoih2qI1k\)^J6NPnG4pUBnGm-G``Qke`M%Qf%E3q3C'f'B*Y6EUJL*Hm$hfg8XAjr+<!V8>XqlC-*lSAu3,n-Bj`JkDVsJ:1mj-DIe&LL%<p.ISH?Ui_=,5%:rGJYaKqh'K.ao%oC1IJS%\N[CuAu+g7Qa`UcLlEn_I"+m[Ua*\$k)9*#Qp<n0,!LM7Wl,ol\7E=XQ#ue`U)n^ki[`4%mU(@GR>JAlas/\[-@!i6_AR%/alYcT1c=4>2Gf^YHRjcSL@PqY"h9@=ku^3Zcui@SUt9t<'R>VFnug!l.2Tnd/2AXkt/M9:3UEdCNZX<3]4@P=7?%0][O!;"2#9r%Z.&((<%Ma-g\H;]e%V@cC@g[(]LhT4m^tX+?JcAK8aP"/i(q>$;rTn6G)DkYea=.6iomi5hl1VjlcQt@Zq#M[)bZnoo&r$a?[Z%I%>ZtOkP>@._Q\+OsKOHa),INoPgQ,BRp6aDuBgHS7rL>Z1jC$g72u)Vn[fo8"Q'4pOs&%al+_u/sL:hIX03Gu,).&\)_'29aOe86-%S(PZ9&;j[RSo3NVd$?oP&-W_j^T/ZEj;4Q^dcl[p%Z[X\'[^tQP=iL&h/sKLg,_HQYL?):X)_4INI4fd%P$?OjjJR$MoK2XKS:SQ%Q'1Lc_Ej)HLYDZ2*8<7L$7n.:.)LBgo3NpoJWet&OQ=!['0I\DMU.A"8dk8-K;U7'#&Wgo!rY1^d)dq!5N7lRcL3`$c]@;4^):+h%:.,o>"+O]g+,&VAnJf.e2L+L!\O)pQW%92)Ma*0nd2=R_%gX_9@TZrU2.]3IK#lc;fXJ$<_3AN['r>Gjb*$)mM<bG/%u*12I=Q\^%R7?>/A]Y>J$npSTEf-H1X&&@m0=2`?=L3eFA'%$@;8R$`#u+MhG)2aCBgS)6>^=$0o,S>\#fq2[MntDV>s2Rs]";p$V'rje\WT!;%*`H:0p\#h*/XCKQc7u`Gal'/G?a\qdoNHTbV<n`PXlI`0dSCn:Z^Rbtng='cP#Uar>R!tPk(tZ+m1::HNC!67o<#]?Q`Vmg(a,iG%)$aOjrO"K+V:I`S0\Wc[RJJk6NBMK6)tRo=d)\trPM:M5pT/a2R'RU\3Ga-]:DlMr3ruj=r13pnmpNtp8Y4+G:q9J)m_:^&,*PVD%n3.,s?Yo3gLttiG0L)HDF>UD0R3G!BSqSl(H/F`UYD)VNcQnR#H!+Q6Ft(A".*6r2U#a,T"RER*d3EB\R+53g:GI.KN)#;Y`pT-c%WY2IV.]1;^X_u7GWL<,ZersrVaBf7T#V7bD#-?A<<:H!r'8Jk&RlBK4pRj'QcHi;-%V[[`=5(`RTKE4G+&d`F`FOeL04HWRU`0;`%.*!fukMp8MWr9)+GVqqZ12p_uKb?R%6!Et>p,_ef2)^8EfQDg?noZC(1H('",hen&A!&>aLZtph\K"[^oBO.n#e@'IgGYqWdQ-$j%D5X*=12+?9oJWktC^8*;dD5I_'js?M'4^%ED-TH])oPUFotf_DFtBUf/ar(f"J'M@0,>%ga)pArK)])'`PMUgHM$i5m"**L$meRS%KFS,dhl\#cO^[7mp1,;NAA<&mo]<3LH>D=:D<L!uOsNib-'9</+WtQI(CnRtB>\tCmsl+NPbNB[#\l>8R/:bW0o5VoA!#S00!iI[%nV%Iq0r3Z:;utq4FjnBO46$nQ7.UB7M(Sd[kLZ2qnX:QDARM0d=UK&8c*f1Fn"e\1<3[gsD>l/K@=I$V`O7@n`B&EpEq"=^m_4(*%+dO)V=Fi$k"YA(/`fp:N2'@f=JE:>21t,nD(B<04ZFGsZ()gIVVj8YVU-qNR@gSd>!Ie@)864B<fM?09%2=I!!l@=1W0*G-R1[=^%T=aCb`S#h2e7)8V*9rda-&iPoTY/#I]j.p6Srd0S$8L2k.%LH7]AHA?*]`X5l5'S^2HUC+-XO.FMV%W%nt^K*_.cNF0-0dlVR3p`%SkQYEchAgl)UnXEB^ZBE1UA?cPGm'Yjkq8SgCj3YK6ouq10kb3gl,VI\+cD-E&`;L5@9s%L!BuN\+e\C04HbAV":Ei$)cVn-59)W%;nA09Z9ns!J]@E[o\C&[!5RSlF>tPSF4a"5q:MtY*N,V>d6lOo[q7d&h$ip<3?p)o_P[I"V*;f[/9%.u<8m+aaRojZ<a3V:_HKhO%I2<Hu_T&[%CEUA[Lpo]\_9<]e-6q!\UW2:*CU5Hk/)G&hiU+hu1`F[tERN/1=Crl30I+!3(h#8+#b$f2Q6&>K[[k$IT4Va5?-94S%O]NB9#m60tr2uaD%?AW:kS%fmcPMhrBdLn_<6Sd$#"^Xj?*mb$7"_eA#\Mj;Y)J$9&m+6@9/OQpR$@bVn3IZrRduPRF@X9B.nJ%>%5SD>r;SorN3\p0a6N#UUGe\b&K.i4<[M))a"Lg_k-SIt%+5s!:pcA*3M7;VK3>M3U[QG*Z+1*<3Q4EFd`jS_aYm[Si33/^u1[!WE%"_COB&S99g!?UY'Y!#:^bcWR7+j5#icjRD2=LaHP72<-F;0P6LM&D6G\$"K%hK/m!RUFCNWQA5YKXToVgAA><e<O&rUMbXUX]Q'U%i6$C[4&IpX`B4m&]<U=(e[@(E,/#e*Gdlhkg9<?;+2Oi]nZ%GdGBGnUqu4ljf7IRn8(NFA=J1*2V$h]\Yh7Tip:Z8\GsWI*(9:+K%N(&Xj4/6R5Oo]PVndZj!)ZN'n\/-d1*SFL5#4"Sd#pW4s%^$6CFQ$+)pKG2:iDODU0>_?8?i^IPgZ/9^aQ=pu)htO->"\V&UBHf9%%u0^\I04+j85$EVc;,>tR(Ide7<gmJWXpFkSIisJ@knfWXGXO#LgjqAXe#k@hc4(Jg4)2ThiItuE5X?GfuqQ1;`:h^(L:dt[<!Na%4PA=X]+._3im'EC@ig!Kh"0F9H?TUg#@];U*9OYj%e5OQDOA;<ZiI`I[!I@aKb/7r#`5j44Y]*UM;d<D-rBIlM6fWfb_OlD]3^tF%m9W2L#i-=hL?'ElFu'rPM^nuWZGemH(K5eT,\Mi6OtF.doY/kcW&thCX5BbZ3OSBR5$L*$OUSg'E]c@(o77d$6H7AC3HX7-Wr<Df%nW\Q$Ep/*2kj3-%d;nH(:-CArKUp"*jj40Dd#$G-UZBc*B@$fm$P&Cg(S!c=AdaW^6Pl7YkKF\]5)1aMK8s]Od<"N'1['p`a,r_*%S3][.10>$WF$jt5g7&fni2^d)G+F*eelRMJ7>UTQTY`U)+1-WZF1R:&k`4^7]c$OPkd5f(&L+p/1B["jpKusm/NQ6m6bnQAQ+=5;%qKJAg>cs_F]YOJj?>FohNJ6c;nsQ+3B-]h+>ib^k,?H)ir@p9+PR]-?k$qNS.UYeaVk#q`dbFi.k+RI]:Er=>@IQe#i2n-OZ\Yh'%Ubp6JS7j@6ac.:DJuRR#\u+W#lR"IAD:#C-*r\>M]+#`7m[m<1*R.4a96Q6-'uX0W!an,KK+-jr+=0P&d#,+4C[G8=\P*8A.LsRJ%N$bm&Q1(p_8`V/Gb/E=.3$LI`9KhtAJl3Ej$CkN5;@/0O3l3.+JMUrs&1u]AB:*3;_,>=AmMI*)c!Rd`=_X#h^l2Te3AEc?ho#1R%)(,H1Hk+?C1QQHL$sNJ)VU^'X@,.W$a<(,YTKVd7-WXb<"Fht`05M/HoK5=`*TCPRqZ(nhXpAVV0p!Cfrf)UWfL-_rnW>L&f?=Jk%AEYHCK/D`*H8,Q@6IKcVK:"\lA'VkC4^QRAd>;BuKk/LtZ=UN$1#Mth+e./[ji[fu$_IV704E-IiGLYT3koNY3I;hE?m@XX^%IKb%&)299)fTBtp"$#GDo0o;>$(8S)TCsS>+##98Q_^W%u(2pG.V[(,esl\c*d.R="!HlJg5;`_(R\fQ6k.\hL$jjS5@coTt\48:A65O%.t=SOEG*8IGMd^Q+;]("S9C\=-%kJ&-u:Ug=FD>!EZn?$59n=aK4nqFm.ZMna4m[:Mo>,cVo\5i[1CBVZ/7WqKm*SRa.01i5QYi<%1*R$XB>urdA=X"k3N.KQ1''bZ*>.>*VkAj)F_4^^5n+TlEHt.$q!VtD*Ke1&Uer<k2N<.QNZ=0YVj:4Z?@JCm@3W8l]7WUaI/X#i%h2rp;0XY`>Is4ET1pi&NR@s/98/g3\&K+8/;dC9?6UYI.,=H'OdIQo,,;PCEF1;[3cl"5p-ZGD?`ap^m*35/`e4@UMT'll?6#mU)%IYAolf/MpJF/?%3lOd#b,Ff^]BCDA`gX@*UC9pe%'B<TZ'Y5*#lU"_M(iEW8O=_<<<u3K"@hJ:sU?%@>1+p[r$jaI6fcVJ(a"IS\%Ugu^hF`#Y2)*-_`7ti^J@M!^+KeGUuSIaoU`HXl-\F\ZK4b#"d5$SqaN@,g.SttPpL`=!ti-`&u4&e_lLD0#b+X:m[q/E#TJrV-!%/mpUP2`8X;%k$4EjM?R\b(la=i8#8jj3EGOal4:]5$Y<Fk-qFuFjV*pAj%WROM0_;pI%>HE\uN+_Oa;39Gms$"2%DSXB9b:!Q%UQ%o5U-2Um8Zb_1Sr\P'3A@F6I;Mi\71!O`Tk\.uXc<>q%>Q%(,'JpC(H54n+SW4G+fk2Wn\idTn"5J95.*"?*n6ktkJ'[sX_Q4#J>\%f&W5P2s5k;1#K+T1LH9n8c>d]K%JS.JI1^Q4Jr4DG/DOjM;Z(1Fp;JE:G$`E(,ihpeV4"#C&)YQ^?@Wk3:&K/q7tGt@=EX:MQgo)%LY=+#[5)a]H[p*8!+([A,P?)I)6&t_a[j,B)FHuo4L$l3N)XJ'//bG>cKH.FfZH0/;DEMMr"s,!^-:HP/RXZj6W54H1326=!s53h%%3IYVa0hk!&X)*BhU1AK$7BSn-p)aFPDne8LS"`5N`8!-.p4X_O/0W%m8jd^$KlmCd5Y(`k`1I\oZ3.niQ)n:&&Gh&U4;mlobC0=%Je`r)[)=?T#)Vg_iN9`?4RhZ#>'T65eL8AM4;WMP%NsfAHCjid&2qb?qiKe+`<G.8FA-/%Y_3[33\QB]$rM;!H*?2Kc)r5#:AT-3%KWkhFGRpfkY]#\g4ZrQSY=26X9^.CfpYVln.JeKEM&1t4-Kb#fjhsLUj:X*W5K+#KcOt;3q&FiE`gVV"ingFWAZe4=VMnP[+6&B-%`6!:1*6lG8r(9JbgMo[qU$Ti^lcr23`62)Ma_n*@WKRk-%(klm>u7i]_kM(IjAKie:32UE/]p;qmNF"3/YVuaMO/'^SZ;Y_nbM@=%XX*<:/lDMRE?]Mi\h4JrReG"1e)'7G0'Cr;.:Cana_l$[X&J20I.uCp)0X,_bf-nqVj2d-\"ok9qtT#k-[e'NgeHqVrP6#VP[QLJ%hO/Oq("m_lFAG*j9YBh/Uj>Op2<UQ;^R>g+X,.*6G.o%_`.PR>cF+m2`Q't(_V5GIQU2.=*J\RDmB^2]Va&uVjkUO!Ti-7$4]ZFW%^lrul`;^mZ%F:f<IJ7"BVtPf#dF,f)jV@)#m3XjVOM5!^mDj@5S/:H77cBA?-:Z+3Zm38n`UFg:*;fR6Xtk'*+Vu2R)rM>hht_u`%q\FA.8<ipqSY\5d$>PfP7\TrIj<fWFr$&iBBC@%\8W7rk?U/7LHt1?so5ZJgN5J')VXs?\4JQj?A^bqddY4;(1MA\;=%k<6*-X<3%="YNabBUAX]I5-cp1ueIW:a9!l+Ap;%!"[*Zu!=X4c8:AVXmuhnQpP_-(E2:;jpAB^G7Q\2P'TrlaX:cr,Y?IR8"LfS?!7.l%G&j%<\Bs+Wp!",FC**<jp2T[,Fcto8A]-7R'PthEp5](bS`.)c3o-QR?1q%VXnP[Xmh?*S'EONc6Ht4`,*"n+Z<F\>mSBgPYL>+9/e!3%,%T/JjjNtc=H/D:k@JqMF/qgWVXkE[c?g5EO\P#H>!i/0Z"DHF)jh-,?AHb%o>7j&b/hr_F<ZJ7dRo%=))@],gTU5Qa,ntr!\c0(%dQ`q2fPEUP#mk5Uq&-"gW"C%8ZG+*'m7Z;-'gk]STEHu5L>P)2!Haj_3,ISQW3gMI(ZW$/0#Y=<dsZ@S*k0[F=VoKD'RI*f5bo["%k^P6jBJOrl'#6;Y_eu3>Mh\feIq@rVdluu=\ZdSt4bqOr])r9QKq0FtM0kU%,tn</EmZ1lY=GB`R3*<E8$qUUM#)<;\V"9R[q.QQ%\f3D;c&NV;m>$O3P"31I/f#aB4Rt@R,^'cCd9X[Y\hT_H4jl33@MYm17<d/.P^KXE)_e!Gj>D.Q&OlF_G6?tWoj;dlG7qF;7<_+8%p&McKgr2JD3ELQ;bd2!ONT[Zd`66T4O`PgAK(i_V4!?s)l+H^2%_1+/EB`q.3IAJeJ)*1d68,;/ho$*a.ui=Y(UC_+g*SS.N?3q>%I;dbY/:bsAqAj.k`,d=fd2*a8]a$prOV>>.G,N5CZb[7D!HpgBRt!Q4Th+VOa>=+jNj96H6K[;FQ9n+m%YN:6q[qR#7-474m)!q#%ikW9/^kE6D'TR-H3bch<Cr$B9Ye(QaJ(ISHM7(*6Tkd6I'>K"J,$k$1@GgbHk_@+>+pg%kGPQj]Zq3MCfR9qh91rZpp$\QfTSMA.%hi\j'oN1823AOiOb5"#80K^H7%>O&K7"uk1s.VB4rU-<R3'W9\@CHlZX)jAG7R&2L[PQ]UeIMT_gBlLf1tZ,7?kAAeL(RI2_=m/,%6R_OsA/HKl5K""TT)"Wf,I=)jeG/I6%_L[PRPd:o%<k/$UZWYA"(pEbgi,4%9mHj('D^FJ2_#cXDR^':T0GYk8@0?(@fD@t'5NB7%i@aDpk$*%:,:@Zn.F%EOaGC\['5Q\9:VTahHSBbTXZS>j/a:!;O0o8((SR7X4M-$+F08%qOeQ!pH`fn$UF"KS<f!mu4gF]9n6EI4%e<P[I\+aaBM0*$pBZ%@/R//bn@/e`&YQFETCO+h7(;PY,-8AegPpTiik+0L+Pbe$>+1u+HogO#YTs==tgBHDN]/NeX@il;m1-uW&%(%L,#j&\EfJfT*F?g4>LQ;Zst]o8Y>Te!,CK*k:^)UpHgVX(@e?D)B[B=D;u>#dO)h0i5YTK00/[/W<O>84TmJIfg-)s(b55)>3c%]#X!:]`9"=>91P7.AZVB=u5/4Gup'SDZTN89-Q=CNU=;I(fJ`6*KbDJD=1]Y%[s!f0b!Dm3ut.V'hbhX]j:4JZhr&;f1'6K-,#4N%I0GegQWEk*.1::I/r6c.NmtF2=&*r*:6C^1pTR@?9;ZnsgrdRBDa%Fhq^Lp)KEo2l-u\N8kN;/YfK=''Za.MeJhm@Tb>/)VQ2C<%%Gj=&J[(Q;2in%np2`31Qll(YKVnu]0WG121pR5GQS?]d$2>(\.e<LP'.jX(VGGPTG?<)A7Q-,tGkgO6`EpD^aH1:)UQGg<<,TKRD%]35//[hbPfHommuV=\snEog'69*]UN5NCL4VgH.DnEMirUq(sopPWYoXO^)%4o*#-0jD/eIR^=2nGV#S-&bXEguR'Sl09\(7I?Yn%*E//h,'0)p)4gJ]Lt$'E<2KNKnQ/SRU5Q6mP'Z+/lTr#!Z!9Ul6sm"]>d4Xj1)+[.S\sU_]#?5cTV?>BlsJrh,sU=i*./f'<(j^a%$Kl`jbRuq!FB]0e"NB4()%<E/[T8)mV9ShI=+b(\q<cONS^SO7Sd*uHjh%u,k81]W4_iOgf\M,V&j>P5A2d_/J3iuQGV^JW/-js&%:IimK2qI4sHQ7c3DZ1Q0.o?X;N](>Tp3NDk8oVrSZ-qGsn5bpTldho;XR]UL:6$A;.uiTE7a(nogcPGEf&T<6L]L3g*VIYY$otOJ%=q4s$I'GB/V%gF4.oLc=\S4J"?e]j,^4PMf<Ph_Xj7AD*eVP]1Ll_jKR5bb2<SssK!=udD?j.O(cN?!\ZT_PljhkcDYEa)4(k(`_%H4!A[FrOP$5!hJ3,+6--=PX=mg]g:p1VR/kA!@t6kE'`plu3i)QN#QSroY7hYf9+)WA!0iBI][*5M'qM=8m[0<6iiPDu/td\$tP<%k_(;J6mdX`KY,[,2s-U5C>CO$87Ma#HiV)OF*Rt@fXT3HJ]<(=/r,![5XJX]]!,[uGK;>NW7I[6Y-^L$!1dBZT*+:sWl>$AJBfnE%k5`*]7ij>l0PV(?PPi-IOC&ZRh5KMA/iGs1TT?&;b5i$a,;h:c0O2$\lr=lN$d]-MI5ugD3EElP)#-Q`D]^uS(1>W35[PW/khLMc%6X@hnjGdsX?HVH#OZM&dq*Le_A%ImX(0tU4E%.DPNr@>$Ho*lFlj\2:0BM4k\=^I!%quFWos:"U%=Wfg0UM?U7MTl=2:"oQM=!u,%'6Z9uGcRH]MqL)8L@W(/Dr=;AT6pNk3#cUgHi8>i2MSQ3m!J\#fr#P_?GGF"].ofb7IKgfrG8D\p\I>$Y8m@E58uXiTaVH(*pR(H%[D6#F@`\m&]*05THi4/lj;R_u5;u"jDtS2?<#PC9^Yl'phHr:Y]mdf,qMfk)#eS\AGXAYih<Plc6ZkNcq?:5Z'h]%@k:GOt^L6Kk%f!mg?B[D,)Jeaj"*ZOr^5K=P9^0CP*3.]4lY@$eMWS!U+oaB+.(rs==_707MFs!@V]mbUia#E@uIa2!L\,,oje2m*4IfA*DBJ8DV%f.VA7L!$[Jn+@&^:EfVTa-@t5J#f2'mrd90rIWX8;"'J*?GGD-f=i-%"5`A,QN\_;-B+>d!0)[<O')%eLK`'<IaNFjP^E?[6M%k?%DohhN#!BlBpHH==o,`QhrC4rl3;7R/>t`+uG2#Krf.VAYX-LG<Z/KZrq?<MS@Gf6ag:_r9b*?UK[$WQ^4oM>Z?GCG>2NE._JoC<$%c[C1LRl$kra#EX!3k"cDL3rlD/)J#4@&GsUhs2))'q`6o)<+u;TO`tm0BuW!I]o@kH!.WQNLH+Jc--dN.n@2&0A+J\1@%HAf?]2[%<u13Xp[J]aL$Ne%hl+pRf<'Lsh8^<h$TDJ>Q,gRe_^<:-SA^QYolI?GhlV@'QSI:]a-52hDtTlGD"N)QJi>_&$[)sQq?=Lu$t<_i%H1J]"07)F%#r21fIRF!t"5W;+-NiV8IUh(p=9uXkcZRt>d.dA?hs)"N7PG;=FLE>+@QcU>&GQ#)hs)"eO$uj#%D:4eLa\:*YMTmL%bRjOFq-oL<i'bkn%Ct(Db'qO]n+@&h%N$4/X+sl^haW5RJ*"K<6Jme6/$R35)!U^@.H:p*6<Shh&)MR"9Nrdq*!/:2>qmlqc>g[4%HcPF:HrC.K8JA=+TILW"!eVjWjkN/o==\JSCFAe79Q+K$0,p7Ub08R-O]9/EWpTVgj%:\]]UPNg?m$jPo<A1b8?`$<cS)JMRI_rP%-eIs&ooGD<.fIX`V;I2(;L._4*[H6G<Ss.OI[Q,Brm'Jt[/]su-64sYn'^HOC.`,#oaC#squ/'N8A0b"nZ_jA>qTHZUmm)0=m>p2%i^eB?\9aD]:Xl!.UgD;::C!k+SPH)Il#cAtbFNR^GnE\m^)r>6G=J2oPMi6l\XbO7p$27up7_;nEH-L"QC+.:?6)fZbDjd-n`eWm%o_V.!@`$>/VC!68adoLnIJ!I7Wjjh)'*/d($gm<>'0upr4c:U"q=<3A;OXUcU%GkV.74qY8:G9^Ms7&7M8da*XDe=g]16gSdfh9(%.Y-1&YGEe#j82Jq>'ZM&F:K,MmCDr81cp%A^S9"i8EJ+09r\'eZ7Bc4*I`/Z+*,\p\XHq)XaQJs=,k+%.8t[hd%&$];X$Mt,hMrc%RA8JfbLgj@O5nBsVpqUbD\]-]CEH4<dnJN\`9bWT2R/X;\\O0Y@Uc?NA.f9V)]MnfS!a45EJS><L\P7?Z'\UnM1pS_mDRf3,g<Xd%AMBRMf4QT)-o\'b\UqI69,?fXN/[@SgfWE/F9lp0-0;pm:T&&TiU(Ik5$`OJ[pI4)9VfeblBM+tPGD/=6b]9k9X.C.CNK!bp+5V"%FlmJ2nB:Mf.p,Cqin$WmF[+'<!%H8F]mP3q;F]E'nt3&_DLV'FnfFSlcXapudqA%QA-VtJ.eFoIW_=..q4kg$rBT&K3FCq[Fu&an%YeAoar5"M34a6s[,o]`oCNYZ%5qc=ip:XI.YcE[FDsa>$h@"Ctb3nDcS]P$r^AIdH*h:=4X1EbOJ?R!4F&iC(`'d#[+.!eJdMuBB%[7qi>:_Xfj:%o).84S3aj.d#PQ5>A:Ks0[8ff=q[bjhg(3B6t6iS?9iroD3I5+RH=d[sG"H@JeBfG!`8#nW`@=Y+/7/(7.0c'e1o%8h'XA&=HLjDI*2R*EV[BEo"?GEfp0.+SNk',+#<?KX8;10@SQ'Dp6_VMEBA="S4-P?<8n[h_SiX\<-V@Vm^emPhF(:,U9MY9%KGU%73o)"UI>=5!WZ5=_UnAf,Q$XS8UfORR74bNhoaI6bre3=CZ^Z*Jkm,HJ#[*P'+D8j-`"^MU;#UP<JJ3aE@^QT%lUgYKDsY5ZafS$%WX=e.''a!&EV=QOGrk^mZFP@1k(m8>2\";>Y!("C(>a,oUWnNJBaCE$[ISNoW*MG-HFbR(9S7gW?70<1=)"_a(Ifsh#>*d82cB.E%,4eT1`NBFQq?5s4qjhkh#3PKZoe+C.ZYRb\`T"g%q<9#9'!80/5B_0`GACLe>i"T*9,C[aq7S:m1.6OHRpplh\UVg@Rj&XZceXr&%;2ni>'uM=/MO.D$fu'9nPFLH&jIY=IOJV8UM:m2b/[<t+Fbd9PoK'L4Y?>C:YGn`.VTG_Ab;%TW6mes4q*HNSh#S@*&Ql"hI!t@$%dbLG1/[/S1/a&P/`-Y)sddju7`jTNER>o-J5s-'G$fpdun2aWo1A.\SRRXXK$VU*0=9^cdg@Yg?Wp:IVH[XPe8*A6WhWY]VKEXWD%nfdHR&;cBi,gKsS1V]eoC_r[,nl:HEh3TDSGn4BuHSWgai]qd)o.('eGrpUJLND&EAnciW,sIEeZj\TKUCrg4:%6JXD`/r2AU/X-%/7Sdfh(i)\gZp48kC1[din)\2YZ:#CC>1XjEQ:^tgU?GEXLe'`IHgb+^s$`[EZ6,Q[rX'hRnng'LSS<l\lDub:=^2(8sc$TPE"0M%GoE8(Ve'pI>:Z1A-e6*4mc=*4pD]Lll"oMa\9i+ORfTHfZDT.#Y!?S+&Y#Z,b'lC)h:0ro;X*Lb8M(Vuo4Nc4]@-Cm?/GA!BCa$4%c[*'*Cri*i>f[]Hgl1P?Z6Kb\gOjW`h^Qd\mI,/&>FMbQ]][Tn/j%66Zh';DrD(#k?eZt*V+P;G?+R"1]G!2U?ArgFE66[Z!KDqp%GX?cHK_p,1</Tr4b%:CRG;!kcms^c0:RB"`m0T6qo5!74$'uH!(^Yh<aDJP]m&5^1j#l:'>@utDQhF2Tg9pe>7k42TmQ$RA"Z>qb%^:Z?eAC&GG;oLi^ASZ)S,C``n^BOnRU24/Z3tX_A7N1U;UpJgF1JXRlP*WN9eTmCFN7pmJjY+g8>uoS'H5hQaH+L>%0m!#qdG""n%QQI$P-hBiH/,K<ulr<NJ=8.C;@Q/9k;j=<(AeDOnl'ICm5(A&)GXmI2/1JA]m]Ds(Y)Q>,3El0GqN)?q#nqIH,7n$03RH9h-EcJm%M5'+idn!X!\sTZDFc"M2Q,VTPn[l*7%q>0Q+5H)Q^&5=)k^`.RSo0jYm1$C4]I]:.%ndGV2uCk-XiA?1*E9S7@`aU'\,B'6kV*Z>%@s/[-'9B>hfgcZ2m6Y7QA#=NQ9^=K?JcWZ96tRN0[K4=`-Tn\NM^9TAfQXnlB^I7c80iYiG5aI&o'2X7Ccj$ie$qnhd:g%7%COiE%@Qadr5qf!joa!T@3fVfrI.3_aa#AIB-%ZmOa_:2I1qPOi'\%b/\"D$'IYfoI;<AikH?%Ml1tH<A`KEU3'bWL,I&2GsK=r89E$h/?%pQ?lDc#"dCPk$!r3]jgM,Soi@Vs*.-UNa0P%i.5D&3H^C1T7U@=>Ud8S0";UQ.N"iBDDp+@k;@Q6]_"Oa*A[^1%;J>7jcJU)3WK$%2E-\W2t"jX9mb$T/cSQ\GA_K6J;r's`l`TfD+0,mC^ak2PKaU40;Z9Bdlm$\4^Z\s0(r=i!!d.ndSoSth91g&Vp@BJM:J*;@67Iq%*p5GIn(o.El'&#?iH;R(*79MW:0g?-^t'/g84G9Q,Kb)grFic(ZM!8ZD6d>.1q]U/Gr.*2Lo'1-7Rue$!HPDPa'q79pDcg9mO&Dq%?cVGg-fuHgD9Fe0fl/%e9,`W=;89UG0VhSSL]MaFi_",mA2LUYi;bonJZctu^H@+%$cNb_[0C<-S(%Z-QU\ER=Epq8@Y'bGphF0a%AX<.!'?d=?NY8ZoY6Kn:5#t[0'^?4nQXL$tLtgS.\?"$LbG[Rj.Sln%NTO=)$+`@3#5o0?[C-kMX86C(bsq>SfRs@)$PMT2WYc_7%@=&a/(lUbSIdGL!Z+e;pTKrNWI%>.NU&k3$+F&2(RQ+MspG/I41815^"kXoM]nReP\jpc80Nb]RA'';SCImT^]@=hL9`jD..#)5b%kmB6_KtW52F"B<_HOVuTJ]=Fg=%)2fA\!^P4#kT25;IMhYaLfAdcKWa@=Fn%D<,&Q*L;WLo@e)2TsZ^U]IEUCo@pgR_i<9Sp2[-R%s*V2d/mfI7am+)L\3<tlb@g/;[2o)GX3V[])^Y.>CXpCej,UQp)0Fd]O#]rI2*s(VieiB^o:K>Up;_Sl@RX4&Cn,JPYDEY!DLTBX%iBC3l3FjOYZl&/V@K1e'HLU^^:m!c=k?.;1&MJC4+g/aZ`aF5n2eRM3*^2cRR^u4'/F3YW*Y7>4G]>amaDO2.B55,s]7++FaPpRu%Co<s"52XOiIad*nF<t;H3uXC3ekbGrnn7.#+!Sfbnqli$>:NLBPpeW'Q#o8[T.`EX2!2sV7ceh>08Y(.G37!(`-Ug&m=X=_cp=XJ%-<6ulDJ-j2,W:KX)T,@/F434oA6X_mGua)tYbK6WgRgkr>=na$`"TNL#lK`,StJ64r*dN6?f`./nHA6,cde("IXj;i&J.ab:*e%Z%,+]nr,J?=!pdc0:+QBA7mgP`Zn"15'1>U!q+I7&l+PdZ%M59$JeA;VlgQ&uEI;*Ql8JJ<X7d0R8%7*W_CTXnh'e,V#j<q$oV@1ER%4g]cC])g9DdgPi3X,6Yhe9]6F6C!d\XkGQRAJ5_mlW`./D9[pD8"<A>b=T;Hg^c37AR%r7>oi+1-L*$'Z[iZ0YX"(`].;\h0<3LE%[kd_a`<CPQ+\e.*8K$IT,#-4q;S)<\ia0.,0&O56fQ0,FA:Ad`O`e(X]hK:6b:c?j\>annFm"h!?'j>XUV4uj>g??&gOCcGSkZ?E%hSVUb>OXn$')$^:j5i@2DmE/L]=67Z.qc'T_'E4uT3lK++,Zk9^!L:$gRR)hkP*PDhkqiNT+er5QTa;.G&&oD)t*>2;@8"bpQS':%-kPf7+FN&f=[9K;!b's&lMK@R7t'MB=HWh!'Q0o]*!GLpf3UGM'+0E'.09W5Re=OaaA);W:]pgbP[3)Y92_"-"$rJ55;KTE<Bp=f%+Aff6#]r>,4W0`rY7ds2M#sBWH$sH1+n[s?Ep#dpZRGp4ad'f.Mi\d8"ZA(SgdHAhF0Xf)9o-aG`t,Fc&4aqsN&l\^#?MDc6or1A%a<X<ZW+Qd3;5YRodW.=AOp@^Rb^ORkYqS7!G<6b2F#?5LjM@9%?,A-DpbWQt)[hR1%1n=UBL3\m]8:V4CoA;f;CU0^Ac9[b;-Xs'%W"pZ9#+5-'hLljLPeIQ$CmYB[2j'T:frI3>[9%<hQ'nuE9f:J_@t*InVrFf@-4k)6$^t(-#cZjYZ&C&e$p`tn:BEgX4>OriL*[D#%`\Pu@e*r\b;/%SVN%tT(@i7.ogU=Gh#DIHW6t]4m*Fho4U^kj,6'+nY7NKC@6R*+o%4*$G,%AY:Ca`/>)_]$=2'<@1Obq6bIapnh%b%Rg`Xt8W(g%s,kWUl4ca`$>P[gSJ1h;@:@bC.X\_P'QEf"I&*IWCjNre-i*;gMPL@<jq)[3eNq]D>W/*k/0X,`.B=3Isin^.@9<%C#Y,NlfSp<3Jj["_'_>n",<>:-""Imh.XXVV0SBF6k[GFNCE^:^0;hM4u;KRb/tC@DL0r[M^<WilCKu^"f_<.4dZm)'U$enK*Ce]%\QlN`Ur<RWX04iCP43.)C?M-P32?k^o%*e.`@@>ne!V9*0@kbEnNhL.Z%&.G:'9&W-/uGXgUVaNrZM`QaNkAgX6j9c[*!Go7]H6"%dIK2mW4*1HeGY_@EWp:@QUL`OOSgcd8#1Ymqf6a.Zc'iKo":4i9(TNVg"__oR'X00#i7O8Q57]tLQ,m0@`il2M$qU)D'Gn@oUfr/%q=/*cW%E>'(\;B='&uZRamR=Lq/RjlG+Lk@lhApD%:IE:S0iK,kH1;BpgfST1AbAU+;6+8k#*<;V7=3r6K=5,[o0llOX]6*?]Hu:%WH#)F:Z&Vl2".+p>BsbOPW-fq][UTsO#J#"*Vh%AQYX!na2Yh]hgYJe@;S6R?<Pd$,GqJ)/Q[F+&$d`>o()?SR*3riU-JcVGT-'S%mprbeI[eM&^V&tNpN@1IFr1ArOAk4*%I;ZIC#K=-^6#Ru-GOb>][Q`djmm-I4A3[$]hC*:;Fmb8`CesdWNqs/T6Vq0`^Y#K34gg[%)\Xn#PI%lhdduJ<--E2%PU8L%[b&gP-jA/Bkkf+TfOJN^`BYgr*AlH-8$t>a`L59*3KeATEa4Hs_XOA>jO@b?6A8(7nq\^N:9der%4B<)[eb0tU7$f8V8oaBESk*-;:NMYgD#n4%1nLO``<^X&DjDF.U6RN@kBPrjZlP"d2<06mr)>9tZ^+<o7UoW%VG^&LDfU\.,6]j5%H:ruD0C7#[.+ha7M3i.]RH!X,97k=J[#g8rO3W-*VFS3c(ig,:"sCt7CjoS-o>lXkL^fosl)jM#_!Y?7EdDLc_m;<5-+:[Kd`ZO_%(1E,[MXpd[/Z.iG/oG2o,G$pkDU^^;SbcR()./1Oa"mH2=[$b)>NJV^G#nKaYLn0sri@u(nYLIWIp1LX0skEWV,aY:ao1ndPAZ5m%72@.[48-Uf7iYb/#l/<Q?d5^6mE(RB9(>om??:&WRoQq!EMMCt]to)MXHt4KhWsX?T.c1L_5Fe4<_P&:#7ATHofC\q#X@5-5&XI;%T?8ba;O+8VS0Kb<:u&+tq1\P$m`(jO>r/oj0%8q5:%k=2\\!u]2s'A3nnNXHL#h%_+.fcVqFt$^F,%68&tMsZPmNu<0)f%o@j-k@%f$b-NM9a5WR!3Jd+AjH^?iqUF@S*TZ.T;s`<"R<U?8DVmH1a]bqBBD]mB2@S1RrSBjdCNhd<p&o^c<bI&r'ZL3so:%Bu7/ilc"f/%%.D^=MtSL\SSUnX0>bh16;"RlmAt.UM!%3g[!VeNS/*1$Im7c%RE`To&OQ4r9>onZ'mg-+F.=$ioF7m6K9b5L8GS5P[]Lb\jjuUV%`*qt:+UR;j0a5U*4l`dX/4]S^B@5#5qjq<!EkJ$AB1'nE?@aDJHm0_`bODQi?a".L^b8E.U5(KcQ(I)<_[aND]QhT<ohh1N1>#G+%mSn<*TRlEmN)tA2jR=am9*/1dY:^R\kL7UMKm.sKSNk:V0Bkb8S%!GL\GqF'"YWrC1-8Ddnp1r=qn0ZdS/4Ie7!Lmee"\*ZGK!_]%WA8HZO,pMf'(/u6;7F[@A!4,n4u(PN^M3=V#eJ[[ELt1kZj^%mB#k)?G_&<R<0<6!+rgr@2SXZH`*8NXXrC*>)d&R+5\GFG)U$]F%el`tC+uT(31W2"uETcNKVpaDh4T-Oa]D&1c11g''^>p2,mcJT&;1))]cbM;C=hi,-F!/94!/#%P=,Ik:p#Is7nXMA?+J'qaTG12R%Yn"Mdk]E@195^o]UEUJfg.1"tlWD4%Gh=OO0j-'Dp'S&]`aH%SgFGh:j02X;m1m(,4L2p=Cp,g:2"N`08X(`R-[<3+PN\gGApt-%%s0gOR?SZt1r5BKN3qKLs_bOiUrR?il83;#'BkIP:/?pIIdNa+)]&t+BS<Mq>l&E"7>2GK9.n:n$L%JGr"5f<f("2L6D3;01V_c7X%+IWg3mSLaK[?:6mkODL).a(q*J<tsg4=2E*TtZt[9&K:.<$+<T9:SV#Yh-R-Ib2a5kD?URGYN@-n9$V_dNUI#-qfKZJ8kduJ_/E`%#k#*Qi8>E.`k0)pfe3^=%jDS+C+f\+N<fS&N<fSJQGs447`chc.P$94&CfHhC^>sr^m40#Q^EI_I%i/2"OY'*\*rT3oeD.hAoB`_%3jqWEcB"4f)^)an:7J"85u()_DLh(U$Z=t8*J#Ge)IV`NO"u^8:4rfQ\Iq]J*,QVT5YERYLRlGs5>al)\$4CR6uBe23aLA`ofsZY%.!Hb?[g!HU0UKL#mb4F-R,^]GLuJu(N/cl\NqXC/#&[ZT:^bihU=L?!&'!>nHd@VS@4os*naSafF7D=^erEskE(C-%`c6cPPfd<^%g'pU-#M1V(LgAn@Zu[gX<\!!F4-#B8IZ-N7=&'ZTDt/,P)GTL%fA$L<d9'@']m^J>OM3HZ+SObc+p1N6q<\>XUp8"ikR8ta//l/"%Sf!IID^HjL26tZDZ^XM0>eH[ip('?J,^%0;9sq/Y8;)r\h+-c"0i7f]"Gu<&mV!=)h!E]ASdd'WT"h!j*D_[MAe$7.M6BQ$;i!c;%DWe<m#(;3^nifW#i*34jmH(T'FQ%6]fr7.Ia77(eZ'V,>j*9RCLmOcjj*9RCfLo&ZEBNb\Eo0\Y`,Rp07XbQ@?c6qHnOECl=RV(+%GiF^fA8oJ,4Rkn(1EI*I*)F3Zp\4n\*6/_2AA%@ME?%ceOlVN+6l[Gk)`R/*R+Zoq.O0+$q0dE/3G7T]Ya(&NJt[Hrl/E*&@FHX(%;M(^MKF?NHXN;o3;]u!A"`:1%F*&p$A`ArX_kPZZil>SJ/<]W*4@K'YIVn&<_p<PW=(l"6omH#To,a(HLQ+AG0K<q*M,TKPB&:YD%"`80YgbWC4E,X+[]JX6TlF,.gVe_J=+>Wg!%I#H,kVZdqKlp"hCWV74-I@hq5f]OuiptZGb-4WtAOk$`]k)2+r@lLUH;bbFX9d74%#X\(VDL9LdBth]aeuetY(0ceFE=MKDe?"PnO0N4.8ks08ml"4n*]IkQp#^_bmoh(ca6A'dr.i%01G11I>gYD'U1*<cF"BcF`oYnK%54nT:a`i'MqFe$KC0!BFa-X$ol<sX>V\icue%1T:G<)7Hd7B<p)]m8`U?<b[n1c9/oC-hoYLlommMeVlKPs@8.@nq.VOWQ;Bgn1A%22gKd93Fh@ZL@mEaKtYA,pol/6S!Z(QX0CU)iFV0Q_jICr:XHS=0[OE=O&bO=uL09<E2dERM,XZl&qR&EmQ-dC;b3s8fO45([85k%ehmnDe'aDIdtNsdP1GUt0)cIsb)A0!K!f-VK`hj!d#]CgEEuK$OWp#(KL,.67fPaJA$7S?,!:C\WNmLF,pf\7Z3aI6b;;@693D^=%l]M_ul)J$Do7F6i=i2l@jW"[H^2%Er8#=C@>1<*`Pc3i:XQqht77jO?<MdSh<Hq/6ds;L>AbEDZ)ibPuT./7`GaY!nbIS%E<rddO%!@X)YVBKCJ8iik;2l_H]B`JTJ($5_l:ul_!"YpY4,V<lS3<5eJV6^L/H=$Z><uHLsi;l/rCei<RZT69L5W&dK1p^"W##NGHf$%^5%[%\J=UJ*PoZAC!;>Kd-!ba`3)aoJ6K8l0G7.@66(=Fr:q8K1.ME/_AHHoPkOQ!>pH,6C]A!,b4,i5*LB*42@><3u';QQr^7<,%M3%=)3&nb)&eJ!?4p;'u==F#t"kaj@m<Da[f(?*X!H\=uAU#GaDR^m-b`\Uqq.p7FrNSZ-)F)2$7eAa]Y5k``l9*bGI.b&@k<!$A>%p%b2ck'B]?X1AW1$9=$;H-q.bYH2U.cY;eEq?DmgY9)R+<YQ3G>2*.SN-Ni$(d/L];Z/dXt8@KMlH=CS.%9nEum,lo]V.K`Nd;!0.%%JS[+g;^&Mb+N%tEdYqoR!`;tH&4uqL$AoIDcRR*=R"-PT9.HYo.g*oV%,.>1S<ub5"Gqs'!@O<KPp/5M9/'*C-4%I`c'm"jKI+tX%Lb_41L^qs#0rs8@'GrTk&aIq4C4Y:tCkQPD2D$Ah.Z.@JI(#F0#:X;:XD+O@7<Ync>p^,M$npa:LRc<qC6C$e=\Z/g-O2sA,c4&l%3[tN!]a@a^T]FP:5"O0WHp+M<nCA;@OFlpE$5JuE86./b60K5[+Or$)SVkl$.-nI!PRB5TW(AN@dAm;iiG6(7A?;I+<BrW\%S$i`%dku_qPb9KL*$&!3)'i%;!YQRNVB7W@#O'G?+rZ"V)kt].nGjth3XbQ-<D`_tQuc.Dg2uhh>mB"2Ro>DIlnZpsB%Bf<=V.K72@&.A%]je!%%8$U8#(d_7H<)0r%0UB+Vr6Khp4>=pg<b[K5QV/BJj]eU,@b:2n<T)6MF;(,1*hC5@??3PUd#\`>18UaA[GVtnt(sI3N)#\%R'[i`4)8MD!.mtcm4*\?.2'!nLtQ>@'MKf)/"1)_C2')tT2c"r,S8:RcD*W)1o_\4TL5M*13?nXc!]SUWlSq*+/1X!3Z%sPM'UT=%#*sdS,%KUY'UkmgPW#_16cRDK$'pbT6!5$X#S[V-3NF:-B7\(E=E%(sh9b1?/V"ujB)uOd$-Z.C$.\`J%+<PY3SKLdpSi179OnrI%$(rUfDI!=l<=J'r7N0SS>]R-E64$II1`amDpM1o1m?3g'$G+;4Tm<[Ijp"-cg'/`G*"NUEADeE22U],e</%f'"4;Xl7Q*POl5EUW%JH)^&+06)a+VA5+/cutVFZ6`3UIC(JfMEpNa[ikUps:c6,E0\t9e&P)$"Z;f4;+Z>%5eN_)DR#K&ca)j=4)hOijFT%`tZ&jl3&90%X$j$4H8S$O<Z)0Z=Yin+J1LqN-;e3Q9#s`";*\#U0l,uU3W_I6ZO1(??umhdrNIJ""FrgY6nl0QN9qdQ%?8Fc?n7Gb(3LWm:.6ZJ%@0A]ekrP+1V9)8%<XHPWPR;i"QQ\^=O'kVlJu0QG!!4/d(n#&H'gChA630*6&q!XYW%t&V+D@Kq'GrJXlsZt<r^#dQ,m[g2VncaW%CSAhrT`?Vr$)%aBJf,-B!OI>DQ^+PCc"$nf]l2B+<S$Z4EGckkBW%R)j>tgnBXoOS@2Ce1W.AMpEjIMhJt,1<L'Fq=l5$u73l<iV%)HI^mQ+BS03ARp1:bS;kG+h/FjN'q#p7QY-UOSe=kGeL`?n?7U9o6[Mdk3u(,`K,Q6`WNTQd%/#=eWHk(!9?_W]K/L"._IM.hgb>%'SD8eP6+)RVG)^L('i@7Tmif7Z\7s`I@$o-LR35tW,Q%iE`B$='["5"-=IINn0J>^:f\nE+pZn5)YW6"+r\mp,`>(kE(NN-""I9f%M=93gl7_-M2Ypj;5ZR/"1T5]@'TgorG8;&am5!T21InZ[QN@+9$Lk5#rdq!dPXgOU<+&Ia/fR4PUR1fi"(F`jAeNOX%1qN,bCT^-%R0JU'&2K\*1(BU9i*9kgTpCP:`EE>Te0#I/(dnLre:3/G9X&dfSU*ap:1rAo=TH[JCH4a16-0Xp%a\XN$%rKR!c-T`/jl,L+RoKE%9]D?@YbFDp#m-A!$rH@OFF;2pq*6e="pnRNKdmiL3L57_\>Z>l"Z:u&,T*e%!Fj,884-d06&A:;CRc(u4".`UQi]ND+g;$f1ugJK%J.a1Qc7T-O+JD&KnK8]98.o)UL<,c`O[qtbXJK1IoI48_!6Sh_/u!kYb.q%IP95ZYc4bg$.["K+_!u#dREZn'F0P$9&p#7G#q0;V%3nXZ%)a471jhTQ9=KKUeJ$1?[2?6sN3L)',%6f:iL.%a#RU$,X!/<EtNS%e\R]7^`DmHN,8l0Y_@08DG0?^(J_?MjD.DS<D?@h1Q%7>);l@MVs$0.GQ6ZH=(,A$oS^:l"8bJRJ`UZ_e?OLR"QBdfG0dih1ile/p?]R:Rft>%QoS)DM+@ei"!03[JBS9#UQN'2suaZYY.P%*BcNhC=!&Mh<HOWJ6;8CASBg:=jf>Z7"n<-6S"*(M0Mu(@6+H$OH\TWan?GCaVZ9W(`[*0j((m)eeGJGEhpn\S4=HH\)@?WlI^X:%,\F%V>[A`W(X7>HNBE+Y').6F/Sh6C=iRO.qC;(Y]ZV-s*:J3<jZmhg"-IeY&CK,$.^C5E2cg%]$,(TmIL6YEA`@fCNEP3]ALd1!%Qt7+\!=]Et1%sa,-GBil:(A@mPmJ\Bg[cls\<mJ/(4.T=AHESBk)3&4FX0`p?CuD/J5%jM^gkT6QO,GK$7)4QB:86AETbiAB:1I=%rpe\(U^FCF6X;_3>\&[S$%/JB^!+YRr[k+[*$LH7M*q=F?dB>1#NNck9,$p@^efZDmL9AaZf#p-/O9[I1seCi8q=c88]d.iGT$"a%TrD4c[Y-q>oZn5.op<q_9P*L7i-R.-oP_&Kif$;m'SX=)bZ?qtUO&qkIO?e"pCpT4Z;@E-0F]9ED+Q[cV[]d1m173/*&4\D'o`+M%W-"4?CZnn<e?].e:DHK0IN[:b3:/J[DkV^!Q7t:P*[,L)7VkVZKQdEf^h!Y?0WLXo/p:!&2Q24VSg%RC++JuHRG-?`KG[ZZ@,u/]%[)(Dr-FV)oRi4=?N9!sFnl-7*TE,Si25eljUPcr,kht;149ArCMTueE2FiG#<<=t3HGmA"b02E%kbKL9V>s[SK.o!8r?3jDljZ!s%M$BH*Sl$%%0_0$4LFProd7kRd]EBYbGR4PE>q=*!&P,PEHE?%PRR"ct5>rfee8TZ47Rs<63&Pg;OM5_q\g!F_B$ggupNW*d+Z.,%%D[@RUpql<Wn4o"rD:YWke1os>,6riH.q#4bIu%6Bb$\N2`2,4#&4eZl&qRN&'"^V2!/TEl_*p17B!TdtDLb<Ti+e:HO@Ua<$Yj"K%.'%)rW*p"Z)-Dc!Pn50f`uksf%m3s#";=4B(IY!TRLF%6%,(]mj4LR:(7Ki85=UgAi66b<<p^N=TJ>N$/#l]E"8<5+@.`a2RK\FA%UJIUm[)!k^N@Z!)i7)9:=l`QO#D&an$8lq1>G6^=V!pOJbX>)=#_F[EJR+6l!u<p5!:2OOBe.,la8X1:GS>tULes@G3!_2C*^:?h%h*B]qJ:Mos0Zm"PQdD-%Iks`jPTqnB"fT3ZAG^jJqj&eTEELg-j;rUNIB:1?c=uYiVNLbJ4oq<%3l?+.l[*90.,,ooqN;tgZM[$K%?^3[5fQ5W8ZQ<?YEt/IIDTig*NK"C]I!?C'r<pJXEDEh/g,bnP\#m5W@q0u/H(N&teBC+CObVg!5P1Il-Sdmh3nfLOjPDq,G60-X%:7/$M.N$]WDWM7%.lcV/Q']33G859/3V,h4e+<L]oKG^FY`&WE#`JYS^GhY2&e3sh#Er@Zm?c4RL'.BD?F2^o[WBu8HH#sq:E#`b%YWRk8?k*iQ$@<i%J;5A:J=a81L\*]Z'p#`0oJir;!6jni+2LO9*_SW,7s($lV*ZcHD,-C!=^t*GTu-AP)(VIHcOV!,(1;n)*CoBT%L?I]k*NH&*TWc_VDtW>)r38c>6_;Jt;_eiD*Bb5DVMcOe1L_F,f.)/Tluu=%"%^tkk9LYfE(GOa03,X1Y_!-8rO-tmHo19%1Vl@1%E0/>A#;0I*Y]Yt)bUN10np=gRHKLcZaU(ld[O5=RkF=T&L1!BO[_9W#gX*;24<"$9QfTncon>"RXk5C`pHb[!g;WT1Ydlg1AW8hp%f,=2m:3fr$`c/`&CXp;Y%kZTbYdoB7@t$pO+;IYb)oFqYe;!AQr#W1;C^BK`TK9^!@;,0N'To/HUB3&:CJ:HYCVEi&9:fJW+HLh<%YR3lG]P)tt*AWE:HoCHJf\C";5(&BTL+c_MDFN/BPN]QnL',hAGW!*6c2EBHk`MJB`&e_g/`HN343k7+-]MWF#Ai5nI]t"ThXHOJ%)X2'roskRVR;dPk(GIeeQr.j0ob`]NQuq*sdi9%#_!gQmBqSe4s&9:\b(+ER@;u+hV85+eZ[$oT4`?k^L/o)8&jHdT^u^B?LOO:A%p)I6A1%!0@&%<V3lKeO+hlX.<f2Tb4Z-YIHNksD>!Z0)mEh_l?G-1K(hYH&+Od66r=Uf.kWT+k;D`FZ,3?&HG"6SC@p,+BKl%[03%!/'Fq>0186Qo"Pn%HuM4kb7,%/TWW?-L`F;/,]XXd11rjZqSa7)5@jI\#oc)"PNR\h>)S0Fq'_FRKn[B>G_Ylf\l@<B`m^+$RWKE%+>&ub==gWuA+BI&l\8<mV@]f[g]BLsogP3dL=^TU"YrJ!g*n3SK2#=r<fYoT3$%05dH7*nS)uCYs+A-3%l;dSliR`LAXO^pK?Z80%FMq,I+KQt#nb+*WBL+SE+!Y6s5mq[Ul8D@[Xdo6D[R7lX2>W`e5)0%,Iap8Ol;8Rrc(W5Yi\#bBY#q8+1hYFsYT0;bF5q.2"LoE+%4Uh>Hg-EK[pK\3Zr.;!D76$!8%hgRuH3JaYNM3mdnQk=l1%Kn%NSsY@Ak:^&i4':r0;,&Kn4\&!3<1l0\0*VAMBjL*gP?9]dp:1j%SlRd,H>Wu)S>`hrP]=/%BLQe2[b99`a^\S3>1)bhEAr>0DRNX8rr+qq^*gg0V]-TIId#J*lcUHeLth8AfBCjQ6nkL@=q:i;FjNu)%?&;5#V:-TRKXl$=Iaqk,L47VCS]Qe?B.[\SP=X:2<j[N=6bJW!d=n5tcO\`J=3]>LLfa]*)5CSP%Q=DPHK,$^kH9X1'*C*h?ROoH%DM!g5G`ZY#Md+M[bq>m=3hOn6q8D8`\k_>F<Mt5i^UO_P7`McuR0qgZb:C4fFKo;a2sk56%%LkBC%d@h+BD95i@l!u54g$UOTm$i%/Wk&B3BCrnr"6>HKs)b+oHskO&)upWDBb0=iB6<0;P=O).A@pL5/WiE-@#A%i;`"Nm9%g'C[cKUF+h3Yc8hIW]fKlsWk$(i#cE\.%(Gai--JiA@C_\P9IBGnHU7Tja2A%p3@M2%A@!!G+&(]nj/#lh4G["Uk50g+:.S*q\).@'a@@e;46!gqq\7'&4HNfL_Vka.\#`.AR%;%Y5'KQ+_\XTg/:>SJ$qIVQ*6*!A"PCY?k7fe5kF<OMC7OrQRY^%jYnOa1E`[m@MW2u;>FG_FBDCJj)YB2?-]_EhPe2Z9+'eiRBJ%1cN4W<C+)7lrU_5XWq;>28i:p.@ZOT'ej_am>%bd#Zh"21ggB-%Y/8f:@AWea`MSTA.GGe),0cBL4'EcGs8oJ7*lXd#\ON[VAD/,%ot#orcfUY/C`U8]loPm.n*(0LTpSl2S3<#<WX+o26mQ;OIiLB8k+_gph7Koc_t1B(#`*`fI[_hG8.3-pnU_S,IR@$[pc^ZTpo3gl%B<%JGQ5kgP.K^M:_bH(EjCR(%<JIL`iN@b_mAb'(SEHWWQZ'@414[N!0smk$L^81kDQ5h?R4:/(VojP+</[4qiPA6Y(XH?Cd!\3P%hK.dpB>id!b`t:tNcpmB&ba+;_U"Kdr0(3qkK8):'`i7!Q!gCfo..#Tnu>19g2l@D\1'I[j[%0sH*B/-?JL-42cn9?oS>E9\Iot?%Pa\'l_*<\ucR_'5GrE=kk":$;dJ]"bXf_hIc]rM?8_mX^0fN0cce`DXF6.dqBX_+UYoM"IB<DAePT5a*<Rga.ba#O7cf9&\c'@mk%a+\N=k=Y4Rfg#18H&sg`*c0)dprYSoS@LC_gPg9oc'8;n5g1O$Y/DJ->g:NYkZ?AL\%*-YiF+:D2-6Mj-hcpb=!H&nJ\*^>c6H;E%(qX[g6u3WojYKt-^;Ou3j[S$1H*B/-Je&ZRXLSu)4YiA[>T&9M=S?!VD`XnfSNc3e\rFMN+GF^XG<Z`knpY%9-cD5JI"c:Yfur(Y%_kqOOg\_rO5b38WEl7$pf8=b6cS.FpD=Ke3?eE0Ek3(UIp+;oPm"+ZHCHX/(o5Eh8!#J'ElJN7p*rb=93"sqemtZ7V;]oVt6$r3=%7mNBWFgYHN2hlAhEe3'gK6q](29[poScKN3ll`^\`;u0uB%`^Lp#\S&)pu#A-K@/Fba)a'F*I\91lUj8qG9JX)pM`T/T?MqN&c4g%Srnq[03sO\Ko5PP`@''2jod]b;,CWd\O;4s);AbeK/l"9T\3Lu`\=a^7,)O:bi3??JE7sZp$A8_T:L`SORrp-p<XD4D&l=UMea@A%pl;tAYogkAjEPT22AOhc?T#UD\?IL&PPTYl^j]bF&VA?KI<3?9WWU.$/Pf%+*e@gK\KUbAQ*II;I^Aoc*'/oEY;CT*MXoVp08K=W%g05+^R]T65\?Uu:%t6OWRT%T0bNpJsEuiY%'B#@(85mNYmLt>-0cG,)1hYE"@+Y@(Lc&i<Yh^eQkHeh"_j9KJ<WTkj1k,+5`>l*t%IG@mM,=(]F7@]=HK0?scpE"aj.L`(DUZKRQ3(SZlOtL!p_<Wh:ja7\.dhn!'g[?j%KTTGt4LBuY0j#ID<4"cHgR.j4IOf"MEjD3q%Jh4C40=tg=d(NhQJ1r,Z#!o=97<mNl8K-f^l,rk.M#CpoZdT`iDJ@?9]B;QDd&H-XcOl(:J)+00UOC^lc!c,=S@$UG`4(B<k&_0E%0:gk%#lB/AQL$_,-]UQ_imG8S@<Ce[0$G]^Y&dA,-1U^67lJ,)es?i=,W5!b)A9*to$MEr=F6LcPKqH$+O?usG=i:&6")^1,m<60%2V/uW^Sf;H!(SJ>7'ru2l?T3h0YiCIZ]Y'4(Qo87?Ojsn51c8(2[4UA<a`-ln3pQ`RZkl_Y7fP#GtNa6%^%@i?j*iXIePIjMUbL[%m<(kp]mCj\]KquuGGgPUZ`^Ap\m'_O#f#Bg:rg'e\+L@Zq9YRci-e*\c-P+qV+@&q^sC?SXmke7[dBK#Y2<^*S.uppCS[ht"dp=\%X52@eO#rCql66i1s$-#g8T['Fb>11W\?-@r#]RO1CjplEn*#"eB!3IP%L)]R0)>Ke=Ao:Yq[5??ZV8YY`hP)<"W&*[M.f4'^N:X&%frV,<kcU@KLl@uC"a94s=HT)*;KuPIoTb!NC\CFEo4aamVRa#>%V^`lY[][EMAZF_qdF;5&T=b<o&7$4DfmZ:RJ.H8\)E_8!=8',%DfflBkGgX]KaE^9(FB,>fkQ?,%9Fig5hHFe!.GOHjuH1E4D'>a@7ss5jU"BDiIH<mf`Fn`(.'5:XHI`o^[AH0VudGHMJp/A%Q:$k%G^,D*3UENkLn+^>i,]$_l\t]J(<9++Ee^V7?W:?F&;@s._AhMD\c.>SZFH=jRb9Y`Kcdmh*e0$Jc,G!4l!R)HagBLo$Db/8Q.YEK%V/3OPbL6=`kWNIbDWJcs*_USkc"8p$2XqpXrm:,W(dbBNo\f%9A\XlEq"T+6%fQg@GWJ$^6a0'j4Q9a.2U4LADqgHGKBDGVpga4,%^(Rc%?Q==O#Em8j;[`F.rO2L4gju[g0nZ8LV/^n3\ji0FZL1p[)C/kcVG\V>JlE02SEtlB_MUG]Ah@H_"-;_`6]UHeFL>V#!)Wl1%NWdA]*AT^Kh'AY:&c;*3KetLQiFB[LB8(DikcQgKOm[s\A^'nta(1-VcTN@+'Qt13-C('kJ]\TZHWDDi2%/)F+Fpu#a^@8iR=kM'%YHN5+R_tR[B>Y']!fHbWX;bl^4]u$Y.p0W$M[1$5[tDYn?q`JA1m/i3#6=uSF0Fc2C8m5<&ukWskE0,m+2d4Oh2pJI1_Mr4.8ap\%(E6ZXOIL1.]Jr.>OQBdbK3q]rCW45d/se-UBIOELBn(Um/;j0\]@/WU+Fe,KpC5U?>[_@A1SW6N>5bBMo62B\*uc^4Z%A^ZULt>1%`af@6-qYH:4ub4,1@3YZJuK.ME)M'%%DEGHOMM(PNU^OB58g'2cHa-23b72[;Unp<Fc"uX*L@eOifN^A)U;$[ZN-+ZchQI%VClAY%\uS)\_Q]mZ&do"J]in/#TbI:k_6>2LKO)FYd0k:co^\Qq4Z>g"I2U!29W0Al%*&nhp7@X_(2g4\9+DY0+H7^/#^ROfBEoL(Ej?:J%CI'Bu>k1OA2_Ki;I(OPRm/>;^/JEXK:@X9p1<+e``W`4f*?KK'Q6&C%D[+Jt(C.iMZb/niP%f_-LSD2RlF_m26WCm6H#hpP>bg@O%@5!BRnf[Et<pm(1QD%+eq=H$5>#<gYRgQ5+Y?30GVr0e?;?-EOo6jfNDX&pGe?MBXpJ6CLi?"Y7kPN)Q'Ks55_h$rd].mr&`1O97%H%PB%:'`6#<5p]uhr,^JV3"EkL$o%0=BPcpF70e)hX0>TQl1EaO_-"W1_NTaOn?qW*"3q&'I>\V$m\(LZdE(:4bV"1S8Ypb1uC6S%7H`h=HT+I^A2sf<h;l^rM`UU%RcE03J\2QVYahb]8"T*6&1].?H(fZ%9^(OS+RuAIYDl,2<)+_.AE<,6-lt)h*i(2gIeL40\^(SB%p_]&'VTD/6a+<ABBeIWP.fqpGF(3,F!sp`POcbM:1c,oWmu`VSfO[U+i2ihX;6HTsFE)\;f'C3B&\&:eEtBbF9L\8.-tI^b(DG7X%A"uUY+a7YpKOuhFLVS0`!p<('E@7X`b]ee;3EB#ZWY3kpbH_i@NPX?j\i=7)aef>`>[nA21J+j64Ro@`DSTsF;VriP3[j1`7c\)i%Eo+f,m6l3X,28a1%U''$(J'h,mUKAK.OZU,]\Hu1I7cJ,K1TJi]Nr'o3f#ocNPUZs<S*U(q@=P[0p*D$WZ[@#hd6V(kes8qil3L1%hM/sequcBe&iGZ+f0[S#,M`o.:aakZh,OKe#a_-YFMn`MHcGl%`D`q@1YZ_2;5fD+*mnE%6g4KnqCW]p&lHGsN.6`<U@?2Y\Rk@G%6=38LT2prRc?ptGH6elUQrXOMNG8\;JU*4emB2nu66*M^=*-H=fuSu"ZptYM^;TThXonA<(44`qf_KX;aA1@bkeIUEJ=`$iR'M[=%r&>*/'Ong"a<7AA,Bg%r.[7^_J-SWZCYjkLDU6X*ee-Hip^*4Yre<MNZjkt3>As1`Ggl&EOd8Vt=>S?j!8h=*nR1qpF5"dXm+b^Y%%ZMGupu(>=de-p3B',dXWsB^;UtgU/=7Tb[?nNX,NMug;OK92[p#Rk158^Auf(iNWIf3_d]f(sK'eJK52]4<\%g1*HV8Vt*!bp<+%ICa?0L5!;_9XCKZTOsBNHhu!=>SieTK7e)0YTbXZ3`;X6-u'Bg;F?h+U?@)D_G7oY6q9jU7pE]SMoMmZQUO$p+B_2UgpaOKbiV+I%T0V[Ze3`%95(TY).91I]k/tT!"WlCAPABH);9$Y:FV3C?<C\D[7r\RdL^X+?0\77nRua*P1i".1S5D6-XI9f_)1TQLaGWRuWUUif%@h0WIb16Cj3b.X6q1-#l#O:'bko"Ohpip$=Fl@Tbafi&'Whn^JH'jN#KX8l4ZfYD$q]%`[8nX-;SAuAj$G6:$lg$mglAA*=iDs#j%J1Ce70<PDJA&P^^,/5hBFVO:S+u+FU%H(2r,7<b:\^8iDUI)\E6kOb;/*hr8_M\5t(p&E+c]2lT`U>=Fl7AuGfEa;:IYHS;=]=:3%BK<[N's<?Y>M,*"JeTU+MRnAFTH;2*;l!h\p'`ON,9):./>o6m5BF$*&8`7-Sn/O@r[W6S7?@?$L&7pT'5K1k`>%GB4NjA9oO);d%`LR/>.=3ege*"3bVZVDA;P-T@pR`QV5ldR3"A-X,nsJ-',*'K%(M&pZA(;[F-7.ajoNILH7Z-=M-4"5-l-C36eUpP=`bSKJ$[1s?%)!K1BEPK,gHc3#1mt^XF"pOpm-+*9e8-$Y?R+n`#)oG\[II$:*W$Mr[I39686!KGj84"LU=2mZD.L9iGi.Vq>TaKIOO]TAA/57%g%$5W-*,0ZRNh)3kP/"-90K]8\bQFhUIF\+],KF!@%,g%90?_BDG5pT>>%Y@f*7:/-D1I>^3X$:)JbWOl^W+KO\-rH*]j4k!TX^J.P%aDkfS&$J?c8S`+>@2MREi\d8AO;f[/(<3L5on1>Wkt93-'qs:0oH:6#aSDd:aEg:@61hPn[7R0hh&.Ec)K&)3L(lkj8!hn3/b!@M%*ss2ZGiJ'`(Qq.IP-qO'nqg!V#D5!-C<W-9s$\^+6)s-La<t:rB"D<EZlp:tH]UM7VB>nM,N#Y0$[Y+FFf3V0eVKXjDSU27I<i'+%8od)Uc1I#'%B#2Zc1DkUM(tFJ."2`,INr,K\,8RH;78/5T,J>=kR.Y#P7i;*VJK5fB,EB2S"@p$*P<2BB%SG*)E8:CEC-+QdPB-Z%5j9Gr:-<\/"\E`&pjoW^%JKk5l/om@8jXu\T'`\<,a<'jh\h.pI'fd%EHU81)t?gbog[1hm)JqAVHq>b_rA[tI#aW:-g0qaB:0A`%"<m`/E@X.@(@8JhV%.:l\&a^/9.[3s=C4q[2Nm5P3l.b*2hp9\TQenNjF46uJ3+JhoULlNVmr1-rlE0;KB<Xj;Psh:F0*rll/D#H%F_M&hp%q]G0]9q:*emSd2+VfL\B?!J7:i;LY_uh2V+^8\,t`]M7q!W'Y;kcs]F]u'?s3K[5ql.ii<AL/k[IX7R\eM3hib$mS8UO_%+L6MhkitI3LcKZ/eSl5oBTVem&Xh32n@FK#+US9-D(B<kY^A7Z1f.[;isLEH6BZJd8<N8=jcWfr^eWg0acDIoE`BT-"c6fm90Zs5%PN0%nm%EJA=5=ZROkA9K_N7?9<JLc'/g`0Jnu^DLPBL2656i?#7/&8A?`.t3CtuVn"n?q@]74H5RR]!52\b;5mgb!+fGMSO.V'A=%7r;Th(Wq>.T,tmTRbk;Ej/8-ZL!pO+l>-uSH'oRt9hcu3IfU.qJ>Be8<^`A'F"XTMKm@H:FJhf=.sDeG:J'gVo#lP_YK::&NaJDp%&YSn@+dLgS"AaC1IX8m$Ls<^NTD=7.'Ee>F@oPKej=TU(1N#6<mD"YG,\1/q/U\2o>gSJ>+U!adbY9ToL%A4mbZ>78[ab3h\I>-"%>%H<nVNYbsS4(rXF2$b(TF+4g>`/5T")M:\E<=HG8//u;;;[^+@@Sc(6).;Q.)=li30@aV3Y$b.'=7['T]%aK=S3eU*?[psIP*Gb%jIS9GhF\b562u=pO71)qM:eV;m.Rl/!S.D=(@m*KV<Zi_QF,!$8N&.N_ng1+%d&3D1hU_$*jNE!8".BbIK.,+^G.!_#.<=X%)jh[%QG<"tF78hm(/AjlWLgrf8g"#e&E0:;Y7)m%&j/m6LamQh]B"NKGQ+9C.QP'])^]]`FJ>_i'dd\63#n6P5uQP!h@GV#]28\DG]F!7%#@TnT)\dV"((`XCP_+kUKk\Kk](a+U4=h3gX8YCTTMilB`?e+Ig";csjDoJr/2:52&/[,RnhPT??l:El*]20i@D?nU8;5Q&Wg9HG%(3^<_Wka$%CSi;63%tD43%Q1f'L12*ecBTW8P11L;J0^mkm'd?=Y="*e-Iioc2t_@"W$b01s4ZFA&?(*qJNVopSAH[`.G6KQk2lP%Qrb%-JhVh=R-Q0J"/Vfe,f34N,tq'9l%#$PhFteHVEb:%+[mk)\8Pln'W=80kHEj+F;7F^J?()!jT=_"<MUl_4Hd;;0jVqATF2@F%,N0cT&SJrarAi6het9rl#7PBgFXGq31FZ42#.fK*&gSGVA/h:o*cdT5haOU."6P>SK$,0P.#3KkOo]:\MDrVigW*MH7iuJhQi#_`%*\=+tko-n5F8*6>r6"3oIVV7K#7;fhHQu*AC$kkeQta'Hm*3rjUucG%,oJ,l8HLlWGUbQ+HP_g2>KYQ!Kld\YI6emWF.cUciJ;"E%7nAh\@%a:s[pfTZUc+j$a083h>KgR]I]Pjf"Zf]VFaseLR4aO<2BZe?+s@XM'0u-HD&F4;r?1"C"q,cBfO^C'!NDLPn.k7a,l)4c%TJe)k'sJN<Tc:mJa04guVMr_$i@tFg2OJ7ch$mu4_&c%86F<s`KaS/THtX(1cQ.%?_:*hLOSjj7K"9Y6\(O7rc)g?oCuf/ApqthW%Zr!$AKh,(;:P\aUQdTm#8U,./Lc=D3r]"_^lht3X<\Zl]5`3^,T`q<%iDf*A+06Yu>a&.-.(`EO9TRg>T%:-*",gu(/P4t=I&8BA%+Qb`%:Pl!uToLR`jB0c*.B^;q&0mr>T"BlSDorW$65_2<To+q-hLN\:'[c*&)_aH"&m_g*DUNVI;RHGh5/Siu>E)]1Q;h;8A8(m$%HKQ_TG?ra$T0.`MNRG>AX+UpG8'>Ap%ed"7Z,%V_%@(;9kqq]&+M/:B2&'oJM7#)H&,'OQ!qb9US&2t4]4m9i8;FZIm!asMHj@dL%PPgoN6U8-hoX-b3l/UbpRPrOOOlV'/-p)W0WNX(hcHES->@O@^A;.7EA"a8#MCJ/1O;E3$JW0GR;3e@@&5"j2qDpPVNK6hsSgB/'%XaQp<?`_YmJ_:6e:<jeiF"4`7;&lZsL]C_b;*A!S$4->NGS3f$m/%&&!o^:_D`mnq?lNQd+0JX_#Jhg3Ne>9H'^dZZ`G"4Bg>U\X%Ot4UPAX3,W@W<Uh\647dq.aRj`=+Jt:`PuPDU">sW.-/bGd<Umb)9\'JNHO^gj"pmbup$0,bp6:9PHc]eg0Jg$81GNd'&kr";Z"X%3>fFoJEGi&nDp$?h]#2qVW(0>`2*f?(i2K;.bE$8C#`5D(Kd=iriCXqR=mc$.\+XHh3F3#X:,>T.g$'E9K[X>C^p5.?79NLO''H<%BY([1CB'7/@6Vj4h?OHI_1M03<+_:n+0dV]J%dS8Ihg.O]WI5"4)YPMTe51-A)K!gM*.#0R(k9,*;P8YeeCf3>_=%tZR,*nQdoTX%@IEMHhLfaeZ9Q^r?bcNVdR0.nZ!;'&eqVJ1Di[ocFF^``7aD4JJsZO,DBY+l7/+]5[]Y5`&i*<RLP7,,MH&M2iei08XTCp]cGo%I%\o_aS`<,oNHF,6^e0&*Jp+:pMQ4lk$B$$;1<usTVA/mAUr-0o.#,idr:[A,"]pP&@*\6gJ(5>JW>"0[PJpbng!=`I1lC5)]Z"r`&%]r=tmF9:%?KPaiP@O!WW-ej%]Zp)#Ueuh\t6B<f>E(Q**[tUY0'1M.Jr;e0>p`(;0AB3:hYON=Bruk&T5U'8\^ZfG.F"i8%@P>lq%L/Ybb"UfD\rhIt[epVgqgmqR.EY"5`DTVdLFnASIq]79tBXJ^f\f,'?9&p@*S0%5A!X1CWkCFqtqGSH9/19E6$ksY;KH(7A<AfhA%Ma,q($!8$ue-I"Tm_q0q'HdbB+kjutP!>c'8@ZhqH[jno8&AWF&g\qO0V8SU0a^u69H5#m<YlNDcma0=V?g.]ijT@h7X?eE^#r$7%W<0LJaC3DrUB@e*m-9[!mMBcq:t=:FFDI0=CXT*^_N4q1N_*@\BEIiCJ2,"Gm;=A3dmZUCG+lDupjK6JZ1il^:/X;sUORF[Kt6Z0%.RF]/>L<7?-48r%j$e<(I>B#d.l,B4IR0.BWJfSe!6/SE(;C363oIWL!f-ffkU?'!E`f[j@tsSO*@\M3,TkAb!N)/rT1gCRQ=gPi%?^dkq(*%nl/SqA)d6bR\]aXeu0\<]sXN,dGH=kCt3@6W)=VQF,(:lJ%8n,Iir@G1)`Q%ge<<n<j`",p?!0bsoYR!*oI#b8-qNo+t%>Q&G(?4&k-ek8"V[34'4b)+X;#e>6JP(2s5_A7s=o&/O^UZi(p.Ucu[NcjY4,UXmU7*M1Yr=_5qrpc;!F\&deVF3RWVKE7gD$XT"%BrE71<.qBZZ5IKmr;+9>XpgbtSkA)cb?X,mj8a/-0ZeH'X:Q00l@u3UR08poR^cd!XjKlUPh-_B!B)McGo#JoMh<r\(E-G4PV?I[%]ZKer2h[,[0`1nRS3'QW,2*a(A&h'S5-M%#MF2!^dW#ipA!0\*cr%Okj>pL$q=j35AHlU_Q`O(YR.pl&43o>F*t^aTWPg-eEKr45%25kLq\s7P-p,<G[<1o4MQHN[D\tg#V/9QC*dggH0c\@QIU.e@)5>_"9N:.NE5UT-(/'bd6./G8VBnOE7WImSEatJ]Cku,[:jDK,d%K`!c&:2fXiN1'u@dX33;kg1NbHJIsqH'i:Fh'lKd]U[4mpd<r1En_B'VONZGrl3mQ,&;oGH,r7)$]Osr"C8!u!<6)(ZAOs]>Dif$%B9X$(*p=5]a'AmXg#G*"XLrC$NL2XSUQ.lY-qOa#\1L?c)&e1lPjl13/KM-29WQ-I(-M0TCp:/<K3boa1'aACamdWC/@MbanP:3J%?nqKl2YO#3OA;.%iD$;mKg<6?B+]?k;$(i:eKub$n.^J`g/=2pD\LEnPAgV[Xc%/XYbFPK8p.NcotrdLdqlhH\Hp"\B"@0$.3=1N%&<<=NPUa3Iami%+c!B$d)tAYffH5l#F1iYh.&S?0E-11V.1&AN+Z348#3Q[(n<gtBZUX&n&>__$53]nPqBT<_7@HA1Pb:DH*C64e%Tt5fM3?:YAaV9$B:W^KeMnc9ZU,&Zrm*qtMb.T,G4!Dc:1oEfDh24h2"/*U!fL9aB#blI@-+hF+.(LlOq*Hl7Xo_9uA[#\2V6&Cl%k0.@j&'e7tk!_)*^4FTr,r2u3\5*/l!7'_FF,sbV6E;>mV@E86MbQjG1e,"Y_:Q]R7bTc5L.jEHCHrIcp_I#Z.C(d!an.hr*Ka"s%S9Z-\$cO0G%W[MZ@-tnHP(-\J)&*[<^.N(mWGj-5b)`MqFJMZ`#E"Sa"9(dN\n)Mm\YtE:5um@t#8b:%P'\0jZ5kKQ-4M>l-BTWd%!&^t$b6C&7@.m&8i/fhEf2_>/EGd>)TiW&lPVZF_lU=g,'Pb2F8+=JQd>%u$\LKZ$;H1k&[RpcC$;C#s(1jM>eg%l"MO:lLGtb]M%"O/H1B7UQ&7LFOo\V?Z2,m#csj"l,4XRsW/Io%eT#3,FeSOhU1<#!?ITt?!H!rW=Hcc.CBN^T'AL9h*%!K%+U*_4h[I'>ti1@_/$%+UfRc88Q;07GFM$6Z2gAV(4n!,-1e`$feR/1;nr9!rn[+4shSe*ufq3gcYR'Vq;9PI;E]7_<CKPZg2!b&UJ*oci]=g5#Wst-I?Q1%aqmG4W)$/++M:RpZ]?464uX0a=S!.\lnaM:]@dQu7jZo]X.!W44Gd3#8:kKMS)O)kGL*LFSd\q8P>SMV*+N.n!]pmsg)W_0?^P%)%0.Rh6Lk15P/GK<Qi\OR)1,p:UVQ%d?MA:`PiN$-TR0a0O.sO4MRQur#rb0e]i.SWP=d2pEcW,e;0Hln8Q)EH#e1DCL.-&fM.J*0*%QroA?+$p(A2aFO'-2.mIj;iJ.oU5a;R"FV:EgSk1/*#>&CUWX[07ZBJ*in*&c\4ZbE5UIRn5OuKnqaF*<R$.n=`WP1Ks`m;dMWoZ%=2/20](a*hOHI>\#:]1;r7<%]d4*AL0buPp;>3to%.acY.4Fl=N/gZ4=hH6e:Wui@\I\R+<Oc=*]p'Q\2S*="[7^3:<f[;HK9C2[%f3_@Gbm7^UmOno[YlGjcVi`D5eL6h6cB@-*72^9)?Z/>$a-\9)Y!P8b`84TURoQ#a@\tK*a3!eRK2LZBW1Ik7'S+39+P^[8FWb5[%Z8aM%7Q0g8I=r"An[T!!?=;ZnUd_qg8t,:6gO2q6TpZ6+Z:h/o("<s]3f"Mo`,,lLSHh:t)cq"NMTHFgk>^"<5-ZV?<WWB)REcb)%-Enf8*[+J83ND!iK1?lCKuMq3=!;/`hH^F'jFB,0^k<bNiXYZiOB\p?We8MD(&KOh)4R:@h>6:&*fOYSX`1'X[:(I'N7T,1df>EC%Qeohm'mnF,aFbU;me;j!]R60qNEV,Y@k6Up/;.+ir+Q"Ahkn(qCOj;a4r4a9iWrC`'>9IK<(^Mj!qF"mrG_3d3g#Stg<CZD4)JPW%WI1>k=Oe2!%aJPSlUu%@gol@"'5.&0m(=^9!HU$\ce*M1SE@r"7?=+3Od-Hu,kiAh*;%FoVIoQ)*KtuAi;Z%j\q[^R/Eh`N$O8$5%!,h-TL'Blj_S@Q*OIcKP*QLJ6mr<U)3EHPuF#/M<Sk+Teb)_ZE9n(1[)ml8K[g]%#2\]j(5l&('f+sjGk;O+(5ir=M*4RS)d5Qjc%J29Q=!tMsp$\W=hSELg;gW6i[^r"q=7bJ#je6oF1QWb^1pu='2-.nPL:)jiN6Zd4qBG*X@!,KM-km+J1L@1$tT6oh2O]G3Y:2_Q.%9AM^2a+Z*;p-@J=fn0J,(aAJunqH6M4@&<71J<gLea*EM";iI@%%[``h>r;!>kAFBINdQu$iAtgAZ#3Sknp'^P'X;jK-"hH'O)t,%p)Sb]0IT,DK-0F9:b<"^kd^tXOmn="7UW-lUjsgDRWe!=l:"RG%u%bbfA:mmQ+5Ti#bF?-_m.A+kcnWXcPNK>OSd7BIa/oPgM]qW%pHJYcB/jA`66GD(5M3[WO\t6JI3S+0Th,gk:'ZDMMfk5_5!^[n_;%\31gfN7Lq]DJq8:"LAO!;_C]r`G#Q_Y&L,d:[)1d`HI?S4V%$cO1q$e-Y6L-RGhpd*?jI[u&faD0+.`Sh1_/hF>D!,`b&H)U/*I*!nS#L-2b7"Y!l1Bfs5Q7gsJ75[Xa#OEBBX&VOO%Ph2m.>tuh%Y\eu.eWLu8TH_X!%n.9*/'N#OC*d"_"mMsZe@=GkVd"kW7("k;1d_rXmq_#TEDU0Kh8H?Q,%IohXLfrQC6_R=E*3K5"<T9DK&V\e%/e!`V550."9T@Y/'cgb/]W[BVEaRB/\kW^1$*^p;;ICLp@GkfM9G6D9g:K&=KRg.\4ZXUt%N1_o?XF&UTc3no4Gh%+Z-QCF'kb<4%kC\/oFtN(Zd+03l7:C;:1h20W,`Wt%+W7Lj$JqN^43n=i]dY%!n[a\`k29<H("MGY'MO2LL86uJMIV)i>)81LUuB41:Q679+m@[D%#i6Ct?4h"hdoBQQd[or3Z;'.i(CrQ%k8mh9SGe<XIA'uu%>/<,l.2mS[LMt]XaAq9B&pD,)pdPV>T=kO;M4Ql/EVLcq$su$jtF4;%;8qt7r<?@9oGRF"KlfX^6#[Yt3,ANDk23:&9SO\k:8GeuX:5(s[?T_d,US:RRf?[kFmk*4:N4$PFTuK<NOcKlP*.l?_jZ_*.3.3-%;*@GNp")Ks/<9XeH!;Vr*V"fn2_8(_d2&P=6NBJ?-r`IE@IPZT*>DWnemm"f+#X\\,HP7\<f=E5OhC,>A7NH5;uUe20'rQ+4T7q[%@TXiIg@j)o)QtC[K0^<ECdAi07YmB,h3fG_^8O`P;]!+Vl2biJ;$Ve#An5Vm%IF^ON*$J-@3XId6.;,oSrX7'htXb=1cne??8RNX%]UDp;EM4`q*)W`=S(P:Z/1j8ai[VifY/90[1ghT)PF<5@8)OF9_)[8lC_K2L"QYG7>&[M/+b-'iji%PY/$fO5kIlrnWrc8cFRQ7A%7(I,cVUH.R1HN:'F_Z6dR*f$b*(rW6<#Un\c]Qa'#ON)OYg@fQ-$bUJUbYnC>st0lC=lo!0)94gC*!F,^G:MjdIQ/"Q#fGtRX4ZQ%lRp+tgLI2].NDlj?]Nr)Fdc3,W<;;?>hl5=XD,Vg`cSE;84E%L5+P=2]75;%@O<)T#5X_B#XXDCs0[f&b`/9DY8]bLc]bA)<FEe,%TIZF2s)-d17$p(]kX$1p/Udh"Fc7i;%A;+mA[KJ'!VZ"CO@IR#HD,!@>c\d5DhI5);uS7anA#:R\fc?%:s5cggYb@`@J0)3'eAsq%l37dYA&7N=#1(-Zi5#V_Mo$MtPk^/SW3?SZbrgU`6G:e-;X>m'U?R>9K*V<3`$G<>!RHaagc]nTg'G6Q1O'CM#1(-:i5(V_Xj%bH%(Uf:h/na[(0itoV=G$k3=?'f]@<%\Sfaf-gNm`TpXpUM\nCiL"k1"Em#1(-2i!Ic):W3ba4Inno:=oF"J\C!fIhn4N[lP7^>;M?4%5k*)8EX\cBeCkr/$jnCjK+eo'<JZU`Ek?3DefHRC=[:&tB&0ag.+P.47LaVm<?`li<n5G_d$6mRLIKCk`P'p9Hd$rurV?Fdf)s?O%0p,t1%CqfjE[OIAhQSKSC2XftiR?U2+:Fs)c6IK`^s&KU*[,/1A3uE3jpV7;iY(]L6#6Sm2Voi$4%B&Er\Ot^JYImT1WkI-9>GDi%\EkHk\=rq471u$/qZ+kS;3IC^WGk\'GfDA8<8R%k^p$&>B_]JkMNK4J*jKR4hsX/>@"Jk(Kf&sKaLuEP'\<88mC,MXR?W^Z#cC+/%9(<JXOZd0@)3HT=msW.JMuA)0+7/n)GOZI0p>aN?(jY6flEHu[-cd[qp^5/E1,<3n<jIENb7r'QRl9"L,(``TUVm)*W`UY\G'Y:!%1p9QM5hoqO&$Q+b/``BQ#rmaek`CVEG`!8TN)_YACfdk&A*Mht$u+DfdMjeI=r-E_[r"At-nJj_iWdcX\Yl9=n\3#=T`C0Cr+Y.:%ao][pV,*jWWj3lXrMl\89T%!)LojPpi"/A]0)"W6=HYWHPo!D".A-fBA7G4Rn2q)4[otr9[r7L>mtZX8iUq.=^C4JLAO]o7jt)N=%%Oi,3dq_tKoe)2<.4A,pjpkUHMNuPC\P[/g=onD#BjB@+@isJ:#?[O`f9aCLZEj!?DLkp((!ABPUJ1W[o_`WV>fJ5ebPbiW6t^NW%'Yfa7_t($!DV]088'LCL58[5.jHWUncDhh(7`?^V?MQ7AI6OTrUU3FhJ&-*<V@s=5gA6Y%BN`=3q1p3nc43a6AMO1AD$ta(.h)L7%Hh\BNX%`u'1A:-Y%u.UXQ/Djh=Ac@G&6>RCEkooCN(Q(?Mdqu5,rFd7U=1M09S[<-MnfJcV#UX$?H,>VK)=9:pM2f8BTes>kU2b?%84VU!"mQ;'":U%LoIq(+1D!YWVPI1Y6U9*dbkFBJ#4O]H@-.L-Xej+c)p=C+J=Lls=Y;/F2igTUM<&Tt6\sWa5^bOr::tRZ)$P]5%1#9VtUbFDdk+oAR]-r19TXs4nE'\]WRdIUNT=9r4SKsUh[Ed5;&7W]4F%?u?oC^I?S2Ld$NNoium>V\IrGbrJFG=Ke$In7R?oTC+%WlW+$*%^C.\ZTfF:3SA."]5X3qD^+N=r)9[oJj!]*kVAeA3-!nm(2r/X)[ob!ed<^[g@mkD*Upsbh60%L5tXdVGdg?"I[2??3;i/%B2:9g(.F7[>JOmM-uhd]ejpiI>`"*m5XQM#4st=a5cT<o7fM,OXQ4Y:KGSK'FUW@`S0Tn+8iCfi:<.T@7ZoZ]qc6.SI2,BG;8!Go%&+K%/[JU,MXh_iD_p$dCRpK.%,o]2e:FG+koYY-4#UU1MMctYm27Q:[)(l\H#E&T#bVUTaAaE(BJ>,j[-)$1)+\"P,N(BF[86Z88%**+=1^aG8A#&u/P@JjGC$;jDg9T(_R;PS7,:UI=EaeP(u,@?JWZ+jjUe[jDbTLK>f3S@?8E9=as=MW5fItXn=fWN/D4'Bp_4VmGj%5+P87Ve?"s^Xt>.CPi8o4iCs9`i#%&di!<J>O"4eO(Hj%"2_Qn>hPf2>6.^giIfK2h]+-NMj_u36.n7+-.<V<*G,G0695D?CF0%&%Y%kDOPO<-1772nopq8pr,V[7-\ED2tU,?g]ZUdIo_83LobB#@M"m"<6_!MG\A]R&U:hGC`E),'Qd*<\Z+;25M`7[km\Co01W?]6W%PF6mD%_4bI&hldt'9:9c:?f=3+qo>:f4HY)Amj?c`D>BHFZ5U%3h6<4>kE&l'F@XM*kDcX7nO+72[RfjPcDT&GTN]rVR]5c%<q$A%lqfWBdfES>F*^G:cCFRd\g'Yr@tRFJT@,r-[mEAoUNIELqDSn7jO7WXjn,6BCJV2#h@K@`4Zms1Whej5'oU2k8(E4HT\@a2;qP0X%9%4n\dA6I6R%c?/Ci2r*N'qgX4^);WULfE6m)N&9>rB5m(rM?4#Ua2@[kWS!"aQ^sVVkrX=*%m:+D4Abbh7M\(d1&mB1s>e`Y;BD%puV7;@RT/n[kWS[EXgcU$M#OF>-s%mcBi(']0V-=b?4^3(\s&'8;1L;lY]5sPO(7rC3P=oU^hF"e44`YbqT#:\AkO_KnS3ko1&h!%Gq/&b=:c<q"^4-PL`mMM+n1CDj^DX:DJ,O^nXt[q"g2RB1/.hB)j!g46>DXp#[Xm2kHJ!broS.\/N>8ZR3WfE6BUWbk25X8"Zol@%hLqm11dZ]E#-.95$pRQS%L8`aA`KJPcc^<!)Ru/>&YsJOQfrD39r_.I'HOtHhQVt.3tjmS+>U*oPuHbIJ`mE@e/7SL/*Ruae\ICX%fclShE4U54je"2T8<tZ,(NdjP5#:AtZ2^(1,sHY/JtpuVA'j'R%W_IE)Zq=lr1aKcI3aXgo%--sAp$SrODP?@$uM7>;Mb<Vr;L/i%l3%WJ)bGk[_aX2b-Z6TLG/O<(bjm=apj3Hs5<P"`ab+2rYA_1=f9ptqBHoBngokP\rU@J-S?V-nia@VDp)cnj+@Tg.DsF9-:ncY]%O9U8.IP=k=53b.DW&sZFI=ZMJZOJ]1EEU>5%n\<`HiRnilQ-'121ThmKjYB=7I'AM#))UB[snq+h@K'EgFa2rTb]9Y/;`#k_t;*F%%#7[^[]:L4*A"D,#%qSn8='4)/7)clZE?M:RH_\cXV]iM'fsckL(2Vd"SEdM&C<(9k06#nUO(_*FBb'-JQ_*A\UPW&UO:AXZ5".o%p%Q^3L:n\1Z3f&D$'fN,e'GjXO2ipJjKLR-,mhX3j(i3F.olbU)Yk7gX%nZr66N'U!E5j+9#lQZL0h]r/e0TVBAI3&;VhRE31pO`%d1iq7,Y1Yfj]dt"F)Aq2Va7E"1V'M>XNoB)d2ZrrD6-<Z*D[SnFdad&g&_lWdMB";(B9;-;FR*t>F9!e6?_Dcp$`t9aC-g]qq"u<%s#QD8J9T%BE.sT(<Z$aK:XmG?<EQ*O'BEdH,R#p\qLIOoEK\mk9'U;]9DT1<XKQId_cXRlAc_&D36]]b+7HDsc9O'Z(;3OFieN-9%/D[Qc`m#orJhOsd%]4o^WR?3Lco"RJ8IGmW;W\9D':]HnDtG+H!=j_QA_-*SrjTJB*,s"LGbBtMTpZEOZn*,P_%A5M^j=Eo=<X.'%,&H'onmY#P])5!B*RUR+K)_!,,hfKO1pE[ZBSgh0i5Ec@F=ao1Oc[2/`i,;C!#gi<H40-Z3okBWOKY[eBrX_E6LW&P86h<g7^OCU%Bt2kp^(nM"^+ug!g][8Dn>Bm@Y$o8@CUQND.Rd)#>KQ`IgcM1b/Ylh0!cI4'Z&XOZZuPJ*mAaj"_rr<rg]^&'9`co#AQk'(es);.%;)qb7[*#ot9kht#j6o/^BlJ%__gT9#='bX0hcQ6fJ*UE*?9XtT^C(rlVE3ZY'p=g7IsA3,%"Ye8g63?r5T&YF+eDhU-qA*6M[a)J%`b*Y!;lnCJo6BMQTu/joBXI&+0_Kf<0/dS[2ITrmjaI9Z#-4D!;*Fh`-sU`L\O]<2(,Q*O<AnGH2oPT3&Ds5<,,C'3T1sSZ/$iO-%QmX;]m8KG`G?Ja:7jr!>+UK(IL:J'E=CI6BL6WtBc4dD-WgV).)9hZ*OVf\/)4\*mE]RD'<"jj.7;2laE46sF8CYq>eT42[-)crg%/]"74E<jK`S,#niK2P]J"V5nOA!Yaq/&a>,9l"`;Ri(,e`$A^&92TtoW^>a6XE>S@%?[K1>)ut>XATE9c:EM[#>3)PfIOsMIPA[T%&8jUhYN0b:_([#7<kjBllH2:B@Ynqih2*qM].2:m`Ad5]4,fj1)WoK4NVdiIC$Ebu%X@]nd1i?n8>rL?9*mD2>('g0!&ZS=Y!coS%Z<GI4M99H&TC<l;ps7'>3iR!$WcB@"09B*JdXeHh!Gfct85*hbGNq%i:)QU_oGrlCK3)"eB&TbYea/tp.^5:ldb%*cBAKY/FcV()%B&.E977+b7abk&e8'>WTHugP;p=.Yq`E\9LKVU,Ibg<YfG^`FaF<4qgkZ5K39j5Y2AY4>.$OL,5EYSg`6^M<q9OIDm2G8ckL]`,s%]$_0YB(ka\39@<TKLIC8bi`s2#o8*?EE7o%349N%5`;j[Y]L]IDPaFRo,/OI.]qP<+iF^Q>&dVHfRuVJ7Fq%+Z@l8iKq2^@M$G*t%,BGVYRmn4(%G;:%%C@62s-jH?OEAD-U6U3IZXn*-8Qb4(PV@aHQR$m'\h4`Pii\,DR[#H_!pa1`nK"]8%P&TrU-2MZ2O9t-bR:IP%oS).#<f%<egfl7c7<'&N_$t2qiDnNdXBR1OahFcZYpJ!$W+K=0j\VGFI@4/=AmHmSQc62^V<O/ZIc\.`l&X-%3$b#h\`dHU,B!AL%-"HXt0XrC78CSU%98`k-?@aD=\h$QeYSUT5XNlK8#kf,_]`lYR(Ye>>V@7R%-05?YSI2>4p**7A#YLr-JT(QDK&.%,7gK#_0e0H"%l`K8*?'sK;1\QFQ$>=Gl0n?9Xg(<o4G](0V>,<4^C*`u8F5ei`9kjoCn*%Ea`+gfO1GeZ8l[(4_HiGr!Zbl5(CNhB*>gAM/(E24K%A^L=j.bhoQ^+B!7l=4@'Ckt_?9<[o!Y9"5JB&hAk(WMfAFjCtYWO@b`W_[=pMoH@UC)L"(/W?_&o2<)+,O&Ri`#T+$"A7]c78\5,%<YS_j9Po2M[pPnFe$3#a)L#;NAGM3a0oYa?L(u<)8G"LBY8dlY==IZ$q9gGtSf+(I==&8j.]<hQAmeA[[$C`rc]>l59_Fruq_H6X%m;$ok;$36nKNr:4L87#YqYPP32(cfI6k8reN1Fpl'^CYe`PC)2n'>V5&/=94IOR+h;^*,BG:KDm@,aK)<Xl2^KYZp1&,5KA/EG5l%f?%")7q:_hoO&M3<[7-B@-g@R%RgE6BU.aY)5%tr7Eb4DM%0QE0XQXg-8gb.q#QMN<c<a%a?Sg/]-p&A5uUB_^2D3'P1jPEK;4;C%i*C*fZ:%uapM.SH85c>qo7l&@@eOWAcPUO?9`8uKUBaE6AF1<m5pc9.U?F$&G1l9,<^Nr!qL4S7MP&E)/lha\(*[h.j>UA$qM:K"%#2uaR'hpJ<;H@-U@:Y/3U,&jK/)[dW"V5^E,X/huj8'mh#5Jj5g.BiniP`s'(E;D!>I9Z)\,siQZ\i?0LP5+LLG<u!Cc3QJ!S[a&%)k"jn&m*7Hb8C[/O+h8A@FYm4<O_R$ZDqM-mMAZPdPTZm7["EO)b<q=Te\6iC%[sJ1s#da^5_eDF;8S867uL*2K8AIm0dE/bnMrb%8Z[m1!p$#)`fl#2Ng*J.r.HWD[hc^/[H6?r5aJ\hh^*;+(C)"$neu1D)ON1:j(/L26C&6(Ng&-'d@hB8GY8F9^Nfh1/O\r-`^31^%Ql<D\Q_d&Y/p]+\3^Dl>c@-M-1/Ueu*ji)<>)OQ4A?]:1X+m1LE5#Di^e6ssSR]Xo4'7e%o$+A&.]Ee&haMme3!YL]*9D%.li_"p%&M%R&A(1Z'V-+]kXsJaiC<bVEO&bh[gDHTR*_@5t<H)3aFi@e`)2?iQp)WB*V5&c2+)DRbHibOI[;ViWRqrR8b!]'r)g`2DPF36b%1OOYK;LOHrJT*S1$*nP]-E4%N.QbJHYu%(SFul$j#)2Hk.oh]OB.;Dp@u3^cQ@LYm`=i]Y`.Q^a:%oN[rm5f<`FOI=X\-"m*L:tO%M,%i^k+R&J95;E;-2*l#HY2!$GS\/)A].5s@-n"0UgD\X+aa'l(7&)j/#gaecHukg.^/dHE`fc6CL8i"`PtNK<lB8,hnE6J]cW\h%BI(d[!<YU%lc3Gep0<*W[;Z5OXqt#fA:s*##ZW)t>O>,8YFq5#9le(gJ_7\M?4SQ:95U7&d._!.-1bKk.1^?"am*/Q'@b:uL+erh%?eKVWg`ike_esbI@3%i)(98rX5MdJpZ:E.,I6SR1)asI9a/HK?$sn;#h07bfZHE(FfoG^'CPp84@?HR2bX'L)LGEC1P3EBFIWU'P%dbK,oL8'ZW4JeI26X.=%8s2UNXYpeM"]]Paf]q1jRlRZa7ft]b?:JKf=$ZqG3uQ8G(D#iJ[X?b]P.n[NQDF`Vjpq3/l=$,&X2f2E%6jn8#4jtp7Z+/6LCTR"7h_$d?Wsa.KE57<>!?7ugDrt3)>6$(-ck`'eV$qp5<lEOJ@EIn2pLt_;FrW'nXI-BWQ_F<!R`"(.;7)Q-%hGf`icA3#G2E)iG1?J47"`Y7,EeS7F1$dsQa%'j?/aE`oP$UD'[G'I%YM9tH%[+-dQbRl#Fj%QUkD['n]8Bpp55^fu%L1\3SH?:t%)oFeT@PZ>'Ju=km4/*&U_(?s]\7)5d3/8mL7^H!Up6JB_O-'=[NFBqRh6*bYdQ:Uu9P(:Xqmd]t(0-h1<"lFZ6AV/[(lkW@,@.sI%n#q@h1COF8*["(G<]^Kl=[D4'BjERRU+?OO16VD]]/9Br0qAJfPOTU1%p0p4+Xs95/4A'R2u[%sXn4HA`3O.i+g:$*UCc=@+'oO"%34)e"BD$pgASW=7fBN:@^MFoN<4\h7+%9R[E('@AH-d"IZg;Jnfj2Y`B2l1t]Ur3r.`eG+G(Vk&E@c8:c4IA1a`P>lZjdNkOW&>.%@G*INHSr>b`"90?#Jt4;g^d`HmA!C5Y[XJ<C+uGMUr[1A0^H5g=)o'kB8+#qIp-G+[_'5E>Gr(pqH-7rIB%aiVN!"p[4p)?$_ut@%jN-=h9cc#Ae^<6TX(\2M\u[apIqdG^P^XX.,cP;<5/X,Y!C0Pj\.p$-.Yqcq4%ncDm?DAnCMmdaZ=8S!S7D\qY:*_3I.iPE9.oRl%a7`^8BgWt7rNEcd_33ECm`CFWT*$5f_Hdr,:XUnp+uk]1&%RBr^i;Y;%!Pj<"8`C.5H-^^,^mW#]aH>M;sK&Y)GY6#Zd_XE-kCp2%K"c-hHJ$6g&%k,6SKk`LH-'-?J#G`PQ-UC[6*@ou:B)!BSgK_hbf)^k,8if."X<_)*%Xq8Mi%a>C?0rV9Y@6<*JEXr4@kea)-!X4%#1*_jKfh#&hE*!c&rR7++q8o4$Y!Qr6-TDE-^&1%=je)iAJ.,+.GHHr/Z4U5M#(5'n9/lWKS/2@XR@!=kGh!X&c`1rZfDWe+pDqR%;X:P6j^4;NTlq=(9JQG)fp(JjXGI(nR@H_FgW5;13E3+A(Ep.'FV-&(GW-1/fk[a`f>X2p0435/^oZHD<SNK4E_+^>XSWD>gO]q[%W=rMIUf6=*9IOR&VrPa&TV=3`$47""%qYEX._t*+=>+dt0A;(&G'=OC4I7)lH?ND%0*$*Iqol^iRY#j(es4Aj\"SZt*`XL8kBc9o%m`VA9>$A:N*nf0`2i->Ha+K#5@YDOkC-"Ie8T@I)#dRf^_EaJs;M)OT!Q/kC^gCrPlK'gFL@rUAEa46h5ae#rY+quK+6ue5C,@lP%i;t\*5-D`DLr#-f#_QC8O6_FgEIG&KY43dgU"SIp0)'`8f/SU24m\,CL"P1:NN=@S)qOLqV9o-/Q#`jN=MojB6b<fnK:QE[0+L*%%B36C76!s%$YnX[.pL,Ya<^6@^3ofek)J<X&_ROTf*,IjB&^CPqqi'inS8is2)qWK;St9p2Wl*BUiu7G5D?T[C?K'$_AB>`=[rDjI%EP?<,<GhZbY`;?]a:7HfSRKd3m)]cRf$EQ/=T@g&?4l<a&@=o'E0HE[Ms3qDU0;A6$Flq]4CSS)Ji19*]?0qp_X&Z,T>+"m7?8'/%nnm'IqdHM@/AKjCAqXo,MhCU$TlpY%?C>f(Hi4<fa>*F5IN\Vi0@dUX`m3n"]]kHETb+(0*EDOlLY,]c#@d92cu,`Om_X!K*WV9F%O=l,AB;>AML&.&1XCD?!l=:^<Z$7!dV3W-"<(g;lef3p"kij<^O[eEGD4SV(*&f;^OM'i*fPf!3l/@"(]SSU8$i0Ks0^SaGRI*^:%V;KYfrFTQBO#3C&U['jW2NVXY)oJ/nkm(KObT4be^LGPO0J`n>l^,]s+InFt$EAa+km)!s)OEh6^WOW;csklWX.;kZE#Q0bT4]&O%(j;m^D^J4d</r,\.+]0Vk2BFj.^QWCE3l6HIiRVIieR1d(;VQ*$ih?<DTpilcti1XSRDa]rudNp#tp*In4rI2Ed`[oBWnm,+#*G$%+7GkMG?,/ne(]p=Up"a0h@=_.cILZXn<0-3I-]%njEH6REjp/#9C>O:E`9C_$TJ>9o">bQ7;>l-8d,%;(UN[$PLrr=0iU>ioXckX%KnYZE,-NRrgI"q]8/=Y.Zn_0L*Q%pI<['kJjLfgKMZNI'?-96n4"RU>N+LG$aVUE,=&dnjpoZ]Bh.h6lEkrA+[^R!4[`BZP[k'q%%ZnV$a.]]p2+1.gGg+r&aoMEFk*/pcDaQWi#d4hMH]#=he2l3h[mOJ7'PC(O9$"h:BE'\t9AhsK:i'qVh7^?$ilad@q-^Ibq<'N2k%Ik=PW_RNsl;O!<"<(;u(M/l09kmPKQDB%#&#A0,T6Sq-Z1gmV[6^j7?^V;[m^tB4:Ou>;X*['7[:taT5ajOTo.VbB+/tY]7rG]hN%3?3hl];pgrD1QX=q_[jNS:T?(VD2gCZD[US-/kj6H@JM$$4#sP;-,74+ssa2dh>,LN2Sj?k!Q**A@:E%X?AF?/WuVHLR>$JmLt=Q%#q\bQi_%24>:TLjl];i;-1ZK@AO5e2f2I-V5T$+[C.`DA2T!?'daeR1U[H-e\lG?hb!R;NO'Q/ceU/[u_@nM$,G\j\<C*`<3-UIh%!koU@8QF1UihE%I;)3DN?c!OX.KHr_C-Z;AdStj@o]X8(=je-\CTX2CSZN\"r\VgD@0<9W8Y&i%B(;LQ\PA-V^&%!iDrlHkdsXLr%oV$/D;AFDg1tYYRP*23-NkS\ZkDIU,fG7J&W!`qi8P3T2"JnfHOSLfcZp2I7H(;\%=8/USMKQT'Z!Z)?PprG,E[9+ZU&)o&#@Y_P%M0V.`0+jKofmHs7!<YNTV7f>5(L3SX*nW<1d,dfpT]"%p<14L3np:':m)i_Y0WEb7r50KhVTue,ZQS(.=ScRa\Ztnle,G\sGS&3i%<hb]p;*PO`k/W7G([*p(NISf14X!N1MJhML5%F*D8Kk4:)YbP!XVZ2*5%(G1mt\B6Y1QRlb.ZQGgj:1,b1%^rAG];o3Dg4F@/`4:%)S5c$FrE^s0W'eS/1>+i*4i\UbW"n$guiJ:jY$($D_JT(e!eM&0%@XDq]eB[/#mXS',FX9+UFI#b/0NAfHj87gV"+78Mt(e7E'd!%0kZ3tn%4h58/U'!pVScoja$eDD[a!/%/76OR`SN*:VdD!;-t+`?5!6gRn7^(k^$*)((H!&<i2>aOE`6uEmOk<<YDW-1bJ$P[]b4A%'p9&07gdY0^5B)RLX6mn<D4tng7"O/AL/%U(2OPaF%GJnIdVqLjPR_?db,9<RikAgmBJ!lrlg07Q!p`SM",lXR%WtMN1Nb'X:^i=%#Y#)_2*5e)B3os5IjuO.[Zo/$\`trDc"OFINg"lo2ldWGcgiVp%-j2)mHOo'oYVXM5#g=8d!D>9esn`JbdD@c$G[1q`WV,D$7a,'%DVSR84YS7t3?9Xk`?tTACYi[69e7<D7)_KX!>][f`'AH9<,G([B3<^epnWEt$DNi7r>tX]8lKgNpD)FB']XJ4iQO`'&QV<=nTKlW%Drelp2^HJ9X6-[2%R"+:C6\ss]rTX.L%W0p**1%g5RF(PY=^u;e^h^W8Z?2$2&Pa<0P9g6]P(`%OE4E%+9`%NA-'3M/V]K+#*n%I%orO.K!4/%2?<404LI;`GE8/Ab%M_*]a],@5Mg"UA,VRZdkC9`DONAq0eVPa*nuF(XG87hsXM#ZCp=7Pu?e'aBd\4.C((<l..BmXB%h.Bu%9dNPFhU\Xq#]D9N%hGj`\A%d>s0AjY:7r=#4ImDRFqA-WNPuNq=eZ[:k]u/e77q`E\@cFS%bAU;HF*;XUVb5U8"CecSCAD@%0Oh)B(*oFtg/9sbW!(=-pUSFQ?\OK5FNQhHNf2?&6#*/Gp]3VeRU*8n!N`#\DH[TE!q@_p^JP!4%O*VQ%8*qhe1s&ffg@6kdoA+W%ZMlfj0;5[2Ah8bc+qFHDS#V7:S2rL`A/r#f(cSlS<Q,tg8P3#oh'a%E:.j2cZ'5q]iTSB$.B#M5(pV2oh[jhYFe<*@l.gBQ:4F+E%3+9&m-"ntgIH/:Y9&^cW$`'3KA]X='dfK_d[8OYQo"Z%\<fZ"=)H-Osj8mB^C),0!TbZG)BrQ_&4nd-=V:CaWHn!P..]L%XKjs<6%Ie#be/t<.><E1YG+Oh*:DoY//dn-Lo?C=C;SA,88RFF/1`9%2I6S9)rG?D-G),Ekp<Jqj!pq<=<4"n8s%Z602Z_2aU>rC!@WF(V;%N[CXG<(X)?q(38H/hCEM+C!NV&=(ZSMb5TBV/)0h#fJ3:irGN*d:+'DKO&!Z!(hf]F/ap:"R_L?<jBQXRYSU5]OR*pD.5-WpEJ32%-@s3#BG4AsX-Cd!9h0BucEFd8',EHAA$CebQ(U(U/m>6U$ic->o+P^NR8GlDBrF1)8bC7lWn'Z6_'9`'"PrKo^fHr^&+@@"Do`3\%h#1tFlG"&gV#6]%Ced@=?%+jDCDHKQ8T_qh0FqWBKW8U\`!bk"C9h9GPAE,8L9W"fa??j_pu/c\gDg\&5fipSS9'I&F]_"n<T2FB%+:b1+C/t`g;PFcP&B-kdVIC+)%Y0mu2['rS2Kk$E>st`@rJ=fPd!n-9T#$Ok@kJtXJ4>VTNT\pZ;VMij<n:7Dg+$O@6<+BX<EKd&%G2^he!AZ#)ZfddOi&)SY[GHKti+69XYi)r@"[>%-Of3<3!`HoJ7rt6]>$Ak:*TmC]]rah6JRBF?*uBu1's,:ggVGAIA!.#3E@@q[%%*5@uKPiYo3\"EQXADFjI3-]Y*B%mX7R^7oUJWUqZ$Gu4MGBt?^EKd6@,/N.X+Ers1<>N)%hK'_!i_#/nHt9rCDfFT'0H:<$n%]J%ZZfr@T\M@3Q/Aftb]uAYOTZd/M(+\kS.MI5MI)e+)2q3k9J%(e9@B''RPoC*:'IVa*p,D`?6K7RXJ7h>9Z;%4WL,q!bg'`bPki%4%7&\4N:-_ncrC+%cfE]St%tu)qdOnf!;tc"fno^R5pk3=,19]<bR:mLN$P9F5%)Bs&aYnJPWslqrn2@?n$Y3Ecl^`$3hhXtF&a6BT%)Os&JA2>]?CNS[g9C[pSX,UQT_kHJBcR%!JPce6Ba.ZH9OHa,V:a&sgC`tIc]k;[Z>m6B9$.F.^(@]V?"a9EW]u4B`bZ&dE+`ToC%\3&L/.*)UmM*m_dJaV80M(/;Bn=LJrIHfoUWW<319eeMhdN+/F[@GoD<YNH-TDrCJ-3Xka*_?!RbJ`Iq@&G0%4nWV&Vm,p=*(e8l%>=mgL<m"NF+`m5542^gHeCe')(iG`R5QDTKnHWI,dDhXkF@l6F:Z8`Jj$-LlF:(!iMPGP$NjY5[bnHrY&QpMp#5U2O@:N+Wp5-l'%T=jC10nu6:SYpttk&dFs=3sccbto)i7=g@@/Vu3ONiNLscZie4j>d3^IVQ.""<$NrO-uJ1Idmo2!e609Bq?Od+$l*XRYYiVTlr8^%M,@o)+QJ?:FD_@M\hl<p;,[%C,7"e=R[AZ,-]a2!@R2u^<73=:+6./W5FH"G0O!`G#53//<mL2#()dssEtqRR&WPjbkpb$84A`os%A-M1FV:/Nh#sIneQpA^kN7%#(P=3H>)ah!NT$Bb<SW;Z1["(KXr,>`bIGH5FX:,o[h2j,k#R_m;rB_Ij+L3Z6rU-[2/SZE(qpV"&%c>AJT(++c"SOtdRZfD3M20Rc&3_%W`eA(l6HZb.u](*e@B@bENVY\7lQSSE9et$bj\RA&d(c8D(,0]sQ\*KJn)E\5C>a"6l,oI5$%<Y4qIh>BItCYnO!r4SSYT0Vg2aEO^8%h&?/`$?m,LhgAlIPAV<;PgE=cP,0$IYh&UjqYMi``OdEV1ncB0aiK+'_+99rk+.E:_ULF%/6jl_n=L:q!jQu8R^)E9)Up?G%F;#4p0M3Hd(@DU$0&^$9'-4-$sXs^-^t';MU;MY6#^W%cdEo?OdFk9XNbdg>!eFo#bnU.=C?^3%TE9q[LGsD@(b3!J'-.pD-M=9m4pHPkF_CfUgb.O(Or$0<mVAP3!Wlas</LesoAe7:6gr2L<g6"I,G/jtl8>?&#d`_);O*:jlB,Lo%UtF/ZEi&6CI<+I?m&#bHZWtt&<!L>[(_(DF;o:QW)rPjA/:8\J06a,XW[=P[p(_=l_3QX)d%fTmAm\t4"XdhfGfA(t<3mM=0\D&i%Y5,[3;o]2b[QJ];GR.r<K;!$6dXXV=1)BO=(=^BU7@($"K"=s_&^@CD(?l^;P0<R.5![]UpVT(oU)fa0GDgrQMLp9rrtZR>VC235%f[=Dbdt7f7nDTeaO2;:'0EHhjN#0T"U8+Ag181O6/(&uH=BO3!.<B)G0@I)cA3!^+D63LXb`"fs#NbF=g]re_"(kN,3G:,Wd;fu-%3(T0)iVVqKh@?F!oS@W=B=pBl\-)hgOjd3-W#\Z(XKDg(V6$3np>?<Yaq-i0R,pGRs+Cr'ofZ@L<1NA]FfBNaT7gbj7&dmOS?nJR%!>SOF&[-A%L7X>3HB9=3f'B$QppD;u[,-'(*B;DRM_I)\M9>1-+,3'k]&9,7"\E<Ir>^d--l6A\&Sk=JnLk_cYY]`\8YlN?^^#g%%SO6#Q+g0^N`ic%VL]6.+XQWmk/D5mW0,WU6rU@Os,@!h1p6ud*o5>&VQ].NsYpQ>.'.>s@AK1Mh*=JQ'@BMK'B&=,C%.&I8TTd7S%+nolhha6d$XZ?-f5HMiL$H]ccXK'CT>@1ps]<V+Jo6.ffO@=EDKig)g_`u'VWnnR"ei2>H0+<!]WRsJ0(h@1t?mmM)](;)-J.sp8%a'l'jn*4`a3FtB-jSLcLA+,2MmdfRL[mZEk[]ZhhpWA%Br5G(#0@lOj].gTP=[-<249/Z,r@<X+OHI\#*g/1rcln/'7EF$3#gFN&%CnutOaX=P09bSU;F33HWq2Ck_h?R\PlQWjDV\&85!cH]`bF8jF+.GE%],Q3&O<"Jra,na*Y#4A)AleXY]0bI$VAn+2$h%<@dV:)a%>7Iq5E;rZqa5.sd.]7WgIlHigl6mMaeUL-TeNoqIR>%65[@7b_IG+MVf%nNR0W'1E1WVLsXoRPc6\98[dgati!EmINVYbLA6-q"G%Ak0)g*YA'\8=7[LA'E_3?uo2XqAi0XT?00[8\?crlJM&*9/dHX@As9J/.?Q5?u52U*CJ9PTA,onOeIhKm8&R2D:RKdSu.l"ergM4%)k5k%O]ruJMZY)KQ/t.Y>s=rZ7G+U?+AWYAMEr857ja!fM9]upLpcMiRlq$`L2OcW1`qCHbU5<JkbFBQVe<'0*J"h'a>N%jp#Zh@%()8?D=2?JSUO,gf,&"Dlj!b!GAYIU!bUm3iPRstMf*sGlI,/F;PJk&(FI@4P%^#N:,!Bg@LsVkUXE-,eb?!47r>5;.h,](Ar_FU#%d9"WiU+Alb+T*Vu\5^D$3s5iT/a,])jLcWj^qOi?^Bk/R^/3qms5ag)2.\liL<QTrX/P;QhM;'^#\N[EQKlktZ=&d!c-`oZS,\iW%e-0:fmZMAm4+'G+8'7VH>t,c2G@TPtD..Xh$Hoc`.GU#F\h*]_NH(4^2s$7%LosT`^SbM'K/JgOP,/Ojah/Ga0n+U,;S"A6(Yo5o%ZQVP_eY,s<B5DKGOlIL/Ll[qXE8k2=&cW<H%Hm-8:Mar/EA+XZre@NmnFt[XJmq`@\9-K#CljcuAbmYh)`@REjca7Ne1dlXp%B3@%!LVnn/qRJ_N?>%*#EfU6\a/mn!ogat7>HuKM;q4-VK1*JJDQ?62DEX'oT1]KPPE7,b3FPRJ?++"KW/5h[VZZqQRuV3h0?&"I/h6V%\)mkp.^c@k(=\fRZsc$OqDc7)*-R0XrT9;uK_-pP@0,#h@82s94E5g*Xmp3lmAaPO12JQH6Qk*+FNrV6Z3eihG;9f2VL*J4LEJGs%Y.G*XPeuHj>-ORGqXM6p@X!rC>=iU$<k_)80#+oI=Z8F]6"F/!06%doJ/J@YA8/>s\^T+'Qc%Ol.`:\cYb:_XY<M,KnAgg?$UupW%JNq?cQkOL$=L:,7!9VQY0nhq^qZHr'McD>=(0.V9Gn<ZdS&[Yufs4Eq2CjVqel_o0LpF?!j[%7Mm&i['i2e<*E[1]K9O<6e[oBOs%R_PM$bVh/G#Gi#I&>Bei#=5<k'rg\)9-i)$<b=qMfZ@/+[khk)U*CeoM3$!]+##2jMTln_.Z.).1Arkg#c%CVZoTY:82Va9nkH/t%C`n:+()OuS=;%niE`Alm`6!fq-]A/Fm&IUI[$G.X"tC+=-=4XnA!N>8&>cUoMORiecE0WY#V6OEd6crMTI@#772/a4Sk<m$9S6L=%;.0r85T.csO,JXjC;O))c;e"-,WVGaNS'[P8Jon5?Oj]D"97MY<9F_*XSSA"JApCOmaL$fmCuXmKOpY!-!7b2kTIl!]0*TL5d$RC%>o=Tkbbp,<O+pJap)qI*_.KBpYq1^F/)D9n(7Fb,<=`H8[B\GAELaTdEhTK!$si9J^(r'(,QXrV`D5K1@(H0->dqB<;!KM`S[D6^%#98B";Clu]DZ-t@?q<4B=/JA<-mVET9)3E_%7q26;@8h#OCTj;Oqi\J2!-Z[9I^6&kZF66(MfinX'*IR.5cu?l[6oNXNL[:^W,'*%AF(CnTi364CSDZXO&0(O5uso*m27rDU7Nb88tXIF`VZ??o_enn0-7UrDTr&qXK%KWN4G8\8<QWlfW%dWXK:<-_Wo:mEq_b+(2H`N%aM*)BNYOb7f6]sdL[(,F[L+;2OF8098TP_`Ahpb"q,S3!GfGKDDh)!=mka+oXVSNu`2kQZL\B]gP[]E@Tl2e^Lcm;t5DTtIF('u2%&X`5.l:bV95#5^H+>PNefT>+cm7f4\F`&&)9f:g4rO[J^_<hT<'g]>0,cMmb&s&fl"o"'mq)fM*leW0Hm\E(WAk6;jp2JZ%X!3N#%-&7%R8/ad#<(2SQl`*P-4^u]SW-eS_PK+kFeF4JP.HH5#]7%E60&FZ#'Lp'BaKRnI8EndZHpS'd#HXnY+j*?-;dsK-BHCmI<2*"I%`h8Yr'ud:$jO6KdHS,&Br9`6Mf__AEq`>tda"iP?4!!\?[<H1&D+nlf*/0BGc$QNt>^6lXKf12[6`-"&N04cf@FS:eFH,C-Uq7de%VbA/Ul8\=uh(6YT2/3fM67?B$1[qcm\.kb/hnP4`3JW10&_3@$82l%2jdr^*:Hn-dM'$IZi0iK(S(?dc1I)I#O`\LBE3jIkKAS\T%H`Np)Ao:s+RI$WfOIFVd^&+RQVfu@fOIm7!9X!PA.j4a,UV#smE:<43/X_ueZcBmW>N'8=iSFZ@'i?h?"c>Mqi]BAS\R3r7K(P!^%>BUSeT!@mAW&n7I^&qXnIolla_V9.L/7k"=<dW]CNm0e)TYdX0(NR2lk$[UO^jg-L_tM51HP>1Cm4T<(f%.^2DZ,OI(qSQ#KI%on%W\*9?rXE(4pip.KTpXGESsW[Zj+h2Hk8C-=%#AnaCq3(3;^k:<Ckm.R3*=`Ds352]Uc;S6N>%pJMV:p87$`-n2GT'1-/F#mJ(50S%`?Cd.(8da>D<UPVYd,hNZe1!<V?kDIOdRM;E'm/)e9r9O@)`ehCbIM4<XWLecqHCm@]KP_V.bD(?'a?eHD"+D=n"6^I7_SiIImE9%El"q0SR5KR'//NL#2We_CM7j[LT!Om)0DC2`F=VY`<)Mb\'j/BCq<IjP$0;YKP?@Uc`e_+6.\T6FTQso^DFNTo\QuNU7D^[@RMn%%PU26OAd']+Mqpba#?fT/j6\=sfTE2U5b`c[8^2W@(?=j:LEWU`eXPmi1WItAh2<GArY!jHLO'O)X0bpEI2,\dLu:(obV4n2PmNN%%hRQo`c_B0c<k)t$XIQGGZpc:T@AF4q.s#(J/5`R=HoJf@f_5h9R4Ir;A5RA,nE!0J;UTV\ekFM(?_sm?)S'[-\QIO><b@V/oIIS-%PmOnp-LqOJI5A%;.aeGNC#(=<3bG)F)MD?h`'-_X:l1Gn?<F-G'2@$21^hs7ln)qqkHN!)m[(&84LB0K"?/Djc<"=*mQ[c!%e*sr%Bc]:<cn+4("cf`$/]&s2K>Y:N51m=oap='3LBbqZM+Q!6NA,YS4I/]%F5?`mCn)$[P&(Y<1*d_PQ_f$K=_6Sa0V6Kq[]A8W2kHs!%Esc09IM`NZ%^'U0_;&8`HV`*TT"!H<G:KD;(FpBt6\pG,2teRVH?[sam[>!d/qjq@JQg<`IrfIQ0fI46TL=L1*reM/pCaUAaS5(`%.ZW-Hl\78[H76<(Pa!#A1qJF'Yu]J;Oak@j$[A:od(Q'=!BheJ]LH29&c$Sc0^/IL'H\o>okrYQ&*CS6P"2"ZhI!Qa%L9medZI5'%2?Os*E!L^p:.d92:J?4N;Y:&W_.$Nas+tS2Ab?O4<!j<>SSURB1RL,><!=T;UP5"AK6>ft.'6o'0;-*BR/e$TBSa-j6%9m8qVZ;H%SS0u4drF_DM/N;(UKlBijqT5)7/<oNTJFtDJ`s&Z.8K7MUP\Z(&Z-(\O-A,>(Z,K^/mm?V?qe21:b+EU:M%]fffp3;G@Phiko[=C%)n?k%WI[mQFX&P;!m2q=?aXQOHr+>neC'BBW[nZ3>=K3-@gn;o?C@FqrB_?1[I@nt.qbUVUZX&oM-1Gg0sHFH7E*^%+>Qch;oTSV%$H;u[^VAEXK6P=tnWD5VIe^De7bSE&P-[&&=h;S("69=S`>2On(eYTB@^&KN@j0U=cq!A__>q'm)AY/5dREioB.i.]eST.@8]sNN%>g4$3>9p#UHbQ<S6QKPf-$C$/5_k>3"JX;OP[VO<bLYDd3J2-D`(V)FZ_o_]!\UIV3@q6/UO,g8iD]Jdpi'ZLdb4h67lF7F`qSZ+%J$C;9#&6D^aq.utoS68RC_\)d(<L!lGVB9O6]PnFHk['h<`7L79sGd&LD5e*=]8]OhWF+ZVDD<RDW[OkgSJ/%5?Arnbge\BL$$rU%]i;cES;meD7Pm,,8+?iF$XbHuond4Y5%n:=LIPE7S?'[>WDY_i>JW!78492ORM9R\"W'U740+bI2fH$fiN3#18HnO:7?u3W]H5%o%g1G\^cCFiA6P0I*0D*$Lj"^EfMS`96iu'pc!2jM4H;Bp?[ojj3&Nd,oBV-";+]"<iHR`].Nr,,W6[;8A*[k09rE9kFJf%3-@]Lpt%c[ApZ>_H%SSTI?DYI,l_o-f8EA'>0Tls'jCk:1]eoUJAt6W@$E^SY.F6C%k2Xa5u>aEC+2"VD_^gS4-iLH3OFk-9TS?s.$(\&XZo%>gaF/<m)HATaL@kTsFjph9r].mnp:/"Kag3O\ns$'I@6u.QNi#s(Xa;6];U4:[S#G[J_Y76%elm4EUEb;U!T5=o(7aLRt7>P>r7K%p\KNQ%YU)48*';GjG^M]rdkkbPZ#%!>J-O]RgF!,5%.;YJ$h\LdRWY_TT=;>A-ifHZ+)&Q/*L_4`6^jf_H['pd"$dUPWY\)=qL]`%dq'O(=p$'SGUGZiXrA2K[$!u25Y/2XlmMqo)jt?h@8)Ar;79XSR*,p]5nq(GX"(@!67c6"qGJhtloC/$4V3[YDQW?](kqqaUdD+m%'2KTK"q?BFLB/nb&d-=pmZX;Q6TKj2P-#![".:Ya78Y5A3kkkIRYf3/o?4@eK)CoeR@J^-+On9EiK>KB^mJn7<f3@*>?1Vh!8;fY%je)=_qm_76A/OVT.g(Mg*GC(<rQY24WEH.N>m&6b^nBCN<E?,(;U=+gk)b8%!?$\s<UQS4a\X*Br\0_YK_m)Slh?`u:o/a:ac\kt%)tg6#h&4(#4Fb-#>uoF5]c6BXIh?=%5,\oJRfY<0WhfUh3KQ/>##mDY+9rW,i*pt!)e!30=\2`WfgFXsIksM2!,1BmZ=l;:=CQeY%1dtaeqbAY.^fR9mUksWp9oC82M?[&G1(s>\J>>gp:]iZ@546Z13b4/M'#TXiDX)Z4YQ_mB80ZA8%$)[!T[8*+1SIT:05GP$0m"L9%`.4)\LQ,sboV5Wo8:&^UEdgeW>G2kpR[Qr6S/Znor*i^IShAqc@UUB/WA-hYX<1HeQl!YRN-X?H.Kton[m<Ad2kYu+U:Uh$7\8GU%/N4/HC&aLlc-TP]P6VtI1/RbqAD^V]@U)$Cs4n`iEu!#.h4DP1]#o)KIZ0j^A9@AJbSCq!PA@QYKeMMK,2\dU1G"0Y*0hJ3MV1P"%PBBS&Qr/4;<i.#2P>0,1\)A_1O0?!PR/A$OQMLaj=eMJcrm7][f4)S41s,f0[(]!nhMWOCY*Z-0@1\]5TJ+GA\jM@bg:GP5.U',!%eF^F"4j0HJn^q.@lIdL?l25[&`B"[hq5S(26r]Qhr6A;0FA>#U,N@_\TO2K8isknT=0\9'ErFX,3%l7LaQ.Vp3@M's\t5,(*8<]3%Tp!D&9UBY:c>&sg=Qb>7rbNi8+ei0*YE'"?XQj_0GlW1Q_3,&f^7@79fhUJNG5:M.ge]PIFa=s$T%ABPdF[s#01r6RZ*tBgKZ3h3%!r8VMo%OJ(]&>="]*S_Dc%L_VQfqIOqWoMqeU?9J'&?10S\50[83Z"h9D#0nfC(#sMH]o%7$ft.fh<NcSVPrnYh33oD^LQ<NO-gb%9Ya07KYb*\=ngfh1NBY,R@p!a4.?Pre,+PL_3FWO2A=op8)/XAGI`^%Zr[*Q&HqEThb:hF9r[EaR5iRI9YgRCprrs>Rq)6<"Fe,c%Sr=me\_Jf(2T"-?YcD.*]gT=mpXr3touWf]HO5b7]u7a'0@;)(IJ+:I[L[g?J^M8ceD<ikHa#okhFk)Q9Y'O:d*q4V4F7D.ilgd:%i-oU^mj/f,kkDanh"IN?]`^.&U>JT`jQn0TVJ-B5]%.GS?@mk\EO'\5M,'1R^R)aZ:`\ZA2np^d:/u/]S85GAUW3*?kpUTTFZQBS%<1<L;"YBuE](>mi1kksb2!W^SShV7-Sp+<X4U4EdlsUBi]F]k:k,`VA5)sKs59Tp#DH-/--`Cb@dVj`mNN8G"BLIeilgVnH3Q$)W%lutubnG[h,`J3$C_.AW92/8`\@GH5?PJ9B[4\<C,i>F[8_AO?n!hI@1C6ohXO=,?jMoJ5CJbn9Zd'i>Pnbg2+BDM-X[-1@#Nk-Yc%(gD!'-l!GUCA"OF>e`Rk^JVqbLr(c'$p+aeIL9W(@+7\I.WH;]Qf?f(Hf#?ngN4p@R@p%Ujsa'J5GEQ]jUqC2c4[!f,R]7nleW0H%*qCA8Y56BY)fi%cOY"Pf?q=%mqJC2>`\Z]DKSXE%J&.Wqf<#RF3@A_3Gf#JPJ%qu8FW_DErC0-Qrf?cMS-]scBom?P5hM8\&Tc]b%ok05kj\bEmDEX4g*+frD+3<>[#c<5:lor;o=$&">qP_W%i3*;O#,51f^+%aNd^eRECcB$n4:CZ1Y`1%@dE1>cI$]7]ZNLkf%W)]f%,o]Z"L'l39X5]P''<93A/=%:KMq0%SND`JYNj&P-A>&GH^8?FH@?7tCi'X99Xt&9B.9\sUn/N!:(@Zj?4HNXWcsb&WVXYd@(17YN%c#Q^B>,jVu--Q%Z'm9bTZ52'r81(0:;X?_V`p@N`?\NOY`L[drc>G^>XHQH`2#@Uf;VI7])9$6Tm<Y!`/Z3C`m_J-bTL(8[=9hLN%3:e"3Y3OU[@Xb$nFP(<iEZ^cQU_t"l@i4JZL^\S8Hi*;J+T?96@>kC*[II1#[ld&C`?>B)>]_pDIGB/dUR)Ff@uCeeQ6Mssf)uPS%,qH?3""4%P/G>5pn<_[d.;hMu@`Z[gD:soZQcn[N\;nK/2+0h@O3P^!AHqmh'(4C,p[?_kecs5'6q2QbTSsKdK.%kI0Hf1@7SK1$%5cpgZBt&?IMq\6?J0PCfVW)2g)g(Mo/1n!Uf7@&Q>IW6Pf(eB'KlNRcfUaV'\Un\,8WM7+hCF9^Lkle?S!?O?l[HhS%?!D9rg'E`%;V#$W(1DMf''c\=Vqho/VVA].YU%YQSqQJL%"q^1mj1[TFd,>VX4aT#6oVROZ:W-Oa01Q4SN>;uA\XC"WQD>S,^L4XA;FHP]Vh>>%=8`J6+k\6?Sd5Xj9qRUmJ-0=V?q/jdqOgFbjC=(LA+?iH;r=Qp-Kq9P;qnF[3*T*Aa'PJ;(L??odN!.+FX<Ec-[##0nb7tq3G)b0%UF[oUaK0C#QBR*6OfWVZmP?Df#&O.V4XmC,]&/Fi92mjZ7`"*^nkEcNo1a[`\\eEc3;lX,O6Fi>BKq[9.Pj\!HXT<tPt$@/<>?Io%+TUbX<Ic]de#'c=S1!YJa`Q+WG%`%#(@G4Y6tpK%5/WQUde+k4r.7GpX8O+'\-ZeC*i7O>0V'H-VOIoaY]9uT?nW\8`".usb"*YB%jfSq;6cTEt0u%#VPNL1_ot""QeCk&eDk*fb-YB];#GSMaXo&>G8?J_<oT751R4,.D8uh9SSuUoUWu3`nOi/`Xljr[aZ`RZ\s!_(c%?U0GFiUc,h0aPNCNUI.0-2pW%[=5?[ILFRfZJ*iU<c&9\M*iUrV0`,1ikJrT4")PY8.WT(S20>rr&&U;ZaS'\oAGi%G.'E:QBG70%\:)LPO'EhuU^V`QZFXIl&s97^:AVM=*KJoI2$p;GW2Bu((c4o>Q@)h#>d!,i@8C7\9C4I#oGub+?)#WDNG9&aI9![0Audnen+#_5%Ym:?.hFnR%I:*Ja((Ue*!+Q?Eb-It1PW]@I%.%::TK4eFo(hGe'IA>@,LgR-dL_57J=t_$T*,Dq;=o%U<WeL^Xb%Fga:<Aae4rL-%)4"eo4UGsl$9PW_q0OjLJEp?,(-jS(GJd"6c))cNrjL>aWV[_:Aj"4e\>u']6\/(&QBnmN9JkZmR:QNXHk<?`i[Qug=RcSF<+he1%"%KiG-Im@4m],jX8:-OOa^HJsF9Sq)]7PC^2rg:F/n4+Ns61=",AD1"T))H*Q@Tb3PgS-Q!?t1o_\0:ICc#@+(D8C2f\[nnfbLJi%L6Lr[4d$ACT<+Pk;4P%:V/U+t%JG.uDrK?=McDRrClX>^L.QH>l,FELj1%Cp7":L<SY#)?eceC_&D@T!5(%FQZL5_k%cPI=o>4fE%/l$g#K]A"6Il4N-.W@fQm*rQ:J<kq#b3kYP@?peb6;"7)HF>OA77=16"gM(UC$'NXP&q18dFUbYf(tc.+A3B.%K=D7.L?>sO-*/%%,Z4&[me'D"m7+$g1[`gr&6ot*gQLf/I)Ne(og+DjN[+K9gL]?U.6_7e)Xk)g`dj?g8;$lXU6'BOq]+h"2:8U]"_A*]VVi4*24,`P%?<E$[HFegL6-d@,?u'2E2n<6BeV&&1S#B;Sj`Fn]]+*B4M_Xi#Oat;NH2=GCY-`IDl\].C-@T5t/<B$H/./NjRU92;j=DkmAo!=1%A3'ACJj3o62HsFj:9g>."ffh:o[>5W9t(oTp`F;gh;SK><R_+SZO6oJUl2.i`R;KjMi30K/K70d\@<(`Ug/h9KC$RrJ_&h40<4Cj%/rK%5rSjPnW>D,U"iOUn%C]sZhk4b&!EoD=^4H1"e>HMVJ9H;tW3%[%3KDnS!mL&-[b.X=K:M&B_:JHl^M#2PcB"OX`NIWq?D-#o%`]LTL>H:>*-lejsMDhVJ"3J$W@7*NRqmo'9D51nV/fs4e=<Z;@Dj!C:Si?aJHtJi)@=ADIqIo&:8\kjb$7Zgpj.=-,YcUTeblL4i%IJ>r_6J6,a:d..IY1QGo#8-Yb#:L):6-]PN"K3@rbeceX7iN[]'7LO[Dd=I+n4Fh!jeBETW5WN*E>cdH(eA%b8?-qo+@lRND,COZ%(;He(!=?IdE\n%p8NA2X7;>'8?U]s9GiIMoe.6F&#uuHsSE8OdBZKq`c8u-ILuM'M6i,shgo>EZ#=eLl@8)VP<TEt.!&+qU_81r_%VFH9Y>ajZ"9Xa(p">9sN+I.5JN#"$iJ4D[N[]p)J1E]:6AtW`P1."r"kFdVWTS\@HTPHd==f8dh3uM-#,R5g*)"R"-brqn.@Dq,V%.Jq#'3tW_qNU/,G%UKpsqN6TDJg`5eBbiGPQ0)Q8mm>6'+Z9:!=e\)^WFQ(89`5qa4]*aLj'B'S![)n:<IifP%S=eb:q;SEOH2%m%p06ZeURsJ8T\3;d!Ko(s*d)ndI]CX9CQ[C\,N!]8,PL.PdM=Sbf41?h0lTWpasr[5`b_o_^X[oja*aI,`k?s`@13@I>IV("P!q@/%C1qsn"dC9`$oN+t*;!IJf)ThKWC),;k7m;`p([)/B<rBtC)eEBZ*0cu[C6]F20.+Q\UIjng5N&F+Z.U@QbsF`K9q@P7gTG;n+6t8%CI/LXUj<SPJYItpVe0&mL>HIO2<J8GJpe(2Oa%D2GHhV`U^DF7ZLEoBGDY&/g`CJVrT<h/'G]MVhRaZC*`LRGA=#^IZQFC0$X++Q%[tQ]Tg"WZ5`2Q.6ol0^!Kj:*nlQ6BUEX2uFVNiqGdnEfQ2Q"-jC&#R6Q(,eun]ETGSN2f])RnDiTrTV`EsToCQgEjKT]381<6S\L%Y4%]YPp&cfK9\<:Z="Qe&5(&gpZ7FOlI:U&gL`6L\VG?X.V(_S_;Y1#5)NZPFlN[b9NQ=H*6?P4WYCI2hZ.6.*<`J@<iG.5iA2*?%o#G?J%6%<6X_1(ZGI#pYfcV@l!?9&^aLH6FSk2gc-SY?7/<!7>LqEk&gk?oue81$p"M4p1L_J?F_`@^oo?sH[&(03,nOJNVhkt:l%&6[ET"]uL1ma`Npo@%UhFX^X([t9R.i6/`4oiasV,(31o7"/8B1%Lj4E.aU\%j@_V#Xs+u"tAXaibI2KN'e$Uh:aN4;ri[0l,\`6%XQn%^C;Ak&RZd0Nf!l.1YAGIX:nFbOjs!3.MrpO]k^"B$^7ik!1RoVSf),>e__hD6.WQ75ePgC,j*@5.V*.aklpRt%DQ^aKm^5#B%T6kDqDbp$Pi)[6$!^c!!,)Nf-0f!iI(l>GF4B=k7rK91_0Z:j31O@4Bba>=DDliX<Kple%fMCuNJFCGaonF1-];a<"\/V;p0chE/%_rbp(pR?;Dp!!itoTfG,2Gl_K01"?8R:JWnS>-0hqVsOAC0XI2o(0&?CrtA1St[:#ZkLh'4gGi##K'CM#Q#[hGe-#737Ye[=uk-p%WT(2G7*'D-*6Z(*^A$l_HjXkqR^>oV\6hUA8"eaQ#CC`tXDc0XCf0eCg;-X7XU"[`qg4CS5D9QM\[K39]afC+)j+rI_]O0.<4b3.%)VNaTo#bb&hj^Fil6lC@!_DaY\2<Q2P<2*feQ*`Ne?IPsG3Ob/6B`oHEuXLN`7"?%RG&0$[NVb@n=m@3roHmmes[g9F'68]'`J:Z%\e'&/Ui3":i^WQWF7egk_KaOG%PC'7eO-_3<6]V`]5FanKaB;:Wk&^mNZF3-MYjMf.@)bb%B:L1;De&B@P<.(c8O1(;@eSC4]-2n%W;>_D>AK?rW0V!%n#(-(?p"\BrU?sU25B%6GM11FOB>@H2(kA`P8_#U`>a.9)a1T]7IW66NYUSGjkmHM]r;FN<hQ%=T'6PsfJ%Ca%+Cen$p.-&>X#ri`'YHuc%&L?(,#S/4bZekGJ=,W#9`'DB$&G]ARZ92o+dI./$i0Kc0^SI?R%;eKg=b[eO6Ou#+QmGYmU7k_">9&[%)V/B^pr$VqrDMcjk9QjV@!huBRfUV1V6$l^=q/Oi`@O@QDZJBMAJI#F#eY]?G.j!0(I6E<W>31:XfiCkC\&c4mTH2*F+m@E@lqcV%Ne[LWbcLJ`Yi'NA[$Cm(R"9,GRVp[XLY>*RdSMdG+]tAj=)8;/+?uGXm;$83%tC]/^\A%&B.@Qb%CdmJCEga^b!FTNp`N/>&U[6a%/]g2jCQIP-q&T3h;LjLAo\6Oa)b(d/eKS6lg2E&W4!GY&g#5U1QiKD;So'R$ppib8of#d57\]W6gEU\5NuqT<kTC@[en>N6'WVL$%Mg?t?]RAC`.V,Le\YkfDf_q;$q.+"4qRO<<hfXND:YX^Egc]\!!lM6NBR2]#Cq6(/HinjNRON*Y_Fh4IE-%T`]AFr_1`[KWU5'92%_uII5>j!G\E&^Z]`]Bf!d%K"R]?j=`Lt*i-TCXsnr"&-HFpdZ/q!kN;&SG5sJ>-'7+!<:_0'FckNPoTu8>]'`h5+T&783rT8ih%1%-B^EKX(NV["hI9J&Hc<;RfBu'1)V(1nPf\FTA!B#G`B;BlA#+QpB>n;s7e"2Z^eE5KeN4t4kO#p,kX#R=cl"K68bD"=b$e-Gj<s`%[ATR\OIlu&&u;DDl;jOgs)+*W*=#I\0"?"u/HIYN7JNG4#_me*\(9mGQmW/QQ>2IWdKL^\C=<?2o,.,r[)AF'R+Q/kR8%o23\HD!%:!Upr2/0WRLs3Y3`Gk!k'S4ugDC-uek^-0>1p-/]_H`NVCrTp(!;enTPX@cu1iuN:b/h)4e7@;(Kc*&OTs5pu=U?mQ/`(GjG5fM>%a`X;4!_+?sJY[E.NEZe)[@03t=[-FR/JaF%gH";g4d"^Y]'Gd!T/Jnm%#&><6_Xj/;BDZb!Z\#DTF^3cf[#6dg[TP?g[93L"br];%4(=V'+PGqcOg$i5\ml'dfgT6YQ!6T_W[O<MlIGJg*\ZW/(g-T*PHS^WWan?gH72Fk:ac`.1d-'=H=(TL;rWoY6g5`Yoo0!7B0r_o%h>jcRZ<uEA7a;\hH=9i&VWh!'`gG4@^0S,^p3N\&l<O+VJ<4*pRN$=V^4&Xt-k"LZ0e.!L5UK8aTUX<%S-K[PlI+Xs.oOC!n:1oF%N]"J8Qp==R!KeL+kJ&1!EDa7uRD9IR+C`[@9`+gMWYAun`W:S<_*mSQ>qB/CO2E0?U7,D#<(]*eI:C7c50PDc8TkfV$j>U&`B)e5%]<L'Y*;d<W$$TrGGY/F]#+g)Aaci;r=8W+REgl,?c>Wd+l,ZkH,M.+dcHI)V@[I[g_0hiS$H(qoOK8_@)WXkV(sJ9M`fpj3$3A5%%k?h5[,sm1\L(%<MI"*0\S"VF=o*6hUPulou$jmQ1`0h<M@tF-V"pjJ6q)r/H?.Z5K@b:kr75#l$%N7C8%HS`K@O>qPqPV+a2!%Vo%qERtX15<Q1(aoK&5m:-c`uh7cJF;A.UM0Vu)Z!>K7XjV`lGck+^C5kQ%BjLFJSi:o?&/FfgL[8m?QV#S"$Z"J>1_*Z-#=6eM':Mc%_&Gk0#hMKg*lX,Ka-*^d\.?DV$^$i9X=88V<pBADmHGhQ&hoC$F9,NGnrLEI+s]adq!$e5ll'^s<f.g![Q+h@l7)h5>j`GRmB&U9%d+Mq.\LBi68*kUNV:Lr6DlcR9/lQ8Y[l_%cpA#`t&IADh`!>C+1P[DPHi52?R-(ZX(KF@[M!8;D]tN!*qIGHBG[qTO@N6q6XPfRm%Na&6V!%>>1Z#3de\#\,t?4V0A'"-O*nT30ecC`"Qi%cQL3_aF2@J[9$3hV2#cC$/e#V\QE<sn84nj9&bkCGAGOYpYPG+a#,d^Psk%g^jfGs*csZE#1n;?nNMj=ZfVmQ#+EjU%XtPUa*C`n:rk<]KS@nMX'C;qF4TGrS6f6M-8N`K,#\2Mh\:X52nnp."Jeo_OtLpKu3/9%>q>LD+!=RH@%GakBpG)(Q'iZ5>rT9KGZ^3BcD4$W9SR]`AF-m?<qP!5IRTQ-mS=ROEq<"]J-@\FY^t\)\lOJ8+K6T,f*s<C#Us@D%1fiED'&7nb*R%^gFMd\3#E1]Nh%YDLOtI`):/]chh"43lMWe6%N+NgTM,6)gHR\\i:!;VQUg_,DY8D$q=eTZk\#5Bd'B2`W!n1Q/%$F]YBUrPdUMj=m]U7C39##lT/$4[r3kkihAkXf8T+F;X+ACA(-<ARJBPTYY$*$C4V_ZE65E&I.`jY.7t<O,_f[4OaU_h8+HSCRK=%\6lU>4'i#[P!$(#MZ#pb)'Y"q376IN;iL6WqG+IE`UY3N?tG1HJJmp2OO71L%"lF9eB=h&bN1Q_H%=sD7ikjuWEeL`PUUD(q(XcS%i)gt(M\*D_VKWf?&.;0gL=oZ7AZ<\61(6/[l7$_S8Sr4#$q1#pLiTOrT+"dpg@uf'Nm3Z&ouN>2LZ#a<`3p`!p>L^$:$nUVE=G8E%.o<g3l]eGDL$gqU0LNNcC7IPg%P&uW1@H.t,#\Y[WLTm%i]6XSIIIZbLQ=_B:@eAFYc+mm(Z1Kj(H*L0^k_o?Ooa8EjEG7G>_p$B%#FfK%;c5t6VD(^,k7((@U3Y9JlPPDNN(%'SK7ado,2A8jKYn$&b4\^XgI/r;n0i<-2.(.2ge>/tAHm83qEisdG-`o'*&uJEg57Fh%6'KHiES7?='A';;:BDE@*bI0t4cqOm&V#'YY%7$b0b=[!I$qm#YT"Q1n<(N=,AQ:l+G'X7g_V.X"SR=faK['P7L<2#V+;s<^1&-?%oqFSP]an*>3d@HsNbN!WB^2S4k/NIfFsT-;!gEB2LDaC'P@?Q(21%68)q)onKTB&FXWEmffiL1BBV/\ooHn=,`bE2#?HZ_!Pm_.#%L:9U#kILpZ5.WAK]dG2f90?"DdhZ0)71OG*)?@NbP6[>:Wd,?n0$#&-]acTA=FgY:.<7WtQkj:#*-tHn6DePtgp!!4():)sP\utk%38dY7>uU]>R.oatpFl<6DPp3UDG#(AI2jJhfq'uskI=+ZokM6&(QWp:^`*bNE)]D@pD.U.:Ut^\.eZTuKOJu)@b-j';d?Q/T:>LU%?6:dW.;E_F_U"HuqAK<<]C&N/`-=$6Vf5n5P:_0=<+EHeVAT;*:4I*k==]i:g9!'Z2=#2e)ci(j#926&pR>P=S<9?!bE`_a^K%D7%TfMa&P'B/"oA4l]Z/GGGD[R'E99nY_;F)e5R4HmFi/*mLm)lpk;.D+_'JA"Z]3T5/6((RLpKXUO#D6THFh9EU&B5YV58I`c'4^_3%/'`DLh%o"qC6)S_DK:!RUu;",7IPM:XJ<V-3Jr+`bpH,)5(A&BbgI)0,g]U4$MQJX^I[LJ1D$2hWMJ9f!Ko+a=.H2>4msG:^udOk%=1Eu41.&)$JqFmr95U=X[J>Nl`8-[22n$^6ZH#ra0=mDf>HZLo+SuKP7O-qUSe;1FHM=gb'EN]?[b`>T)b]bq4>i(n(iNl*$16F-%/-XW^bJmiViW5Td/9ro:\EH=jD1/j>^,rT))q/J?qmSeF\\/6H&m*-R`,'Aj_m6V(oSc'pg@gk@d%G4&5;6nThhlkJ?)#OmWT^$G%m-ID1^=K?Pri_M:YTBNP)(rjHNr;JLFK0@#(@cs?]NSr!O_6CVl,%m(;<%,#%?j^\8W7pWZ,,rEhHiparYekAQPZZEc@]A^Kt]g<%$3-72pW7gk(G/*k_h4qcqu3m'odN=i+f-_F5@-'QQgKnDR6Hnj(r]2EVG>#c?!]uQcPqEqPa"H3AfT@[\d_'ROfS=%KFHO!Xs#e<%@G:92/_hf?4`Nn%+P$]iHI[*#YWGb;]Fi5LU0hOr4=4!a+#%[HiT,fa'f8:7;O+0Fg^W5>;<<VmpbH5=!2N'tW%X*giGqs[pWOiV%AM"cOKnE3U(h!;iNCa)sd3ocF/)+haZIJbMM*X1M&P+SU1fOrLB<"rjN+":k[4rH[4F!]a4cGEE@j(-_OdgoA!7dTP>OJ2X4@4KN%0'MNpXf,Li$C=#iFB'GYQ"#ItN2]O57naWhL/A7Ym>K^>nA<GGEn;_(e50;g4k02&rsXThdoRmrVW8f#b8V6c.NgS.>Lk*[3a<u]%AL</gd%?I==M.Du\ru19\gZNW=)6A%W20MGU"(BAbe&"O5oVe:GGcjuYq!oJ=H*1l?(YnhOsHEIHgtoq8n)qdU:jlmg"hJV3C\#<%ce0q@k_Y/,9Xso.b]g:`K;jo,g?)e_Ad7>mIN'W<?NJ$N?OeBEQSjp"=2@',]42smOk^$RY#2bPi(soa[C:oZTT0gCYT36\c>+9<%U!Q9!V3!nIFeSmkKgu&j'@EpL0]*(p/do9o@5(RN!Fj0F\Re-&f5,]^*kn'0'e/][<-(N9=@K"IModaomP.j\cQJ3f$gV`;ASo/P%d4,j7`Hs(hpfrb>$9qRenW^A)='-c%R;>Z,[1ObH&1E[KC?=m__K.]6!@@Wf+@ViTH"3[:nuW-&rJUPGQo$:5rs?<*55dFrX0SC(%O5&E\0Uk(M733R%q0Mg6I=G;k_sR=1e'1q@a%#n#1ZjYE7&'R;\[%N<oRu%8rE__>3b".\rj6FRYhLg$"faarkEk5UFj^rC[P[:p%HUkjJKQUukho\,k<<kjjb?coO@`Jfth^^2k@lJIE2ak<BSoOKS"ANB!KnUFtBqsc%kRpSl)aj(LH9UAD'_&7h`D-:3ll]H-W\$^X%@DURbg(P9,c$h2s\$=<^'`r500P:$bdTEuM`Bc=1%)7IO\/-ar+UBk=o=rT;$#*Q4c*PrkBd8F:D+_0Lf=m\r6G,F0%J`n7AUpCK%fe"TdBKfV04TuF^WK0]901'K'dB#Q)=e@49FBl?#VPg4r_4/m.4joTMXE#8<=PiUC]^!K"O)S^n<?t9Dg_6WT2Bc$/e-t-aMlMJ]%a(!9S$^#Q\Oa\?TjS=$4[WF>PK`s0J[ksFs(RCe-f=8oQkcI5@,0Bk)b'2Hck9p/!mV5#jLDp6KTX2]<&`]G<`ZU(jD$QDqL.1[j%Fd;=CM:qs.PA#mW%<;/4._Z*1'^:IM8F$!nhnE-G]cLq"De^H?PRHcB[9*A!fYi=R7g.2l%=XXPqC]c@D@CY_f4.2s%KW@\TED.p%30r-^n^^#a9R;T<Er8s+U,\t72HJoJK6Z[h:uU/afb"WZW_u,?&HS**0Enj.,%UEqrpWoNZ_@q><-)X(/gb@H\0ig\UAReCma1bj%&Q>_0Bje`<\epWA2Fa7A>(nZcKu-lsTn]6$e^4`VG7`C39G2p$_TbqB7]8;BdGIsJT["d2]a#]Wn@"SKa,4&R43l_:<@Ki6dPZ3H%ejGI?D-7g?e?_MkW>``#'_g*RONi&Jf>3o)9m)-SARL.`8n_EY,7_+5\HQjV2h3Aj=B4>`?drXGL4JLNC6p5h2I4Aok,^rde/B,*%VaWf'D')L4Ikk44,:t,s.WXK;h[k7CbN/IS&MeqLCHLo"L.RueL7g`\Q)TC$8fVSAhOQWZYtEKf):ipsXZ,oJA7G5TT53#uU@uj1%<%LJOP@or!-sIMoPC6`#)Bqu8^@sb?OGY`]HP;dM<h!,q*&MCdaNM['9gQ6FMq,FdT]qj%pWHt^c(gfa?<"j+j*iTK]D,=&Cfai>%GG6Uj<dAI@mbtsqKPcqq!=s?C5bp*n2Z&4Dh%ZVr23I(Q@IC\+,lVHC$phu6Bqa=e.,GLPNSf'"c4KX<*IA&AVF_:KEteIAN(:W%%_f!.\D0f\W=p^YB)Y9[q=1AHr@E0iba2o<-Gfs2K@gSiLXU!QZlJTL5P_\eo(os._$?^7Te(a\c1VJ3a+@#gt=_iM8G"8k4`q7pm%d+]D!hR^66j`/C+<J8S=4uec/JB!okBYf]Vg.5`2]n'KHL`[&A,F&co<>>LT+G#2Be-2;3Q(]W<AH7[:Ir)9*PBoJ*)o$9tG*)1)%D2>kH/@1ZFV(,NeGD:_jkJ_AsVLI3<oNBsi!+/cCi*\<F6)[2[e\KDRlnR[&K/O3Oi%`-/"[aZd]HQEd.-IhU7:sAp;p8Hcd)T`+%1g8Z+'DO_MH-OdB^dJns/6)0q3M7eJ:-Z3B:^mLt-(6?('#C&IPjru6W*cSMg-i`!2S)OpY)c(nSJ?qX4u@pt)O-c0R2sONP^7Uj%SrK:\jHMf;`lIuK.j+p6[gA)b.i_f2-tR(NrISRI)*u$WjOj1jdHVpc)iNAT>j2+1c>j>-if[+m_f5MiF>Ch^#L4X:7chr24u5Tn%q9,NXhHjpl)0L6FA'/]S_T+A2hbA&LKT3GIY!hC:&.(oUrEN1AQ]%DZ)T7bg#*%UXVDBI"J;:*YG./N%]Pqeu<>/-E26<sY&4<hF%^*JUmAB(h#E)p$*=uBl^Q*'G/o!gj"i*4md0J&[bA#(4+3(9\Er*$48.+=7%@d@?lL%=$6gG6pKLMP$a[LOW.l]U5M4V\]0`]%J"%__ZOkSSQG`a6n[f]?/KUR?ulAo&6Sjm-9;eR.&=I2K^Gs/V_FS`!QHL&=,_(0'd&&EE9[cE)9E[`%DBJYA4/o2(`LFh(OdG(,hk(%GJbareTT?lBB;%BI5%oRcF@kmg/n@G-u^X96Ij@>XRWRI6d`"V&<b[JDmmGU,Hjf7LGM1SnA)kK@pPkrWZkDB)*Ham\85P2LAUIr%6\7Ca&TBJm`d"]DYt!5;r66-GPj-I3W-GF)h9GIrp;AIO3t'lqf[-TH@l/0QH,GNH2E3:tP#m#[7#Z$0JM-$^I1,Y$Cf3ZG`n^;'%EP^\G0e!K]W7"`C*D23ZAC3m>-\lPkIi(H@ThT1YhCKW;hn]l0q2>J^gBM*qM+c/kB4q0O4BM\QjZfDC@X]j&!EEtZ<!t$I4CdRG%5JC+ScSH)7`K#.sjdYkXN*laFg=S*@E>8mM(P)c=AF%sY%0'.'e1':7H%Pm:`N&2)Q^Ge1dtaS%,`3:VV9@&KK,?DOar*[+</!7G%)_\KcN!34E!J)#p6tnlm+uZ$ko.Z6m#jC3%iQ>s](:7&CmHl?!`YK`YVkkD\?#M?c4#\MK"%HW_%`l)M%&dYugsDMlA<19TO:EJh%l3?0/AUJ%d\7X;=ff$H.MCV@NBD/>Kjha"NSahe?3M\/3=60j+3Y:JD0L^%OW>\1(6eVUuWlZ4uDJOM)6_TVj(SL+C5*$nU)j,\U%cf>!=n,A`N_dI]r'8CM^r;4ZG7[s>9*SRaLVj%!KNrT+\%ES->Xoc*;4&o?Sm,I[B7ck=+f+qm0TaE2Hf#mema_6V_F3bPY(*Y1Q%2Q`)s<W,6&,>4;[VX([$6F/qA3/u]p*#gkJn3C=!%)Q0pkTMEqK)i>8]<@T*4:#h'e?:#"L"T2A%*Oq=LkqHmB&K[B98oS[n4SC=%bQ$Rnl)(B\Wd;T:dZ-H5cB`LJ`)X]/^5g<7^M__`JPpiKFAr[YMi'(Hmq7B])C!prSt^_WRO44^hlKOaCEQdS#J_2B!@omcRd#@A%m$;nUH4Up[UP$IqJuADk-D72aC(M53:Bnn%Xe*[g""u!"4KC3_+Pf%s"jrPG]9-I_5>$su4OnSq5Qm@Hi>CDVf;V=GhACj4Q1;?^%=jZKN`KeNb@%BuUM%>(GbJk-NI(6<ncPs<ucYts+(m]kT_c1PMiVH/dN"=S;<L'YAL3^_aR(_.5.V'u.BqtS[7o=99*p],7KqdKM%o@Wnrf7O*7Q>F)RWu(dj,uE8b]4Zmi'j4]soAh@cPZ/Zm//,PHC>GDR'qXRlP"i2kB5WkK!8$8@Gp&#=e8(pT_;(G&Xqp?TguGV*%jPOPCj%u8)q-ir!XB0IX^0fnsLfB**R:654fb/55e#GitA6fR(/<JRe)3W.#@)'.`<d1+%5EDYUn(+;>YsH:!1=`/KXgu#UP4\"i%+H'[diU58?RckHt[2I)JJSeMtEe\_:]^eLeiZpg*<\[4jU<Q$-<m*X>1E[ZnUq"f6e'o.qq:Ze`V+lQd#PLt+W<6M'UD-7a-?\V%%i`t%LL;hUYB&4"(#5RQ2g`'*TkEGA+M]F'q%Zpb(qVWIe5<FMZ:;8n./5nRHhQTiCdX0o\LI3*r';jnH!)uAarDNP$rXW;.-n91Y%((P3t=Q2h95eJ;R4XBtb]S;Zc'DF4]5F*#G_jE%<KqLmXpLe$'WbepEqMWh<pQkp[bGV=l5@GQ2);aDXApJA-nY?4$l4`M:T9Qu.%N`+##_oo#qk[>MRp7/P$iIhD$['X%4-m#:/s3s[.j-uo78L6/E6VDp^C-8>$X[jqR>TbW#p'l+A0`HNIakF2c$)To5/"mcQ6iR`K%NMF6s04GWcgfU-Z:(KZ0UO"</Vh7IN;5.fp9O9SN"n#uu(a:5t`9ZXt%-;VLLmf_#k=[_Xk+GQbL^8./KimW\(b`nFKpG-0,3d;A%ioZUT$au19B7tuP*Xm*f_Li=6h8FUnmpsgT"W-lA%=)j'0mkH2(\YEILljS<(hYCP-j_[Xa:Q-n$l*@jDZnkjOU4rF/0V2'Lj3:0%cf.YN&?UYA-5P9sLYuEI+KZ6339%aic+(MW@V1/"U-V!bg=,Vjq>A,/Iu%okBP4!F7YFYr0<GbnfN+Y8)bl.d$!Xb[5:emY2YN)P%m@[J1IeO_ThS<@K:TT?s9P%F_7);)AIbX2IH]N8];)SN*M<r?6VG*!Qqh;^3X,>)j%8jO!g5<.VlOBM^^%cG:W.`;BjtB!dG6"R&%Ohe+lOVEj1A3n0CS!q%c,2E%sabY;+)JpW_#qefa[V?>8mN2`/pq'h1T&,ZH]l.fk_d3js3QfOt`'TF(qp*'KT281k38]i5465E\%L(C%W@g]f:Uc'gTk<T]O;_i\r7"lAON?O)q];dCgh$jc]K:&J%_K_$"(Z@1R+%:%17+Fs3f+)g=5=GJfib,/_Xic7((74`Zie=\g%!cCIam)NV](#R9F?*Oq1m%Q8jfpU&HG4-As;->gMF<CRrOJ//kV`$5Njnel90Eh!BncJn8e%#O/N@48Q3DQ]:F*uL0B\!ZudX(*/%Que:J"_j!@k6V+$NB[DfZ;0Su/e;F%4<L;=7*`oi,Ws'R63`XO6.T,9s0;[\8qp>\6&_W%X(V&&3CqeIO$VZf!+u(ZCHUkqQZ:'=%1)r;D2Qb,O][<=TiufEjUu42;Vt/ZF3(JP8;)F"]]T6cPmnaKWhQ)E7kH2a3@k79pgrio?Q)6=UJ:*(><BL1bFXN(XVRk+r?cd7)%ZqXHF.XjG?GTM2p'\s6g;7W*4QIqS*-_fqlgWY@:YsM7&jf<Ku.?BqdT,:73p'GdeCKP80p^c_=+67rVeoRBE6Ic"2ntgu=+t$J*%=arBs=Sou9FH<jMF4L)I_R<]PhFt.-Q6,naRo=AQp%c?%gT_p)2X8(I)'VIk0KO)]eZr8!SYH:E-`g!Q8*M(PS?gHXe,/=>*n'L@%A*!<//,P0'8VlW691%3jR!m`TiHn#X!Y6Z5o*Fls0\p5)!#.'q!<7j[?o&2'BH6mJEgUAO?[S%oc;?=Y8n!]$UT-!`QO>TIp%PXB%P*cC2*jKP"Q!Jrf0-7kC*'$qqPB8IQ#ZDp0DlL=0MO_0q@KL-OCF1;.KSLPDnQlPf&sj?@/Zi!jHiQ^Mlr^r2d>osul>p?iT*&;Y%k!<<!hqE36,5Z=2#HX*@!1F864<p$/+GkV-,:l?QiS\.4r9YYj*1EIVk@J>ej,gh(E]p4OX;Mc"9n.j]nFsI"L14?0.[U-=NA$k.%_/)IU$qb;tUb>km"<12gnp8\H"]m->fW7LuEVQ$$f\^$@]4saW][X/F0IR]6:.od3'LC[Gf,bHshcFiXIk$8*Mkh]*2@9-#PS1Dg%QF19-HIUP%`4o!N)g[%/Eb6L^6h?N\(+2qt%MQp""KD.>R%1F=NG]3I6rl??-;3F0S>;TjUE3hRRllN8:,iQ$(1-/n2D^jn`'uR%%,;BE0KL1k1gX-e0e-1tT$il\W9+ug8!NIo8<+nQkTUXGN>[9IJK]oG#\p,0p[q(YL+i:Ie->[RQ\W&n6N.g&4*Oi;!6%0Zj8S*k,%QlCcG^nTWV-d3%;,$XgIZj'rGne9c1E*U#qBC$&Nn)(,Q@'J)Akso@@5k<!+fkjii!ls7s7;<G*)KO$41ShSgTSC9J*#_1S*^b]'%!X>L+mUQbG-@1>(fpkPM>Q.g251R9^Y#$LCs%u9#""JI/Yk].En88,@`#(r&BC73Fi$LT5V6nX/A..k/+WC0?&T:D.:$Q%>mu`T>%34>-XqXFQ.B_F<!eA-KF#gkl%m<fIP=SSbhU`3KGp@Z](HT2b0H7JX=PG?Nb(]n<L\]Pf@PU"()EH"9m?ro(R)IjO=H(P*L5F_-[%kb*i;Rudl`'tf.#2VAb+M+MgKSuS)."aAr(DNbV?4*YRR@"X?X/nA?FM6f]BA#i`rS<eH6qhh<P43$Jb;LaWAO:SlS]Wop1:0H1g%52O>OdkP*]>L*>,7ng)KE32?Pcad*Q?2h'T%RnI>mlB%<N95K45u,`df]kI2@<W^s5Lu0*=iUP+8BAO*F??<Y?)#4gd_4]5VUu4L%<*(3skr@V#82bXoNjCIlEVd6kh]8VI)(GHCdl6O_kr@</,sMRnCITkhj$<BF<(3_FoV,=bdrDVD$[&t>F-+jj%^nDna'B&NIJ',u%f72@m:b/$Le8]e7*olJt0JQW]Y2b&PUupE1>m_ggj1q*Dh`B&6:<+MTM_0J0F7AUh?-de?htP@!K&a=87Z3*C/PpRqX5V89e[>c:%XrS!]`Z!0OU[EX3^:4[3AXPh;d#'3VGqOp=.:1H^*j+C>hTKLZY"<.%RaHcI,a*aqYoqW2N\,ZA5XfK)1+6ql_Eg&EQ4a7E_Y$RD%A3q+%mCpE0fB6e/Z[[PX(,aa22DSGAd!(Yo9*"Z'A4">/fG81,.3Q'42,:4q:2=geb.Rh'+"*QOR0%?k'?i9PiFs]HJiIBC@'RND%NEeO&jUMngJ6'!ZS4lFT#Yt7b;XpI:3!_1qqdp%!YBM4-Z@9#&TE0&:M\+p`"$sWnH>m4gn8B5G:\kCs`[<I2*>5,LX+P,L'OTd^%YIl,*J&,)OOg53b:@O7I\M:%-J9S6I.52%_7f4D6A?fig;h@KT:(71VZhZs.RZ;6b%P2!aC0tlZr9.!u&Ip#P1D[-,A=;_O!qBIf%9Up6doh2jrM*pIYE-i3G/ORg"&l]86rA6E9!GBRm-=kE:Y@3Z(bP^PlTJ2#M%:Y8'%\H6kN@WR*3-jZR)S@lq^_*Kegd'eu&6^oV%U*#C3@8Keun[`B7=.s'S9Db,c0i*$%+p,iZf]6+JnD'KYQp\Q`@TP+L9%A[-Zl;PpE5rjXJ^!GAPK[IrrGT=;HQ<A>W&T/AB[^SL%'Z-C`)C4i4:Y3^VKuu-5!b!n;mXUO!SUK_O)eL4:g&beHk`MBJ<cAB%EckpnWL?&=ln`N?7[L*QRC$0Z:AN@QH5o\bX5(BsSOj=T%+GY!+iGoU%]G(TZ2;##S8/-fT@'nh+#&Sg:2@;DR8_<<)B"qnW`'57bC5'o!"smQ;T=6):#k)+m=]<uAf<.ijif_7FQ20(aLQU!j%haII@"oNh3d]XD[9NV<llRfqP`6L#A$b],XeQ!P.@T38[odq3b"(&6!#2'#+h_K#P7[uYkWEE_2nWT\*lFsLl2.DLmp=.Oqn*RKF%1NDs%_ZT0K#4,It`Ng+"`qE^S)@X6/5U:AedDWltA!/\BTPCoaO\l4>kT&H+UQLKqmgU%a\=Z%gU5`ejhXr<A>(2lacRqa>OQ]rZ%([>u+.9@ZmhZ7\[5iUAt,or6?/KCOl[UT$.jXOQ;_l+$*EKXlNilXanHVsL;G812O02[_sB6^H:hm0GsZX!#:XcR/%=U&pqDG3V/%bPGQ2YlgBS*X`ir(OMpu6T>4C?]ATJ%@dg)G;ulI<8uGf&>5"e?o0L8F)Wj,`>5h($WasQPG%e_<B,l*7fL-;58U6nlG+g!'lI=k%JrkrGDDrSA:_G"\LT3dSfP#p1,t>6>pTSVN<TNgUT/B)H2pd<E5W,+I02hHP)]'Do*PGSFp!i<6TKBL[s20&R+A@G;J-9>gar'$9%<EVeUD!*^=Oq6'F]49o$h.81fZ*<OUMul(>97WuY`[-/rTKV[Gak&oI[U]C_9]82Rs1fQ4O"Ur^at6dKg$1OG%)&6Z4d96@'8uqs%as;%B:+14$@5#W(MB7%O$p]mO^+)-R+It5f:kDE!YFA!m^N>DHgE%5/(n5+%+/Jp<dc<?Cm&^\Q7uAOQY3<;c-85!$"g9Tc("'*:%n$RbPr68%pCrKkor/s$HaLAX0@BTpJCcNMHo'sZRq9Hg"_]fYW)_ZhS_oBS?KCDaHlp8MP[(I&i^U_o$du9tsB2fBmBSH;Z=VChh%LMo_RVVAC2-HYi?f:8MR#Y;0"_?1ue'3YAaa;;1q,Y^opa=6?sb<R&+FC0NIhlT?6a(*/r5AV\hN&XS8GDgA*=>[1`EhHlFA`s7V%-bNmNZ"e#Z:XJ@2a>P4uR`E49NDNDq@S$<T\M&=0L(c8mGjc!gbU>K5At`c?]tQl:`,?=-+@/nZU#Y';`Z]b-F5J[S+\>Jm*M/CH%#TGl)IVQ7GrOn@AFKK:-G>7,%APJ=BP"9dY4(C(S=:mre7BID]D9G1d`4N96'\N)ZTZX[pQK/qspM`)]B;_E-7ne]R@83PMU/C4+%`htEs7SRN<ECZ1JOF-$:DBoceG:t6C-,nZd09@jdF#2MTZp!HuKJ5$2+hQN`\PA$VS0[E-(um(`Akpo%f^S1B>S;\^.59i?@9M+G%MFB'Y<?nIUr@&WI4s[!p<.pi4)?VOLNrfXNTdB1:@:0s;YMgTSKhkQu$C[hIePM3tkgAB&dl9m$V#NAIqUKg(\`PVH;RRR7@S2,?%EXF]TVk5KZ(/>SO)h(1jR_TrC[c(BK2nptF)n7@C6Y%V0#EWM2aQC$-FZcM1bdcH*kqM7d7[HA,>R,.[L>7G1J)qf/J`)[L%5Y.c%n?ptJ0Fg/A@V\EAR.bmYH?K__9L\KRdIn08&S7VK/-h<.GbaYt!i*D&6._VY<[mSSo$oHE,^NsK%oE):CL30o(/3$KI]BPH\X8%t%(*\g&C6sEBU(LYnU1*$T<MMh+VN]9QCc\o\Dri3_OYa,1(1;t3*_M;hNMb?^CoqSPW+:'Z.rD1cpM&:<%1?Gn2K*WB`]3'hK/#8h%hm+i^ioqhAB:lPK>"bU:=4D*=\6]jB(/sD#*&MCP(2GL;(HW#&:hJ3T<0?_m1"gl.APkksaiQS(1BRCLRa1L3,@_h%0nfk2BM#mM%O#q94dlB8a?Y.YO'ESk+30_E8jdOaL,D$c7L&H8?#R5`_;1i2IDr]7HTkb),>7^^Ybl%_k0.o?AYfmMR`/'P4"&QBB3WGIdN'CgT%b#E=#s1g*.ri5pu!j"XkS[`;_,Dj>#L4SU!<gC?65'P6(jkU%r%/@RlLO$eq$DAX"XsYfZY;^Xdg>AQtdp`8"]HR[V%gI#9%edPD%\hTf60M&1NEi\h&p%B.+<:JQ>U.1o"<?-WBU;NK=6"H%j[\%n0Phh8kNf;[OmcN/hX(tbYmk[uj./^ugaQ%`&/A=q,"2e+<JLqa%%=7cT82LGH.2DdGL9"ssRn@sMpgjd;ZP"(A]*M]&/&5m;:;t*`u85[Q;CPkNK@:70T!i0+%X#d'\'!QL0Xbd?r,:M+Wq;Io#<Y`?*%S.?E&$=s.+,t#,DlZQYE/ce;p)-37aQ6,"Drr(q4B83+1JnGL<gJ"e3&2kR(6<g/c+IOkoY5$O[Guq&8,4$4BKKEfh&aojs%59>s%RR>;lXnmflV._LuHO0ukf+:fXK)uJO1TV7!Cn*:L`D/J4Usa`7>iu'?o0.0)_LNS0kl+j)MKOV#PfP^81D;#olS/6XS>&4V8sa.E%a/8CR6i%_lcGGmcnU`H798(BD^)h$uK6F6b6_UHP?LZ"%MF/Amh_S!-\%TVLHTdTV3<K:I]NJ`S^A?4Y7QcFK9afSu@AX+l2,!i0%WprA>@GYfh$`aNRIih_b=j`#KlW6fZ47=>/1G#2LioM5&#6-B-O-19h2^7!+pQE;reNOeH-u2a)1(9l/i\s<]gu.\/O:$RF;Tmt%%CG"H><6-ka0Xa^U0sq+2]4rqaoha0Pp0Vb_G]2K!\b89."nicPHRY\Z-R&p#_Yc?MH`'>`gOG*-B78?=3#cYRJT2YOjUK`La\mjX%(ud9;]n9D\\cN8?N#6?U(.QAV/^lBffQj"LH5DS'Tn_&p^!'GDDasWBNe`"L:gsB$)[sYdoV<%E*erd/1$C`g99XuC8E//T_J'`>%K.qC:o.rQBJNQ3=5g1WH>js^`i6ZsW3Q#gCLs_Q-ZG9D%TAfNhLQCRG]V8u6nf1;s]kPh7C1e.r1C^%J^OMZQTMVla%*k;CYJtlF%nO,S+),>_>?OdJ']RTHWD)q8_qDhlUJERU#d/<iQqX6h$BjL,McVrmr[@RrShON1X?F7@/QNpg[H(:/S'U&r2D5?HZZ1dMo!uk!:%3KkZP@ZEn]aQ9/3;KMl2HPSMY2sX5PW@8U7lN3YU/49\#8)@$MO_mBI2?RSGA]R_>(1mbW=HJUp9=D+F\ZU-*cZHe]]Dq^je,PZ.%32rQg8+TGS:maSKTS@l/;[Nc,:dfikY`@f6EQW#+-$eP\)g2jTW"@(@Et6H<Fh9=sNFu>doh[k;M3=c3a.jra8Mi6(2e^prY:%=^%Xlj"$A^;XE=Ntlm#@];u0DBB\-FDj=-oIaR[g/[HnJK,4Qqcu7;5@ZJ_j[CI]KJIDkE@H4Z1FN'O3Igcm'1&9N]fSKC0^+gX5O?d%mP"TrOV2SB(o!;WN9^fR9EWt'r@'8U%tcso-?*]Wkf6U/-T\"hEmm<n!37a@Z'h_aV@H'&N+Tg@=.hfc;jZU"#9D6kk#K.CZr()V%WXJXaluEQnh*9FHV<CY/S7:ZhX=F1c`'%P:0G<IGF2LP><n<dZE_'.J\AKkj:2_Vf*r2,oHZnD8b-5V93J9ko3n06lpM#ugem$c'%r1BF#U,/Rq&R`J]_b\E=;d?EV@8YA]Pa`3^U5e3s(tR&-=oiZW=e?@I,4(CW7R.\E#T)p2s$n^l]$eV&MK70d4[td;\9("QTej%+%4P>>96L)rWW?J^-WV<<FWF56j7&I3knb9V?Sm@RR]nn23<;gFG0IE9A$q^(>"k9cZ>6O[EnAaYXIZ7Wf$s]]*1jE"P;b>fQa]lBN%6*X0u[J/F+[4sV-+9sRlEPm+NXNBMa2on4L-2I%d\T+a(ji+Ac(5BAdVl7fh-7t=scFET<)?2?/6\`)@RV^nA)'08Y#KqpFb06BK%E\Ah=DcfhHlmaJ5FGp20Jc\mKNsGfM$6fS2!`'<,@Oth3?_:?QQZXT)D`/hGHGmot-]u&SkTiZYbECCmm^^q:fmSb_*EaXPAe:Pb%_W6#YDDo6_/8(_Fc:hmo%g3C*U;#;I`3*g5Ct5ajAuo+S9aQOk*(kCsP]"F<doFUG*4o^Cb89.2NI&5&k6@QpM&f`$1@>5ndmaO^%b2fs6Fl1#W8I;4?LS3:]30\asiH.@]AM2pbON%<7#0GGGIiXKQI?f"Z'OMi[Q#TY1;=aePe^WBn5-p>X)AkR<m\+5l>h$lm#^92g%'.gq!,JLWA*t9rRR6mIr^eJ\b/AA(WFV#O9Ft7/9Fs0f'Qkta*dZ"]bN&OpR\\aG)<XJR'Cg[qH'n6G]rJfl/*E2V3A6fh5\VJ2h%0?hS8-"/=n,(O+CN(XG`mUk-T=N=l"+F#\F4-!7R]C$:_(9pJs))BNPaeD\\[Kb\LU,Z<lPVZELVM\Z-0R71[m:_8`In+)ah.+5,%_BObf`=2P8'b^08XQ/`2Bo4:kND1@46O37WRX%!"(TU#coSilSj%q#]Q>$J1H/5QqZap[J#'LlSoEP+8pVI0fj;8@oEWnTj8O%a_%_`L37L)FA1<Q?lYRsdFr)sIcrR<LbP"Ddk.@ADT/DJMC#HgH,=h&\YAM6G;Y9B7KkJh1t^@Nm\:ifo`6_O(o,Ml<\YKQCSgVKf2]%i79NO9(fDB4jpMS$c<`#7NNJ5ZT"urc(Adrp\JF2pLe#%^"H5/oYB)/Frt0kOhQp(b!^=+Ru02JolD*P&RL8JJlO:X<M`TL`gD$=%\nRcrW3)S?r*Qe"N]Z`/Biu)=l)LI?R-(hjC$SC'8_tD(/Q2C/]]=2K(W%Q!`ONqo`99!_)&&@(/$i*tiE*X-S94>C]bC44E*[93%Re"N@ko-p.bV39aY7qP98uI@?X_AQsa\6j%"u`m-.ap4$1$o9]\#5_(P*&VRVn2*Dh4#Pb(725'G:-(.1s(hu00,[Rmn:cL2V(@/%`'@;IY\'lgk=o@V1,l]"6N`33CtFOK2o\G3T=@@9Dn>u/-#TN=12a=k19UTn?C2Ea@G$XY5VP9B+*TDp]L!D7Cl_goJb9h!`'ASE%$\TCl^F[FhQ43.*ck.IhP2t+XGh?%t[*(p,d`F)AH`@qY(uI_Z<-gm]n)7*Y3)CLJ"#b0>+cAAqI0qhbjPS``(TZlrf>5*?.VQ+/%+d>B4d*"`"_u\mZ-j;aoQH2>$Db&=qjL6UreK75CU/AKGOU4RK,T&u(BrVCmK9G<g4I&;:Uc/a:&2MZO5<"N?ed,nj.IeH4D[9'i%N^LBeh1$Mo7U^bb!c%4gKe1^YF6;J31JlV1>ld-".di5Z;o>2VCp&<`#Aj@?0^5As@0haLBetP8H3-Q%eEIKH6FG_D=L"]P%([,H%f_UTZK*c(U`'B!F?)"IfnDQDa'"_Pc6QA@cIijL\6[ejgYQE1B?%Tq:DqKs<no]D^h7fl'lDO\j[/:30G>Og:1Eo3XaGma%HTdTV%&Vig?_9Nr(Ma7H_O.s12qA6S)8Qrd#rr[=REO8XCJK8fZf'hsfYBA)IN),WO_WL42@3#+\U=qB2fD4;@a6O+caK`U/T<V[F.&Po7%>BP3Se.6\?=:#0VrSFqgR/:G#b$k_U(Ueg]Uug\[=O=KVAN@pu@Y'BMm8iom1Tktf`Nnb@E]/1B>1rs,L)g'7"rhX@Hd/Qqc/#UY%;`^&C1Xuc`:`SN_\Z(k_,BdgSZJ=e2@[@mpE"uJ^$71M.B'(T._K4-E<fD5CAXgAO@EpVM2P=UmPt-0#<U2kYKAn3F9/ZuSRDRHW%LCN'(2<Fn-cqM6/)A!M>K2t$Ph>tVbX2sRiSf3c75VgHh$>N+f9dq1F.[P`^A_^4?h$iEnTQpU%CGIn>-2@PAeJ*7Qk6%M3oc(oU%35h!A^:t0?>?&/2:D!2BEi#lSKWrP@AH7h5L\`s>kJbW`r/HaD4J,SALPb#dWXg?m&iolpeq+LTa0cKsZqBD-4iN6(@%)b1quK.<%GQ(q._R;0gZ`#$.j=lWV:sl9iO%`8c^CO(\#"c$l'^QUN6I%)XM,?f#Ea_0R1\-<fa0KBX.:^c&aR0qV'GW?r/ioj4&rMKF!OW3e%+4<SiogNmr!KjJS6@M@(dI'e]TrHe9.!F![$-uso7QuDkS7m&f,dcdH:aJ\_-h55HMGBVT^DuC;!%BZU#G85p/(g3/ZD[aJj!AR;%+tEeX>cmSMUb_;LM-3R2Fhn<NH9bG)*A*J<6d2:Sj#KmMnLjE-\ASQfgIbXF.SjRjM5gSW]?V;"('G+5VYat'\\!ff3MpMH@c^5U%O+SE^iS\&U2G[Fa+PRFK;l"R9"S)GoO'g\JKH3oIW?"288P&6nq[U+YfQe?[$fs$2;)%AB*%XQKJK9<@2],7[1GLe2"Bb@?<UsTK%[kT,B5[UG>RehhhDeUaNQ!LfWg7]IXP%$>Fko`i-Hsc=P0nPNG\pl2f"PCBoe-rmkhtrJ>TYr[h;I.7n7SKSY^*+Ei*)nail:""I%]9XT5CQ,fV2,3BHFW/g<A6NWZCT5$RhHOpaUZ-bYf5Ba4Ij,buEB);5e;.0$./K$9dZXN.R5p+/(6oR#*<Hq<2(M\R*!.8iiu$J%%P"+e-UCF$Z"A_8&GM?u055b7U9f=HAMN#jue.Es@Gad.oENa>ZkaoXd4a$cO;odDV)/i2MfRmpM]J1WY3Lfg?%T:9/TQ5cQHIBsh%S!N"!q7WSth0<\?@2&uXbpbi%)Wna/G]o(&+WODW7VtM_#H)BJ7[(NXS9tdRB\%SNF2Fa[4Z2LOnuY/9H:/3LdUYHGnh)4"J$>g1%>J@'N[4:k)q0SZmL?hengb_)s@9^O(:iRLtXQF9;LZ9>]);C]t<02VH4iNO2p8E'A^:KLWk([15%(.g:=>DTRO/0QK)"5I`,6@'`%MAmL`C#UI0hG4TC(nU7!iNoAhg\B:0k-Hk$23Ur!J3dopNs%0s*iS9(QS277Zn)[cgdl5J@%+brM:>/rQ%erhau'mI/o.IE6l'Cl%3):\%XK@`hEiE`se5ZNUGajDNc'i?]OTPegMZ$#>d-'0<n70b!';*ae;N'[QK^rX[bEZhAm2H/E\-B5H@f3E$k8FYp/Vrfhr;su(%D.($%.L8I1Zl6Bhe,N^?3:h^J3O!,9>Hf/@8>8b3<!6e71#<IB#[=0Z6Oh$f?O3"i5a\Xp:W(H/7SjTH"piI8:K8]>!bq"mFiCuN%h,q.6IlRoOfb,m9<O>$,)!FknD6.qYAtr8.I/j.<H^!UW4H_:@S@T2BCsI>lGX!V2nlcoS@N?*s8FS"5`=;msL2LQ*'a6Ga,rcSC%66.WV<+U\>7GZRs/LDV2$_kLK2P.?:#;@pJ^^upA`9n^^+p4WjY`$;KLeUXgs(c1K<EKlbq28??O&(oZm'LNLaC@6uq!PNTT!:Ol%(-u92"4n?=`$j]QYno.WHu,m7)Cu.:JH>f`qEp%bN^aWHaY63:*ES8Tgn74E1\`!=0na0i[kW_1P16h=OXF/?^t;,nm"KiacS=eZ%n;07C4K+C=kefi1^G(r8mUft18R=R5!7FQf#8@Td&*QC"W$>0>agml39TNS@1?B>_A)\*X`.1jt,r`(Q4I',G;=UqL$@@pB_R%4K%*Asm<SCt'1mVBo<h)N>Z&#S$:4s87S)V-lPr&Mjhb^SV'30N(LMtNhpd)LT,LLH/\pi`pJ:J@RXRQZnl7"#t:`,UU)JH^Z2R,"c@%L,EI#@.8?d[o<0^28\H*&0q(g;i61_2FAU+B?r"ROE?R8#$dGJ(bVisUW9LARFTVBGP+P>BEH1*4YV`nUJ=G#=p>0t5)bL!I^Xk+%R4PQ7hDPpZTW;Nq8nsl,8T#S*oe6'Z!l<YGmuVCrDf)&1<I)L9Ir@2i4k+AAEu3$+7"#n0oZ*;]JVO>ReqHLXd_p7R]cP=68'Rn2%\>sbc2)d*aHrU\h,NS0NYo`t>rgLDN\mWPGY@[%VN26_:>I9LoC)[=keBHmh0MeUih,4h$JoX6,dI*uBZ4bX7fmo#:jA.;..<!hR%OpfEu:pI/]?g.RB,NJt&rc4C4_\Ceu1KKaBp@=T<SH3j*=m20H5>n5eRAUS`QW2M0:Lo8&5,a2rg`2T=D.=e=fDPeGe6[M/:ZW/[%"$//?cIN@R1l.Hl,k:DYXJ[%9`+o)Ei%aCk%6:df36#DI2`SsfV29b'UuWYP[SU?;_10N_66[q`7i1[<SCP`GmIO/^]G7UA+_6Qg%2NfcgTF5Ft/&p8j/]Sm"Y"J+JHp6ta*Kig%p&!i)*"HC@iL?urPN-`<cQV+&GGD<<20n&FH!GoC4Y"b#0I@On;?C2q8u%+<16%Ya%f0*\r^d'jradQYO>Bdac/)&o2,oPH7<f>[V3+6=8m"H^TQ`:CKnQ<jcZ\QNJFe1qP=k4s9[D`[e"EGY\[qH!-Tc9G]B+PU[*^t:\%R;!h+:HqD(F2l$5N2:QPJ`.*bC66OBE4$`-81*a=35_>K2]N*XBA@$Q-utPFM3hiu19jqfr)8T+qERk-RLTa6oH8f0I"+-bLZ(fB%cc`R0p3L\$ANWbFirO"Jr1jQbe&G)3aFWEBq@$M4<cWG6K\$$-&&5*4J@)!3HVM(P%^c#,kQMU$)h[?;L00mHr#:2YTtk0g+s,QQ%F@lDc+;7ef<VjCT-heNf)H.@p]u;(CLmb&\`%FVYGU_OSSpNVbh(r@&`l#RVouHu6Xtb<0%u*0K=Y()-@pD.u1"XAG-=!^,]eG)n%YiQXg)DJFNT`%,`#NY$1*4]7c3A,_E<<#oSrY%DSV&PLiohuj(bc5^2@VtUdMFiR@8VjfA]m6=9&RORIIlY`\=OJh])++X(,a7d9%A&\jSq";b)&]O'Qm(rA06=#rbL+@:$5&Uso:;qbR4l54'ED>e4Ksm`;pJY`2A?#&m]OO>.>`hIm[IRb2Tp$3lMAtj@%8fpW&Dg4^%55:)K5U+,#s#NlB@TV&([>:58jVh(7G@;36@Km.uV59L-n_olJ]ce,ISTPm%E`JVK&/d2]#rg]P'1m.F?h.CVilJIJDs6qogh0S>%-L\oUnN:sjXdW2TGj6-:hcDN)/4;7-<0_T%n_U.qS#@u0$Gg>h-XEr#>oluqWu)M5=n1-_#`e2](#)Q<>O+^W$Ei+Dkgt\p1NR?+%SE/JLjt'";bMq:<^%HOi%K;,S1H?sak>)_6Q1BlgiAV*6NGO8!aND(69YXG[RPg"g&s_J`#F!(sb(r%P6M7aGi4F';Ee`O0MtY;j%(6*GlLk55?I('u"+3qK0@&1kT`>QO"K#XA1X:$bF\A6&)rR?^SkF8^4`1f^.PuG']^J)L[R@#^J!T=3qC6$31K/=/nX.3TuTqh$M%<VPhIpPQEYEa,SEecC_/l)59.)s4j0Qqmh0cPBNDi=:>YRp'A$=NYj`2oasBdd=EUq?OIO@NiNLfgj9Onp77,;Y>"WQLhf@)`tgi%WLd>nM<utT)/K0Ueo__1A8M.&-`lQ[lW3]c/'8N,>nV=Lc^;&UqtE^U$d7dVDnCXm0?3pPbJ,a&M+YRcd+>t5<pZP63RRM1"0+NJ%3Tah`qCtu0Qj581p8\N4F4g<FO"^CF8VL0k;C/)a-#MM2_\fAsJ@NasH#.Jl0N(:XL81F20?en*p$fSlIjG8ANjm^b/"n@'ca;LX%AfO^=H`Yqin%92KGm\Fk2hkc8+lEZn_S,iVT]:6'l&Y,3eLKDuDCncD:K:Z2OCX2$am.,<]`$@GU#]CX<bg"*EAIe7q'Dqcm5N:s%_pX%"H:i1#!6%obr'T#qZ#A_l`TFr3]cLu>MGR8b8(8$sl]d/hD`ek]OW33A0d_DO;%"KsY[,Ei+DmQ6!Q1da=cSFTn?%4=bt(kH%b(Vfg+FQm+1esk^_Ze03c;S$>ktKm&Qd('uNTOKai>%N;U7O4PBco,Ih`*"F)a`qtmk9GV.kHRi8'K%1?4I(h4;J5gg9dq["u6:c%XO!Th7&qhLQU,9kB>><4fn/Rm;:a/"E?Spk8oC2tY-t$O1>gRpOcY2u3HBP%elO?k<-l&qLS0E?aIlT4VpF."dd4kj$QP^4MWe#s%+E8-*fS^cne=m?R1.]/eE4C,jQp\+3ipE8RW`l>V'hb>De5!g*Q$30+G',S(oi]PgA!abe-\J-(=;X";3r)H0%WKb*0RXY'eMbG;%UJQlIC);f5,+/R7)bc"l<#as2euoKGe<B,HZ/7U<.*k<C%*Qda"d6d1cbdXJX!C!BUtkEW%Y6M)og0OCpq.iK`lkaA6M@'^[81J$%Hp*ino)_5]@_!G$@G\6AeoZt?[3..W0obl;%-L]g=BQZk4^r#g>M1CJ`b1:JJP81%R('s0pM.cd7d9-<J.No&TXlfE8?<)@b@"&r%l2+le&&SUE8W=8\**/7P^6dquPcs%9?!,"!&_>_:Nu160r>Q7Oer7m5*mBp=Q$[^qi'ct+J4Mp+8_JN*#W"es?sM[niDhfJ%bjih%<q\Jp6q(nX-ZI=oR_@ae:1[rL<B'G')nqC@?`cKto)^,1I,#%9=?VhC47iF40PAjN2LWN,!_-K;M[E,Y,./NJ3OPeh>WWkSSs_R=%Y#G"+7Pt`kDIHn,FGSXFI!HsB-8Wch;eQuqGna35W'%,MB&CCF?!q-48$*=4jEr-9.>NH*V)BiJpR!`_>iX%sMRjRlIh"i_@Gq!l%VIgM>'=LjbJB]sF5@O7)YD;#3D^4-7p>hj`Y$Ycbme'&ndlcdj#I\DMaM[Y+XE)ENo,]#]htNSE^8.2m_mgZtg?]sKTGglOTFaBr%TG[.&^&Z\7PKUdAM^Xrb3ncb-E]"j98^aR/'J:AO3E.)c@9GtI\JtuWNX%)9/4+A,A`8tr#SoW7)5;c[r]6E&(`&psOF=uB[V<F#%Yc_Xe]ZoZjEVl3se]jI7#lN+-7>/):+^PE&V?i"XYVM4I.WX)1&q1/2;lkjtI]NLcOA\mn41rV$'*tD:[2o'bJ/FXBcirA]bE5Vd%cAb33MWeh1n.#U*!?"NA,=nlC,&&\IT8l(BDR^H41(Z42EKrMHg:nQr5r9li+NC9@2?2GCZ<r'1*R*93g:lhYUYHD:'cgnU-6TuI%I3X#DJ/Cf)ODaBaX"cdq#fPYZWi5-nB[,ii/m\h+jo7q?@R"DTl?X%3@ml\_'U3;9'TbZQPPS:;C95Oc6XU4[Veuc=!e2<I`a,Sg%TGUPke-P5Ca9KYpLhXH*HcC.nW%/OQ#X1T"$@t&%rNEeS:u(Y<=;K;DEU`Pkne"MoA:+23?!DmZ%<SQYH!=b7,te[4@2Mc3)[T6.%=QaqIYGu2/kW6Fra8l@nFoB`G9g[C$\(D1id_&C:_jZ0loHj]ni4j$U/H]!,BZW7#QD%_[M)O;3KCsunOMMH1`V_dlkXK[O_[B!/%<7Gr@X[tqk/5"9=q/1!a^:tZ=_/h)LhIqSOW#!\4$h(oehBh+h`m0li&7)@cn81CDBjJHjcq*#E@A!\=e3eYhrE@[!ZnR0d9ZLae%8H&"g`Rte(.?e(EE7"`?@Y+G;*b)T0Wc_=)M3Yl<gAui6i;e,1KPt@:haV_@`8-N%.Oq`_01'lH/O<LiZC#NrI>=>V$R48*e9c.:%/?\dAL3SOARi`]1RA%DL><TZEs*ZpZgoZY4%rD!mL5_FcT:okN^]X3-fBKO&q'YNNf[^g8jV)6sq"A:c_mMj9Z(2Ckm-dcrUAq`U%0q<AA9[dEI@C'(Bok:K.$(3h*r2aJ/;uO!AAUdf^Yf0pi11X'Y1$SiB&L#mqi)DuSaSV[>]144,-iduq!aq2&8hp6qFV8>0Ye,fo%`+4$YW8I7GjY5<);7#[H<YRglnlXK2%1!1WqD$Rm5fc./c\]96k+<!6DLoj.a'iDBo;C7S>Sumk@0G#'94<'P=/Xt0A]aYqY*`p,%$4M+''ClKAhFJ5_ipVN7gp[>G+3[Sr4F\EY+](gU`Z5+j[NII0,+uIXX\+_B8rhDTr,TClJLpiNi&UpX6>CpCh9NhhU_Jh=_"]lC%;I]^cdM`D?dN!<'BdQQD_sCtM/,Q$ejC^$%.*3W(nV)5>[LM]E\bX'^G6.P*OZAtfW_Q`S^umqA]],Nfl)7^mLkCV[otZ;q\-tad%i01Dc%!rmS4(rXYLNLL-r-mHUKQ'r=\EMA(;ZRF]Zki6"X(BrLTrS!3%N2R2dR%.I9"[1.ffWJ@_STW\T[%Wq`m'q^WWj\`!Jo5P%%p]kIdN,/i_[>DA&UV^V`21EQY8`WoaB$Tj[T[GqS1eJ4<@Q,jbVf90.n9aTfI-[f?'9X0=C,:+MIb]/DR`Kdb.\q@W82&e$[C\Q%bS_3/b2M4p$YUL"7'1)1JISke=fMWf@o]e^\$Af^q7;XUd+:]=20Ph(T+_NlqiHG]N%#OscY\UK#p9Rh_:9S"Nnd\)'L!ICMY;+.%fEEA7@_!F,]&=nn2umQnCdd#<Y&<#n`M2Vd,,edgo@'Sn`8F@TPFrX?"kV\0O&BoS6,7L;%AEXOpQrdf)62'e4^pkN'<aL;4@UH:%ccLM8DAK"t4b?48e[0(!mMJ;AF&@SDX<N`.QI-T;6=`o`Gb:ms`KK4T#cQb.:")TjDGi_>ZtV(%'cgp8>T*=O)4gKukqDdX%W$C2%N0"TrO%?pkT>UM7@4qfG+kU[BLk&,)@DAJSL2+[.dLJe?R$K%HjXSe+VHWnf8BVh?mAjgNl_1=K`["\R8a2-,rc8nhI:?C]H<c_O%9HU-SrPGN3P#\`:)jQjA<67E=;<mJbG[%!OEf\_W;$"P/Y8]f*Uu*h\7A[*D9j/oF"n&]d9UJ-2",?>aD4P+TommHmUq#e$/*c(A%)PgJZ1YW/Cb.\pU\Dn[9#V&\ii/tAj'dpG<)gcQd<5GuO0d'^<So5"63.Sr*_RLV(OYGD9OYB3)iNYJ+auk'4QtJK3Bf+e<GeehV%k\Nn^dUPXHdgd58=[$?LOX3JW-_)A:kAC+WKh1^Pq;a9Jn];<jq!_&L0R9;GR.Emeag'Om4rJHQi-[:^E'0Y2Ee>2T<_92?.G;_(%LB4J";nEluC&Ni:G95\$Zf3fuiF'F#(djSY=UaQQY+9o1jMQq])pZ0gJSj-?@QT2V+bY[P@<CEs]H%g^j0@X+*u:*F&*8Ygh6%.W%G-toR1M/5;>pco,T<Y&&09o8a*W-;?AG]Ta&'TOZqff-$C.:;P>&0nU`%_3;)ag3'P7Wnt\AA?2EOV/T35BLfC3R$MR.F^T/*n7<%4ba[j[U705.E:`^UgY^X&T-R80A]J^A&[MuYiu8<&EaCR8'/NSis_q%WTo!f\=43D'M`ZSVaKiNL%tq4QGi?ITe&rk?QL.i/cakI%K/F$9&rPBJTg@g=F@'8k2%n3a\J]%#?<IMOfW7u#C*>>]YP6jO6Wl<p'=7CJ\$<2?I)#BG8G+PbI=8^0lAYm?LS3Vhg?%1^`c5pZ%'@AF5$`J(ELe72G@6Yf+9*NaPO<P[;j2$`d$Z7;_V*lT,TM%RDiZlV[.H:cb\h:Go_?:od@3T4m$r9;.^4uQKogqj'ql,PDnu1k;%:)?0;&VAp#AfX^k<O]BfcR(io1C@/&a"\(?EC%I-c!eX$CBOEl-1E'0\h(a<rW\se*%e0^2mTI&eEqY9N'j]4[/3][#*:Ns4rU>.%YX6@?joWc"G)<:jL.N'</WGEY&@j\$o.]Ntc'Lu+N#LZF`]:q:CG7S*,j?rJpVCE/"h)>nn=*%B#CfWV2tY9sL_b<G?s5VL]MFTH%rJB3>\**<sDMJr\eZ-osF]!Nd';"jB2'Z28Qeb\NSb3pGT(Z9lE$WB$,bkU&ia^We]cLu4.^3_*38QDf]<7W7P/miF=OI'1/VBSu%==%n329RB<=MHtrpR>`5bsMN_H],-(ho[_C^fuB$T&jiAm"2,!B._;'oKC3`ANjqg%a;/d9dG.^ck?r62MNPs7=4-0\Iag(&tP$U%b+p>3`e(_s<RuWZ)%2S&H+1($(iEtR=_/JHs"B>gp3QMj*L]Q/.boRtfJ$*(U51aNA(lnth/Pa9N++%:_P;M82Bo("8=cU3,r&/T%$_uL%!SM9T%DK;PlQ%-[MMc7e[]E,F`W<om>Z1'/\XLe7#j^302jf:h1L3e5(i6SgGK?r[^:asaHTg"m+-]4;R_AOB_OR5dbCJB8%XJjmSKe^@C\(3f8`lG.RBO=A8;V?]]r2_%WV$o'9NXkd0mX-8CHYJ0IClD#&]P2IFD%/pgA`a;\R+o1aelmLBS)W:,gb)E`auUk`%JaR3-2rqi)4QbGhh1Rm[$:sj92nL]`Rl+>pfct[O?^SE=I)^cJnpbm$5o-(_/6^Pg0DgQrDgVKkI2^E2X7HLB>Lpc`s,`3`E\rrJ%d:#DR8jK=sM-GE#J/ZR>+s%()]%Sj"oh0G&6lM.>IabHQdq`Tt8>D0;>h-:X4Oajr<!O(D-3(;K&r"3a,qs?ZTMEkI!?_G3<#^-=%%Y6M\Go7.TNF7l(Nu6#s7`8_&-_s"P""2NnU0<X&Q<Zmb@hPfqlk:*V)\cumJ13)NG^d""fonham\)1<&KiMFe1>,L',bOaokTKN%"*GLf&DPK\HK-H0T\1'?qr'=1YBb7m`GnZ_c'ZM8;$Ssu^kh2R.jJG#I&"S)cj^%Qb*)A-HkSb]MYuE:Rau;f`flG/86ji)E4`*;%%T#HJ\4S?O@E$(7-n<9YFgq[TP4$=$YJhoh%4DF6+9ir.p8Kj/;\N1LXhKp)s'>LNgLj-<Sh-[U<a4g)Rh1m>#Bc_>4A$EIb;/tu%A%@/PUjuIgp'_P><Lq)nKfp<[64/?(!*CLE;>d;K"bgMfSYKW83>I-EF[LLC9Wl6@:!le,TpC"7f^GgA<=3o8lUf8Y$`/cKB=SJM%-Jq4sA*t'G=(TI^G;I-cmaqf(noiY^gb,/&>"T)l:!mFTNt&$"e!U+PG`5(7Q)c"KFqe`qLY?FsC3bcY8D7@0DWqbNG*9`Eq;\jE%PSD,(Zq&=j/&@gG.fp/5MNQ!HQ8`1P:#&<<GQt\]L_^2XF&8Ep2rtUWOuA/O<S^9[mMM!^\LUrHF/1qVk-CGb'2]dWp$bb>S;@O;%N_O#"a2q9aqjaDRaNIm)jheMK"],p9\XXSGA=BiKr@,P`kP?]ekB*HmY-tK>Z(80d``BU!`2$tbW&K_m#U0f4\VN[GGW/5=e_cE5%0kFpVg[0a&Q1+%C8jR1l](*U5KRa:)(($iso#iNJ^A0lk-n1I-a#!UBgm;#<_>HKEm95acs$>@Vb%?G-L4V4B(U7023MrFS.N1[_%rNg?nI4HTO)F%#o(&eM/QVJYUV*tNUMZe=DU9TJV`T1H>6ibg0#T'uo4kb*tXOAYHOlc3h<09DB:t)--:MYl)ffBh2AXd_@G^<u1%b<=a4M^n(b;Q)>,K5:1Mh;K@2cFDNI,\j%3%"R+kO4\37f0a%^cTZ3LM_0A<:5m]UU\9?=3"-2B+Hl5"G%%S0pYC=Q@Y.SJ]tKQ\%m8nHO?.ng$+7I[^:n0&nglZ^!Ze`>!RfeC?Hd#Lqlr&tDcttLChOZM9_7-^\o=<E@]e3q@Ke.+JO[,q$F,&aK#IS]bEPQ9:P2k)q%`]/Vkn]&2gL&<Dn)$qnXTkL0+36N15oo;WhbD\-:.-*()?sl*3"N$Q+Pm2D^WlS>.'%@[[6*O%(bhG,Ni/ctFV&C<@=XB"^=I"t^%OK$c!#ie5GBiKR%MqF6N057?_OBli.+ko(13E1qN_Y;Z5]%4t9:/sQ"1+"(M\]ufqJW$T0Z;25[gJWm\4U$F(WtTb]JOjM\(75N.%a7iK=KfV?=I`ETn-G7jH"QBu7<Qi/7=AbS%hkVf\Eb]R,;N3]"fp>4>C1#ha?6@(hE?MMed1UQMN?TMBEi*siJYLmc^85^-\9ZPm%EM)q&FeC4UiZIX8L:nXUI#6DIhT'V;WL>:=E4[ePVe8Zb_G0$i8l.cA8s6c#PrKlGRp]c3(PePV$_k%]^k_q7<Du8R!Yt?r2U-pb%Z*\8Un5)./_T-=R4JXquW2mSeZ]c9O+XXPPbgGdV.J_`2,TG1R+!(auONb:E?!1#XM2t8N$?"Xq4k_kZ/cTA(Cl^M.7VF_Bm=)!:%LrX[JjQnK4Qk/4\5Et,S\5SAMRLbm]%&o,D=#n0UD?nW_&B=N'YM(F`CFs1G$J&qFGXMU4&IOm]lD>OC2p24q5e*`Q+2W[BoHHp!%d$0jUYr'l<8P5]i?UIf]#D$WUY,bGbO&s'mmTL)IhDX+ZM/h[=&:=)iU_97s8-bnD4%!^['bM=K`(>rBfYD2>[q$SHcXnZU,%ue<%ac.1Q%d7[CFMeemJ0_NF^g)AMDd>Y)P""hVX:^K=R%3"EJLj"PRPE5V^7>E9H@6]CMg$s8_<*VX\,JL%K(*5^LnK:QQjKm91,k#(%ltO]r]Jo;I94@mHVIlA_2!^OYrrOD%lFN)J5\s*n=@cBO"lH&mVIlXE#S62YmVu(-`lc-;a#54I?e*)RH)5<;4q@.31DZZ+#FUi`%&!gFI)?K2QgF2(1\5l&_B$Z+sd]Vs4Q&k[qO+8Da<cXOB0Lt&^(`dm3Y7'Z"K5N5LIp!BW%3m#6aWX*0OM>-]N0tr='837sg$c(I%iqLH#k;MDUf?:DM6X?#p7dLQuTKSRuoB.gG3Cs];;YM.n:CGX<1$*+ZOa1e8P1Y_%!-2(G#fkoFFa[Qg9DAjQ3`HbG\urajOa"kV%au\S$Mo`3FO2<&&/&WtY,XtJ5+/,2AM:Mq2YR1K<2`H]EKAL5*`Ab,O@&rY[_2,b^M+2%ZP\]2A@Yp&IM"6*3+u8AH?o0/9#/nq0%%)LO?LEfdu'_R#WO+q4=K^@/uD1cP2![9uH+GR0(TcPc]'uLM$P)S>@6!7sDHkA_aOOK2Q/KgQmfo1V)(p$Y2eMmNN4mA,YO%V]K%!@WY+Pn;b-fuTZ)ZS<()`Z+EdOjW%r/"f'N-%*)[?Gtnnb#Cd>/;H=d3!)o8,0QG#q0jf,$c4QTAnqVMOTe;*]th,j@[G&.'.h"A%4aJN2B8<8tbj)F2GR_A9Z\q5jgAiCZ!Lf">UYhP7@Nj2E/^(6q7+/Xn:Ps#=K?1K[hRu(kM2_ceG$m.]bot62pLRUIpej0PEbC#2%%j"K\LBo*f)RlnVIZM)N-*]$$`JHc_L]33$`l/;UYP<gVaFU\&%?kgo<lQUsCB!>.K0u^jWLRC"90']m(ZFpm$s*/:2NrD?6O6hq%=`(!0=c-VXP1r(gH":eW*_^_!Ph\'lX$m"=_AN!PTdkZo1@i9>_([:eaNf#oq.!Ca4l2$f+"?&o31-XpH`COtSXg8rS/(12oANL[%eaIl&)o?$Y/G?skJIh@<b$c'LbW!clYE#:KiU9(ZPq=?jE7P@tgMC<r0P`k=2^/G>he28/YVgcHO&UGr:Nc3;nkD*?UbPeJ\N7fT%F0HtW+VRq;!R6jaq0&8X45YG[i1h2FN8:,lTu96FfOADZ<8YjrS&@Htq4Or::;%S],J]Ga+;Ps^6V8/!e[=lSma%k:6^AjHK3iAo%nHO^a+X%$pD^4#Y#rMZ/YED`pEaL#!!.>9O;reuh!Y@gEI*P@"+Rk:BC_iVF7rW6?oa$tdLZMS[mIU3j-mschR+E,k(gGS/bZ,M8%kR52o(-gHorpprW,6Pi4JB)`.fF;$HJOJ-?D=\O2B/tq?*)K'$jrbToNPc..of(.9TWjCan^ZP4P"?]eIDF0rOthTkq(&cUm6(gk%#Z+Og&kH"0qO_NN_^<9;K&GgS,sREU7uS[HX*_8iGKVi$Jsu-+BuL_/K;aWYpQjc#m+i'.THe,XEj"*ID;p0DOM'KEc+XHOO)KVJ%V9e1jgjtnN1OSfl]q'43b<,6SOlu70P!E0%RX$:GP#q2b]G%^7l-+=a@+)d74+j\.cSIQ2>FP#&ca@,#5.[HJW6r+h[\Mghf+K_"%LV]d`\#4DrK-((TlscNDNX@\G;58?b51Zp)UOmur"Qua'33IQMo2WFLQfG(dB<Nb0?cC#*)F<+Z_3L3sEit5k@_=^:=<#oc#e2q>%3T[B"iJ$,k(NOoR*U1[IK8"JdB79MI332,ZDSDR#e&tgV$)hcL9fes=^)F9:9[6e9oY\,Dm_=gh/nd=^eC8`5'jiuabup6-SS`#Y%b%)JV`!=QL?'WTj1u0CApD;R_E<$]thp#(1Zoo/rF!JujWAqLg!hMCr(,S$u:X/C*j3-c,@s][T?usBZe:_1KNf'"$aE#c63(MfO%En'D$dn]DnWC`f>hGa#0A!<\I7+Ps:H6Lie4XBKq31F/?P+JYsCYXpWZ_`u#V]KN`W^"%hX.D,nj`59Gq1$kFB>,HNpZ`_\JH#Ei%h^5_q2YQ/bN1ZL@EXouLbXntl4O[#1SG]4Aqg.b!$P:c$@2[/!!T5gTOJ41Q`F(5"`R&Z"Vl!b`j%Z5*JOr@^I0YW0]9^`CVp'TD%m4K?:*'Bu[87uK,pXatd&O:,cNT_UAU>k*O=?H.VAAO?M_(\2)8JY,UE`KK7p40*:@ZAe?i3BUd@`p`e=gOpfT)ticM"Vl_J)rsG%9c*3KRT=mA<)d>3*!);qTS7JYQepHbK=bM1`DNB,3rBSr-J\9OaBFoQ6CaK`dkiP(7K^Qp%V([UMqB"MrK`r7*nGT-"_/O^Gt^,]%o(*QY%$h5']+a`lj5OZ(:$&UuY]<FC<0#rl++b!a%4O/V/%;cAK5qiTClXti93#PL##'pS:aNa,fMY:B2hP-I1FQ<Li4/'AQL.\5%N(16#%\B(a+hXhrfV9TH+/e*:rLn%Dcg[1fQ^/pR*:>8E/WZ#YR(9p[o*.%CDJ`pci."Eh@.212gJaf^hrGEkIYns3CJZbB!)_hg%K\3Jh/c>Z)%u5T-&Fotk.9jS(EsoWA0]C8b`f9ik&na(\K8P9,7EMJs+&hhe39TYg+KE"Jps2m+=b@m&BJ(mElJ7jG[UM@dH54=&%`JVH[Jj]]6RGNb&?>iYGX1"6QJkZQYP,a'?)H3_I.]1cSeJl(kVi1l&;!m!S/V3"ji?V/+n6-QU&u+_lR'fS"i]=Rt2)4Rc15N/E%EWa1@:>RX).C_-E(dJ?K]B0>-n/eQ<qRL#q`Qe`L$*1gRrSFqEdC>di7*_sS-+V<]]/A`\NJ-c\d^oJ;[FlC7BXgM_gpW>`C(D,j%U#;cVc:0ir']cdU5Tn5tMSuLG;m[aNL1@,.YMD[&'Lu/>@hqS=?8O5XMn`<Bqdp332:O(tooq;MH@)!tf<q"7:5jOs:qRHOjcICL%Do.(MPS6c\-^&0SZW9&EiRLNg)HqAbEC38SWH*ad[BZbn)PNiq/C34SB$EdT$a"'C($n,e.:(Q5bBrQW=A/W(kq1[aP\d80h#b&O%bjiOf'[@5lRYdZ1RuW]t+/60MUi0.6g,U8V7INAFDr+<*,BI-RD>1bjpup+SXk?Ou7^oQ2eHVaNmE/$5$%(SlXa5`B7!:-]d+"fB%]a+q]b?o'W'M//G.S]="'F;`_PMTgpG2]N#L@ou/PAILjHCO)qGSn_6QW#!Y>)g6u_G>Nk2qhEXZEm<$^!"Jc'h<ER_6WkPp*-A)%e:do8;g:Y`##\3J')hpqZ[aITVAW).&;AUl*314Kr?)r,l707t#)*:UClhb5P&SIFCD44>DuVD+$,(h;*u@o^"n<ss14a-D>F<.9%-$7jpYp/M-@K<0IJ^dYBoaToG*InV4GTcma%8"XCmT+.6kZ%W([?3`\L>dg#7]d8u#tt.A=>D0F7cCVSfE]7gKN)3b./*lQ\QR+[%f7RA["_!ui5t`>76@/3pK5bePBD'ID5VIR#%oG:*Y@?ul@lKW,G]s:d._"s%;-b92XYC&TQ6[8:Vk=+%7i4alEeY=r#(T5Q"ceHk%G#Sdq&Xcm"dn5H#kEmf'bW'E'6M!ab/QfK&L..%dHAWO"1*I>R_[;S1k>`DC6^U*1R7RhHWXs<m]IaP%C:mclmq4GtS*eMlei6B,%&?'DreFL#<R\i(EL67;0]eMn&Obj2^1X0.Ug3Kio5*&:bG8GZj<,^m3Tou:CPZJhM?5gAGDcKYWqJeqKY30+%A[e]MXpeRCY.$`9%76Tm7ojCooPV8)[j7GP9;WQ#qNVR(?>"cP5'A=T-Ts2a#m4jTW$gH\2U*V=8.iU``#!36!ccfcJd!-!K>:5/2%,^,FCK@J,r!5.e%=9VM+K"mn!DW-.<[;-#X[^'D8B+17nL+_78mEfH%_4G6q>X3O481.JN#A`%V3<T$Q',q.A$Tb1&;lSFXO=_>]\fVfU("%V)$BB!*%IJBqd)a[q+g0osF2\b!UP+H\b<^Q!<K<ofbP5fBB%pm\!;?,^Cq/X0'HQa6?_mPTJX')R^Tl+p!`ELn.@%ZNRffupj/KD2UgXuEm%c+&QiDpRC40"i('4O.(%ePC9e`F2,XoB_^oS>aH]hlZ'J&)Y_'$1<fFb*uBhk!#r(n`C^)MOt+X2pC;(QsJOJXSp-P7T#V$d0D)b%"@sgn:d7:l!q5$X#<Ql7>%N<QMEjnWe+eW&0;qi.9*YQni(#>,kf=m*PV?ePo+M@m$d/t?`)<Z#+WX=n!F\8)Pft!!)l>0f.PYbl%QH(KurJ5'%DM<OBa'iHaPJt?Z_S`V.+@#u]Qko8[%+&$%`.q(\(gbgnVfS8Y*VTP^#'Dg>pA-Q1*%7"F1[#LL9KGng(#'OR;Hr;i%W*S"3I/W%]6d4MOCUIS^$s:pBj?DgC"L4qY+[tk5ef)4QUSh:4I26?XniDCLPcK6m7PgAVilu,_O+WJmI2MB8A+>$l]EJ$b8e<QI%1+<D^=CG^f#>1:f7u5;.eP[*#8TFfhgG*i3SVII`34q[_:s*7Do#W(@QajT,OeC;n-,%gM21?d*+Y\f5cU72]-F!tiWkjQ#dhe.L%F^mZ@m[EXg'IAFV#an/I1IHn-@$2ak'PYD@A-c\Bc);\^l]B+p=Ku2/W@*sp&q)&)_[8+9-Yje'VYlWTfB`<_paWBb*7Q8tNKRt5%+)eFi8-N@mjuYn-ac9)jL!9QgbUHZr'<r?R89B`r0^=ft-1$"\<mVVDU9d!j3c9]L?loOM&b6,\XU0cE2l,Z/m=paYJ\!.,Jq<_:%RkZQ.V'^aOr>p/uUsP`t%je1d/Pf&`>iIkc)rZ&$]3UFE7ajA@T"#s,M93,.]dMr2e@n)N8.guU#i_W%Qj*B20!:cAs-7abXcha7%n/(_HGaAI.YY45mFL3-*0JqDdK7,OCq_;mM[qfRl)uk7d7&6W[IdP>T1c$ja[?RMk;J&BPI\Ng:)2B$Nemt73'\RX8U7D#ClEI?C%'L#+[,E%),6=&[46/^?+/is!3_3h%2;0GU9!Q(L?%ME?Z)KN-Y@98Ml_>%D(M9Wiri_9,BbniiEH*]+3e64,9G$#IK%Zk0?'d?=:%/(=(odM?Ou!i+'W=N+[CF;OO=K._0FfO-F%g/n-L=eu]&^pb./l2Z@>f)TuV2cK[0)_>\G+]j1e,l02+0++&Q6^"_l?S;n1<ks,_%mJd7j_+rs>>?E^V'Y5[AAc<2?WgL+OToPG%f*7A/A?KbG878f0<_AfXKQSDL:F5b\;H5a7Hr;l][B?-7%%nl^85_cY,moZlTb(4;%!D,j+[u\Ggs#TDR@X0K7CYO/Z==LiM`sI)7>P^/"fYjs03E=7D."3[=N&2j1SjQ_!Ntib1dG"J]*pB]>S(lNeX1")f!o6$D'0S7:%9gF#\9VM9%da%fH^/K<mU,giJp8q;q+O\R!iD["_S%XTW&qa=-8W;a:iJ`?*2q,^7A3-^8SG&.L4r@ZKi,OA'C"5U\'HZgia_K1.%?NbbN5r^Aus._<$<CVH&*@?%lC(Wa$,1g5/HVXj*'SO$;G",ZXURkms!o//9:+6@b,=)j?!@NJ^jhXeO-+4O].GuQT]s;/CTd*HW%)9D,!^uW:\0ZcGjPE7sj%&/=K!L#ra19p^Fk&J@br[p+WF;<*IN^VeZNK3JX]Lg([rV/O:CH,FJ%[[PJIHd]]J.u1<a,i%d[']K'%6^'bGk'c;E41WiR84PVF+-Xi>0EPSi%Aq#P`0nr5lU:[7HaK<hPKhg%'#KMVo6I=!bU=@IlJj)Nb.Ph!k1UKW.Be*L]e[c($$6[3%_,K7!S'W<u*I>tC#RQ='2<Fh5H"5hfgG2qW)9Di\6sW2mA&[RU;T!)E;==FZmRj!A]'OIg(m&NI6`tioB<4_'+`4(a,f*e5J,+-@%S>OUdDb/>>Higk8_(CSq(r[?0IT:]%3[5ja(H$9d:RJK^A+,[Y\s`>l[F[2&kV2^Y(mo6G<V8THn?cOLhi$f-?#oGe:kQ:g'Lk$c%X2f1TfDWM%1;)Yf?Oh`UUd2EqoY,_'>A#c80G2W]65lbbhPH_G$"ftVd=&q=k^gg;,->?^8q)W:cN\G2'ZLpM+l:A2qnf7D'9dt$%X(8W;6.+L37;AX%(Pb^0d-D8p*8r->"3fRgR9sq*EFa3i,9r[Q(/1'jgmpDDMB*8EGIWAr#PYI%b?Hga=;)YuF&E3T@X&9VZ/Ll`%96VM9RRg&!PHR;C';Z&1g)LIQDNkr86tUOf1192(81#e?/>qOa@r<,`V<L.`G/]<\Va0e8k86N63&+6rb^.SiHD89emPE)@I"0QT%okq)AJmi-`/@kuu9XDX9^^Nlc7>;eQ&YslrMnjf3H?!&Qlg;u1*Qu4?iID</;KmEqFu4bt)/`%H;d=o-Fo3]L(tiq5*9S4`%0*uf%@mDnF2M(bYJ]&I\,j`&_W9+9XQsu5jh=)qR%3KBkZ@T).0pAi&B(chgOPprYU7bp!6<_:UQM#]M0[mba.\uT7GYC"_-,k%-,to\d%?fQS8hh/QEa48^XAOt?%YD%-fjHjAT;/t1(d?Km_&[H,MRUNf\kM]"l*f+7X%+20W^9MjeV6H5BXR"#k"4E8Xb#"73Y*OLj-SRYQ%V_X'EYZN9Q.fj?`0?&RKU:aePL.eHVbU!s4'isiP$r0ZW-Iuka)e>-70Rm.2D3[D^H2[o]BG$2K7A#+ZMX9Hk/5hfJ5:Mf]l)G<P%ePtI58/k-*-]Hfm?>`cu%/&'DH^hu[0[X5"/=<V8fA/1RWWd%&K.Zem0u:@=H.Ws:Y(`S\1W?Y8J>I,3n?"HN[Fga^4GO?,iOs9P%@Qn6O3EuBR\Nlqqj73tKV7<IM'8r^Of1<`UBlEUIN32RtS&T8US3*%%?!^$Ti2m1_EIBm'Oo,h9]HT[EncuNEZD<='-&[Vla+D$V%otfHOg<5<RM0Td+5t)%\8;7fp(JUmhFqNb6d.<Y_9.D,T'19C0VqiRpYn3oo1!qHu],C_O;c,,V-Ab@f:p%E8&#llcR]!5<FtS\h%GI8e3\bY*m;@;pocR?lS5$DkZin9$aC,>'YouZ&%'Ws]u.rnI=8@JlW,jZqpXMp:@=XK!j'#667,*B)e4bi^2`_sdFnq[G2*ln?3%oPu.n>>IN?9<i5K]YT+p+VI<,,*j"5?O^[pIs[RO<#SW]Hq7e&<[h8hcrL]DZ%'La@7K=(7N0%[*+[7s*/P)_7Z^c[;9+@5M&;?i%6Z?,+V#)r_p9l0GEMl7K&iJH?(bL$b$XfVl,1tnX+4NFt<KoC=Q>o>4^l9qDs)sYV(AQ,:JC+iX'GRM)Y6D1h@6od.W[hVR_ZM62%"%"^^,!3JE*#-?lF['@].0Unak\(kg5bt=mV^`+[?JE#TmL4s!"P(Qua7)tGX?/`&a5*?+[tPCY^kth\?,O410%5gT@NS(G8<J^u%RlHJXCU2lPEES2sL$MTuHC8NL@<[d#EY&eOn3r\\,YMeBc9Q7mq6FGr8l=u%4m><Qf!5:l=8%95e*f[opULoSU=!7p8#Fp^Z;89]%\@GTAC^e-\%EA.9"]\]3`g(M<AX(Ps`JUaMUr_ANJ-cU`#C&:.28c`V+K7&X`hOC78D4nl9.$R8>)*Xq0^=doQ+;h[6(U;O_=t<u%)da!ERSTbNSA>Ge_U>f:p^4%'5Cm0LHj:Q56$jDnQVuO#JeSBXmm4$2goq]8,MDX)b6nuk)adW8<+;gQfpb]lQ8NtD<L!f`c>Zt!%;S`F&@l1:f)\>qAnSs?n%QRh/iJiKDm%&ND<3)Q,&8>MQ5oM1sk"(3"JO*@u_kIA)S^11XTkPZNdS5a5!O;?@d)&Q=`b$[@cBg<'%+pJETZ=fg(A%;FNoLqj+(BC6BiR3E&+GV3o2l\d@#]_phBP^\ZJSu8um&fI\e"*9m.dmI,RV\YXdVD/dC'qn&<3Y,>\-3Wj[<85'%?qt;\T"MK!#+:ti0q8VA[qKe&nZZ3c[Uu>SW5Oco&b61/ns"uO8<q3]m;g''')<dW80ZV*jHXl1\?.S]8cWPnD[\tklg0qC`sWl1%H0"0$Of9Bp+YZ"biNWC(nb`/C\8,G)%[nZbGS)1nRV-:g%pCdR<FcJ@>C[VWC,8r4"]."fOMa7bp2s09>(:BJW00cK"m?c=re#jV%#t[`?4(1+<kQT_<cuW3p;ChjAFfV<W9CaT9PIe138k$!taj(qA,^Yen[5V^noC"T5Z\FjU[:&HkZt):pOAgsgDHWJ)c'0N+%;EK<%9(q[bB/Jt>-\Tn3Wb5EJ6P,l#6q^4Z@0<rU-ct1VOG.[qMo'&[U6/\Rcf5)g5"o/0E<l>?4+*1Z#6s)7?5FBMJt/g"(6qr=5SFb(%C>rX\*<HC4!"BTP[5uKIKp#_E6cU@[WaINd_l>>*oGgJCiU-\n4X?ksnlm&2W,*+]hBLsXcipeG4"V$6*hdf=e/?>e4g*4YS#%M\%V,@_:!+H:P9WWKP32C9@gkc2^7fd*jG+b>,$fQ:1>CbY]M;2cO;T$+Ee9/q!?S[P/Xr&?"`+oJ')?!m,@O1<gS(X!SMA*i_[Oc5s%edLK$E$[g#UJBQ\dcZ`<g+Y5LWq_IVoUt.eU+&QNK'nI:XXqVY(?LQqV5R=-:HEY8=``3`F&NnkhG'/.fB]Nj9jE_9'mt8kDS1E<%_)uQiN/b\]]94:sED:q!9FJIY$l98`_0:#2]0CQ^4ZC`^09jO^ZNgQl)opQD@Dr7WBGkRY"F46IZNj>.HX3r_\Vjjc=gM`bDY?b?%c5st.'L-s6.Cu'_:Q6RB>dF\&ek6qQ!kmpM+fL/r3Vb[i,SfUace/EX?g)t4/7d!H\:OD<B+NusaWEA&"^8..oB_V:cd/2?A)H]e%%jHZ_`=1AbWPJkuf'E]14`\ghLWnF-Yq^UpUn7PO@CANoIeM9iE;)5:d.#oj]Ke/fgWm,1iMt>_S>D)EZf^U_e:4Tufs@n?HRdLf%r9V8;X.Lma8+81Tj3PdnA/H1?SKb491-+Q<<eh2,.9G+'X!;2p@E#tJ7U9ET6>Sc=%!UR8Di-lnni%6`lnBcD"]tHtUjZ18'+'Yf%7Htr381ec"^0SA1`mo*&:9\d5-Zu>?,sDFqI2M@g;`D<bo'IM9dX#BM;^YW<)(_JUWX&jT@-SGg/d3n21A6gTakbCbUk'42,*MN`%'^l@jcQ3AW)$?N^KiKSF=N;tS9Mlm77$]8n+WsT`Z;E?E5YUHXe;f%\LK'+=]j;K:c&hQHncXPQ9_WNnVR_ib-/93`_#WQ?RnRUD%h3gSZ`M0:@*hVc`TRrr=q-IHr4nlN!1[&^dcq8k+cCTJ);'a/&X9T*Y[a\$/&WoE\`nI3lUVTbY^XF?+e69=/6fpZ>N*kF7-d?'u%S#jiWNMdWQ@^i$?7]Pe;fW*+&/)4#c`MQt0X8<;-Vb4%OD>Au^9sfu[Q%!qaceKhf-op[9IgqfTN"[op7f8_\.?e4W6pu.'U_jK7%1g=9aN.iO+D-nKF&<5,W_NJ@2VD-=rWlT0;PSgAk`]QjB0reD35JEp1V-KlTOA_%6G[sE$3m="b=qp4"/F';#mP.<g8p8Ap6VNA7%b%T0Q1%H][/hrS-WUS/3;j1@[@7]uRPo+42-7R1pl.[@taXrG)hSI9)/=R0;*:cIRd>\3+@WVm@(ou1KNtn-Y)cj>40:*%:\jeG$%Z4J)WO1uED!A^G`T7Phtn,(:8Nr"7:oTrq`qW4o1\QjW2q=L06QbRtC_r%Yis7>sWRr9pO55k$CQa]2/rVV`RgXjW8T0E;@mH*pM%5Q(<JkF^Z2H2Q"3Q`k<lrVY^-\!N`$s7+u3N[gh!Vbc4KiHLXg!])Ydci~>%AI9_PrivateDataEnd